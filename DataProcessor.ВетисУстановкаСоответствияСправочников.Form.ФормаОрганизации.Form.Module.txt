
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВетисМаксимум = 100;
	
КонецПроцедуры


&НаКлиенте
Процедура ВетисЗаполнить(Команда)
	
	Если НЕ ЗначениеЗаполнено(ВетисСтрокаПоиска) И Вопрос("Отбор не заполнен, продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат
	КонецЕсли;
	
	ВетисЗаполнитьСервер();
	
КонецПроцедуры

&НаСервере
Процедура ВетисЗаполнитьСервер()
	
	_Item = Неопределено;
	
	_Параметры = Неопределено;
	
	СписокВетис.Очистить();
	
	_Отбор = Новый Структура("fullName",ВетисСтрокаПоиска);
	
	_Макс = ВетисМаксимум;
	
	Пока ВетисCerberusEnterprise.GetBusinessEntityListСледующий(_Отбор, _Item, _Параметры) Цикл
		
		_СписокВетисСтрока = СписокВетис.Добавить();
		
		ЗаполнитьЗначенияСвойств(_СписокВетисСтрока, _Item);
		
		Если _Item.type = 1 Тогда
			Если ЗначениеЗаполнено(_Item.fullName) Тогда
				_СписокВетисСтрока.name = _Item.fullName;
			КонецЕсли;
		Иначе
			_СписокВетисСтрока.name = _Item.fio;
		КонецЕсли;
		
		_СписокВетисСтрока.type = ВетисCerberusEnterprise.BusinessEntityTypeОписание(_Item.type);
		
		_СписокВетисСтрока.address = _Item.juridicalAddress.addressView;
		
		_Макс = _Макс - 1;
		
		Если _Макс <= 0 Тогда
			Возврат;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСвязь(Команда)
	
	ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	СоздатьСвязьСервер(ТекущиеДанные.Ссылка, ТекущиеДанные.name);
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСвязьСервер(п1сСсылка, п1сname) Экспорт
	
	_ТекДанные = СписокВетис.НайтиПоИдентификатору(Элементы.СписокВетис.ТекущаяСтрока);
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекДанные1с из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			
			ВетисСоответствие.Добавить(_ТекДанные1с.Ссылка, _ТекДанные.guid, _ТекДанные.name, _ТекДанные.inn);
			
		КонецЦикла;
		
	Иначе
		ВетисСоответствие.Добавить(п1сСсылка, _ТекДанные.guid, _ТекДанные.name, _ТекДанные.inn);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСвязь(Команда)
	
	УдалитьСвязьСервер();
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьСервер()
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			
			ВетисСоответствие.Удалить(_ТекДанные.Ссылка);
			
		КонецЦикла;
	Иначе
		_ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
		
		ВетисСоответствие.Удалить(_ТекДанные.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	_ТекДанные = Элементы.СписокВетис.ТекущиеДанные;
	
	Элементы.СправочникСписок.ТекущаяСтрока = СправочникСписокНайти(_ТекДанные.name)
	
КонецПроцедуры

Функция СправочникСписокНайти(пНаименование)
	
	Возврат Справочники.Организации.НайтиПоНаименованию(пНаименование);
	
КонецФункции


&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	_ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	_СписокВетисСтроки = СписокВетис.НайтиСтроки(Новый Структура("name", _ТекДанные.name));
	
	Если _СписокВетисСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СписокВетис.ТекущаяСтрока = _СписокВетисСтроки[0].ПолучитьИдентификатор();
	
КонецПроцедуры


&НаКлиенте
Процедура ВетисСтрокаПоискаПриИзменении(Элемент)
	
	ВетисЗаполнитьСервер();
	
КонецПроцедуры

