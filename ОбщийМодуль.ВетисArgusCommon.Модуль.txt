
// Тип, описывающий пользователя. Наследуется от типа bs:GenericEntity.
Функция User(login = Неопределено) Экспорт
	
	_Фабрика = Фабрика();
	
	_Объект = _Фабрика.Создать(URI(), "User");
	
	Если НЕ login = Неопределено Тогда
		_Объект.login = login;
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции

// Тип, описывающий единицу измерения.
Функция Unit(name, fullName = "", commonUnitGuid = "", factor = 1) Экспорт
	
	_Фабрика = Фабрика();
	
	_Объект = _Фабрика.Создать(URI(), "Unit");
	
	_Объект.name = name;                    // Наименование единицы измерения.
	_Объект.fullName = fullName;            // Полное наименование единицы измерения, если оно отличается от name.
	_Объект.commonUnitGuid = commonUnitGuid;// Глобальный идентификатор базовой единицы измерения.
	_Объект.factor = factor;                // Коэффициент относительно базовой единицы измерения.
	
	Возврат _Объект;
	
КонецФункции

Функция Unit_guid(guid) Экспорт
	
	_Фабрика = Фабрика();
	
	_Объект = _Фабрика.Создать(URI(), "Unit");
	
	_Объект.guid = guid;
	
	Возврат _Объект;
	
КонецФункции

// Тип, описывающий список форм упаковки.
Функция PackingFormList(name = "коробки") Экспорт
	
	_Фабрика = Фабрика();
	
	_Объект = _Фабрика.Создать(URI(), "PackingFormList");
	
	_Объект.packingForm = packingForm(name); // Вид упаковки продукции.
	
	Возврат _Объект;
	
КонецФункции

// Тип, описывающий упаковку.
Функция packingForm(name = "коробки") Экспорт
	
	_Фабрика = Фабрика();
	
	_Объект = _Фабрика.Создать(URI(), "packingForm");
	
	_Объект.name = name;// Наименование упаковки.
	
	Возврат _Объект;
	
КонецФункции

#Область Service

// предназначена для получения данных о единице измерения по её глобальному идентификатору.
// Этот идентификатор используется при оформлении транспортных сертификатов.
// Возвращается последняя актуальная запись (active=true, last=true).
// Выполнение операции заканчивается либо возвратом записи единицы измерения, либо ошибкой,
// в случае если параметры запроса не корректны, если запись по запросу не найдена или произошла иная ошибка выполнения запроса.
Функция GetUnitByGuid(guid) Экспорт
	
	Возврат Прокси().GetUnitByGuid(guid);
	
КонецФункции

#КонецОбласти


Функция Прокси()
	
	_Прокси = WSСсылки.DictionaryServiceTest.СоздатьWSПрокси("http://api.vetrf.ru/schema/cdm/registry/service", "DictionaryServiceBindingQSService", "DictionaryServiceBindingQSPort");
	_Прокси.Пароль       = ВетисПараметрыСоединения.Пароль();
	_Прокси.Пользователь = ВетисПараметрыСоединения.Логин();
	
	Возврат _Прокси;
	
КонецФункции

Функция URI()
	
	Возврат "http://api.vetrf.ru/schema/cdm/argus/common";
	
КонецФункции

Функция Фабрика()
	
	Пакеты = Новый Массив;  
	Пакеты.Добавить(ФабрикаXDTO.Пакеты.Получить(URI()));
	
	Возврат Новый ФабрикаXDTO(, Пакеты);
	
КонецФункции
