
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Ветис.РазрешенаОтладка() Тогда
		Элементы.guid.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьСервер();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСервер()
	
	_Версия20 = Ветис.Версия_2_0();
	
	_ТаблицаВетис = Новый ТаблицаЗначений;
	_ТаблицаВетис.Колонки.Добавить("name", Новый ОписаниеТипов("Строка"));
	_ТаблицаВетис.Колонки.Добавить("guid", Новый ОписаниеТипов("Строка"));
	_ТаблицаВетис.Колонки.Добавить("value", Новый ОписаниеТипов("Строка"));
	
	//Если Ветис.Версия_2_0() Тогда
		Макет = Справочники[ВетисИмяСправочника.PackingForm()].ПолучитьМакет("СписокФормУпаковок_2_0");
	//Иначе
	//	Макет = Справочники[ВетисИмяСправочника.PackingForm()].ПолучитьМакет("СписокФормУпаковок");
	//КонецЕсли;
	
	Для НомерСтроки = 1 По Макет.ВысотаТаблицы Цикл
		
		ТаблицаСтрока = _ТаблицаВетис.Добавить();
		
		ТаблицаСтрока.guid = Макет.Область(НомерСтроки, 1).Текст;
		ТаблицаСтрока.name = Макет.Область(НомерСтроки, 2).Текст;
		ТаблицаСтрока.value = Макет.Область(НомерСтроки, 3).Текст;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(_Таблица.name КАК СТРОКА(150)) КАК name,
	|	ВЫРАЗИТЬ(_Таблица.guid КАК СТРОКА(36)) КАК guid,
	|	ВЫРАЗИТЬ(_Таблица.value КАК СТРОКА(2)) КАК value
	|ПОМЕСТИТЬ ВТаблицаВетис
	|ИЗ
	|	&ТаблицаВетис КАК _Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_Таблица.Ссылка КАК Ссылка,
	|	_Таблица.Наименование КАК Наименование,
	|	_Таблица.Значение КАК Значение,
	|	_Таблица.ПометкаУдаления,
	|	_Соответствие.guid КАК _guid,
	|	_Ветис.name КАК name,
	|	_Ветис.guid КАК guid,
	|	_Ветис.value КАК value
	|ИЗ
	|	Справочник.ВетисPackingForm КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Соответствие
	|		ПО _Таблица.Ссылка = _Соответствие.Ссылка
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТаблицаВетис КАК _Ветис
	|		ПО (_Соответствие.guid = _Ветис.guid
	|				ИЛИ _Соответствие.guid = _Ветис.value)
	|ГДЕ
	|	ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	_Ветис.name";
	
	Запрос.УстановитьПараметр("ТаблицаВетис", _ТаблицаВетис);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, ?(_Версия20, "//20", "//14"), "");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		_Новый = Ложь;
		
		_ЕстьИзменения = Ложь;
		
		_ИзмененGuid = Ложь;
		
		Если Выборка.guid = NULL Тогда
			Если Выборка.ПометкаУдаления = Ложь Тогда
				Выборка.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
				ВетисОбщегоНазначения.ВывестиСообщение("- " + Выборка.Наименование, "Ветис.PackingForm");
			КонецЕсли;
			Продолжить;
			
		ИначеЕсли Выборка.Ссылка = NULL Тогда
			_Новый = Истина;
			
		Иначе
			_ЕстьИзменения = Ложь
			ИЛИ НЕ Выборка.Наименование = СокрЛП(Выборка.name)
			ИЛИ НЕ Выборка.Значение = СокрЛП(Выборка.value)
			ИЛИ Выборка.ПометкаУдаления;
			
		КонецЕсли;
		
		Если _ЕстьИзменения ИЛИ _Новый Тогда
			
			Если _Новый Тогда
				_Элемент = Справочники[ВетисИмяСправочника.PackingForm()].СоздатьЭлемент();
				ВетисОбщегоНазначения.ВывестиСообщение("+ " + СокрЛП(Выборка.name), "Ветис.PackingForm");
			Иначе
				_Элемент = Выборка.Ссылка.ПолучитьОбъект();
				_Элемент.ПометкаУдаления = Ложь;
				ВетисОбщегоНазначения.ВывестиСообщение("~ " + СокрЛП(Выборка.name), "Ветис.PackingForm");
			КонецЕсли;
			
			_Элемент.Наименование  = СокрЛП(Выборка.name);
			_Элемент.Значение  = СокрЛП(Выборка.value);
			
			Попытка
				_Элемент.Записать();
			Исключение
				ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "Ветис.PackingForm");
				ВызватьИсключение;
			КонецПопытки;
			
			Если НЕ _Версия20 Тогда
				Ветис.Соответствие_Добавить(_Элемент.Ссылка, Выборка.guid, СокрЛП(Выборка.name));
			КонецЕсли;
			
		КонецЕсли;
		
		Если _Версия20 И НЕ _Новый И (_ЕстьИзменения ИЛИ НЕ Выборка.value = Выборка.guid) Тогда
			
			Ветис.Соответствие_Добавить(Выборка.Ссылка, Выборка.value, СокрЛП(Выборка.name));
			
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры
