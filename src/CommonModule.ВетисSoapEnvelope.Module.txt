
Функция Envelope(пОбъект = Неопределено, пИмя = Неопределено) Экспорт
	
	_Объект = Создать("Envelope");
	
	_Объект.Body = Body(пОбъект, пИмя);
	
	Возврат _Объект;
	
КонецФункции

Функция Body(пОбъект = Неопределено, пИмя = Неопределено) Экспорт
	
	_Объект = Создать("Body");
	
	Если НЕ пОбъект = Неопределено Тогда
		
		_Объект.Добавить(ФормаXML.Элемент, пОбъект.Тип().URIПространстваИмен, пИмя, пОбъект);
		
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции

Функция Извлечь(пEnvelope) Экспорт
	
	Возврат пEnvelope.Body;
	
КонецФункции


Функция Создать(пИмя, пФабрика = Неопределено) Экспорт
	
	Возврат ВетисОбщегоНазначения.Создать(пИмя, URI(), пФабрика);
	
КонецФункции

Функция URI() Экспорт
	
	Возврат "http://schemas.xmlsoap.org/soap/envelope/";
	
КонецФункции

Функция xsd_url() Экспорт
	
	_url = ПолучитьИмяВременногоФайла("xsd");
	
	_зт = Новый ЗаписьТекста(_url, КодировкаТекста.UTF8);
	_зт.Записать(xsd());
	_зт.Закрыть();
	
	Возврат _url;
	
КонецФункции

Функция xsd()
Возврат
"<xs:schema xmlns:tns=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" targetNamespace=""http://schemas.xmlsoap.org/soap/envelope/"" attributeFormDefault=""unqualified"" elementFormDefault=""unqualified"">
|	<xs:element name=""Envelope"" type=""tns:Envelope""/>
|	<xs:complexType name=""Envelope"">
|		<xs:sequence>
|			<xs:element ref=""tns:Header"" minOccurs=""0""/>
|			<xs:element ref=""tns:Body""/>
|			<xs:any namespace=""##other"" processContents=""lax"" minOccurs=""0"" maxOccurs=""unbounded""/>
|		</xs:sequence>
|		<xs:anyAttribute namespace=""##other"" processContents=""lax""/>
|	</xs:complexType>
|	<xs:element name=""Header"" type=""tns:Header""/>
|	<xs:complexType name=""Header"">
|		<xs:sequence>
|			<xs:any namespace=""##other"" processContents=""lax"" minOccurs=""0"" maxOccurs=""unbounded""/>
|		</xs:sequence>
|		<xs:anyAttribute namespace=""##other"" processContents=""lax""/>
|	</xs:complexType>
|	<xs:element name=""Body"" type=""tns:Body""/>
|	<xs:complexType name=""Body"">
|		<xs:sequence>
|			<xs:any namespace=""##other"" processContents=""lax"" minOccurs=""0"" maxOccurs=""unbounded""/>
|		</xs:sequence>
|		<xs:anyAttribute namespace=""##other"" processContents=""lax""/>
|	</xs:complexType>
|	<xs:attribute name=""mustUnderstand"">
|		<xs:simpleType>
|			<xs:restriction base=""xs:boolean"">
|				<xs:pattern value=""0|1""/>
|			</xs:restriction>
|		</xs:simpleType>
|	</xs:attribute>
|	<xs:attribute name=""actor"" type=""xs:anyURI""/>
|	<xs:simpleType name=""encodingStyle"">
|		<xs:list itemType=""xs:anyURI""/>
|	</xs:simpleType>
|	<xs:attribute name=""encodingStyle"" type=""tns:encodingStyle""/>
|	<xs:element name=""Fault"" type=""tns:Fault""/>
|	<xs:complexType name=""Fault"">
|		<xs:sequence>
|			<xs:element name=""faultcode"" type=""xs:QName""/>
|			<xs:element name=""faultstring"" type=""xs:string""/>
|			<xs:element name=""faultactor"" type=""xs:anyURI"" minOccurs=""0""/>
|			<xs:element name=""detail"" type=""tns:detail"" minOccurs=""0""/>
|		</xs:sequence>
|	</xs:complexType>
|	<xs:complexType name=""detail"">
|		<xs:sequence>
|			<xs:any namespace=""##other"" processContents=""lax"" minOccurs=""0"" maxOccurs=""unbounded""/>
|		</xs:sequence>
|		<xs:anyAttribute namespace=""##other"" processContents=""lax""/>
|	</xs:complexType>
|</xs:schema>";
КонецФункции
