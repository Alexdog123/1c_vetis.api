
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаЗаполнитьТовары(Команда)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправить(Команда)
	
	Если НЕ Объект.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	ОтправитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьПартии(Команда)
	
	ОбновитьПартииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРаспределитьПартии(Количеств)
	
	РаспределитьПартии();
	
	ОбновитьПартииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПартииПереместитьВниз(Команда)
	
	_ТекущиеДанные = Элементы.ПартииСписок.ТекущиеДанные;
	
	Если _ТекущиеДанные.Использовать Тогда
		_строка = Объект.Партии.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid))[0];
		Если Объект.Партии.Индекс(_строка) < Объект.Партии.Количество() - 1 Тогда
			Объект.Партии.Сдвинуть(Объект.Партии.Индекс(_строка), 1);
			ОбновитьПартииНаСервере();
			Элементы.ПартииСписок.ТекущаяСтрока = ПартииСписок.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid))[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПартииПереместитьВверх(Команда)
	
	_ТекущиеДанные = Элементы.ПартииСписок.ТекущиеДанные;
	
	Если _ТекущиеДанные.Использовать Тогда
		_строка = Объект.Партии.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid))[0];
		Если Объект.Партии.Индекс(_строка) > 0 Тогда
			Объект.Партии.Сдвинуть(Объект.Партии.Индекс(_строка), -1);
			ОбновитьПартииНаСервере();
			Элементы.ПартииСписок.ТекущаяСтрока = ПартииСписок.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid))[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	ОбновитьПартииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСтроки = ПолучитьКлючСтроки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	_ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	_ПартииСтроки = Объект.Партии.НайтиСтроки(Новый Структура("КлючСвязи", _ТекущиеДанные.КлючСтроки));
	
	Для каждого _ПартииСтрока Из _ПартииСтроки Цикл
		Объект.Партии.Удалить(_ПартииСтрока);
	КонецЦикла;
	
	ПартииСписок.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТоварыНоменклатураПриИзмененииНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ПартииИспользоватьПриИзменении(Элемент)
	
	_ТекущиеДанные = Элементы.ПартииСписок.ТекущиеДанные;
	
	Если _ТекущиеДанные.Использовать Тогда
		_ПартииСтрока = Объект.Партии.Добавить();
		ЗаполнитьЗначенияСвойств(_ПартииСтрока, _ТекущиеДанные);
	Иначе
		Объект.Партии.Удалить(Объект.Партии.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid))[0]);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииСписокКоличествоПриИзменении(Элемент)
	
	_ТекущиеДанные = Элементы.ПартииСписок.ТекущиеДанные;
	
	Если _ТекущиеДанные.Использовать Тогда
		
		_ПартииСтроки = Объект.Партии.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid));
		
		Если _ПартииСтроки.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(_ПартииСтроки[0], _ТекущиеДанные);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииСписокКоличествоМестПриИзменении(Элемент)
	
	ПартииСписокКоличествоПриИзменении(Элемент);
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНаСервере()
	
	_Объект = РеквизитФормыВЗначение("Объект");
	
	_Объект.Заполнить(Объект.ДокументОснование);
	
	ЗначениеВРеквизитФормы(_Объект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьНаСервере()
	
	_Отказ = Ложь;
	
	Для каждого _СтрокаПартии Из Объект.Партии Цикл
		
		ВетисMercuryApplicationsСлой1с.TransportOperation(Объект, _СтрокаПартии, Объект.ВСД[0], Объект.ТТН[0], _Отказ);
		
	КонецЦикла;
	
	Если НЕ _Отказ = Ложь Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПартииНаСервере()
	
	Если Элементы.Товары.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПартииСписок.Очистить();
	
	_ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(_Таблица.guid КАК Строка(50)) КАК guid,
	|	ВЫРАЗИТЬ(_Таблица.НомерСтроки КАК Число) НомерСтроки,
	|	ВЫРАЗИТЬ(_Таблица.Количество КАК Число) Количество,
	|	ВЫРАЗИТЬ(_Таблица.КоличествоМест КАК Число) КоличествоМест
	|ПОМЕСТИТЬ ВПартииДок
	|ИЗ
	|	&ПартииДок КАК _Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_Таблица.guid,
	|	_СоответствиеSubProduct.Ссылка КАК НоменклатурнаяГруппа,
	|	_СоответствиеProductItem.Ссылка КАК Номенклатура,
	|	_СоответствиеUnit.Ссылка КАК ЕдиницаИзмерения,
	|	_СоответствиеPackingForm.Ссылка КАК Упаковка,
	|	_Таблица.volume КАК Количество,
	|	_Таблица.packingAmount КАК КоличествоМест
	|ПОМЕСТИТЬ ВПартии
	|ИЗ
	|	РегистрСведений.ВетисСкладскойЖурналРС КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _СоответствиеSubProduct
	|		ПО _Таблица.SubProduct = _СоответствиеSubProduct.guid
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _СоответствиеProductItem
	|		ПО _Таблица.ProductItem = _СоответствиеProductItem.guid
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _СоответствиеUnit
	|		ПО _Таблица.Unit = _СоответствиеUnit.guid
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _СоответствиеPackingForm
	|		ПО _Таблица.PackingForm = _СоответствиеPackingForm.guid
	|ГДЕ
	|	ИСТИНА
	|	И _Таблица.last
	|	И _Таблица.volume > 0
	|//о1	И _СоответствиеSubProduct.Ссылка = &Номенклатура
	|//о2	И _СоответствиеSubProduct.Ссылка = &НоменклатурнаяГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА _ПартииДок.guid ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Использовать,
	|	ЕСТЬNULL(_ПартииДок.НомерСтроки, 999999) КАК НомерСтроки,
	|	&КлючСвязи КАК КлючСвязи,
	| _Партии.guid КАК guid,
	|	_Партии.НоменклатурнаяГруппа,
	|	_Партии.Номенклатура,
	|	_Партии.ЕдиницаИзмерения,
	|	_Партии.Упаковка,
	|	Выбор Когда _ПартииДок.Количество есть null Тогда 0 Иначе _ПартииДок.Количество Конец КАК Количество,
	|	Выбор Когда _ПартииДок.КоличествоМест есть null Тогда 0 Иначе _ПартииДок.КоличествоМест Конец КАК КоличествоМест,
	|	_Партии.Количество КАК КоличествоПартии,
	|	_Партии.КоличествоМест КАК КоличествоМестПартии
	|ИЗ
	|	ВПартии КАК _Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВПартииДок КАК _ПартииДок
	|		ПО _Партии.guid = _ПартииДок.guid
	|ГДЕ
	|	ИСТИНА
	|	И ИСТИНА
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	_Партии.Количество";
	
	Запрос.УстановитьПараметр("ПартииДок", Объект.Партии.Выгрузить(Новый Структура("КлючСвязи", _ТекущиеДанные.КлючСтроки)));
	Запрос.УстановитьПараметр("Номенклатура", _ТекущиеДанные.Номенклатура);
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", _ТекущиеДанные.НоменклатурнаяГруппа);
	Запрос.УстановитьПараметр("КлючСвязи", _ТекущиеДанные.КлючСтроки);
	
	//Если ЗначениеЗаполнено(_ТекущиеДанные.Номенклатура) Тогда
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//о1", "");
	//ИначеЕсли ЗначениеЗаполнено(_ТекущиеДанные.НоменклатурнаяГруппа) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//о2", "");
	//Иначе
	//	Возврат;
	//КонецЕсли;
	
	_Результат = Запрос.Выполнить();
	_Выборка = _Результат.Выбрать();
	
	Пока _Выборка.Следующий() Цикл
		
		_строка = ПартииСписок.Добавить();
		
		ЗаполнитьЗначенияСвойств(_строка, _Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РаспределитьПартии()
	
	Если Элементы.Товары.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	_ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	
	_ПартииСтроки = Объект.Партии.НайтиСтроки(Новый Структура("КлючСвязи", _ТекущиеДанные.КлючСтроки));
	
	_Количество = _ТекущиеДанные.Количество;
	
	_Структура = Новый Структура("guid");
	
	Для каждого _ПартииСтрока Из _ПартииСтроки Цикл
		
		_Структура.guid = _ПартииСтрока.guid;
		
		_ПартииСписокСтроки = ПартииСписок.НайтиСтроки(_Структура);
		
		Если _ПартииСписокСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		_ПартииСписокСтрока = _ПартииСписокСтроки[0];
		
		Если _Количество <= 0 Тогда
			_ПартииСтрока.Количество = 0;
		ИначеЕсли _ПартииСписокСтрока.КоличествоПартии >= _Количество Тогда
			_ПартииСтрока.Количество = _Количество;
			_Количество = 0;
		Иначе
			_ПартииСтрока.Количество = _ПартииСписокСтрока.КоличествоПартии;
			_Количество = _Количество - _ПартииСписокСтрока.КоличествоПартии;
		КонецЕсли;
		
		_ПартииСтрока.КоличествоМест = _ПартииСтрока.Количество * ?(_ПартииСписокСтрока.КоличествоПартии = 0, 0, _ПартииСписокСтрока.КоличествоМестПартии / _ПартииСписокСтрока.КоличествоПартии);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКлючСтроки()
	
	_список = Объект.Товары.Выгрузить().ВыгрузитьКолонку("КлючСтроки");
	
	Для _Индекс = 1 По 999 Цикл
		Если _список.Найти(_Индекс) = Неопределено Тогда
			Возврат _Индекс;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаСервере
Процедура ТоварыНоменклатураПриИзмененииНаСервере()
	
	_ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(Элементы.Товары.ТекущаяСтрока);
	_ТекущиеДанные.НоменклатурнаяГруппа = _ТекущиеДанные.Номенклатура.НоменклатурнаяГруппа;
	
КонецПроцедуры
