
Функция BusinessEntity(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.BusinessEntity("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.BusinessEntity("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.BusinessEntity("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция District(пСсылка, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пСсылка) = Тип(ВетисИмяСправочника.District("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пСсылка, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пСсылка) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка.guid, ВетисИмяСправочника.District("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка, ВетисИмяСправочника.District("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция DocumentNature(пЗначение) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип("ПеречислениеСсылка.ВетисDocumentNature") Тогда
		Если      пЗначение = ПредопределенноеЗначение("Перечисление.ВетисDocumentNature.ELECTRONIC") Тогда
			Возврат ВетисКонстанты.DocumentNature_ELECTRONIC();
		ИначеЕсли пЗначение = ПредопределенноеЗначение("Перечисление.ВетисDocumentNature.PAPER") Тогда
			Возврат ВетисКонстанты.DocumentNature_PAPER();
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Если      пЗначение = ВетисКонстанты.DocumentNature_ELECTRONIC() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentNature.ELECTRONIC");
		ИначеЕсли пЗначение = ВетисКонстанты.DocumentNature_PAPER() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentNature.PAPER");
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция Country(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Country("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.Country("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.Country("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Enterprise(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Enterprise("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Locality(пСсылка, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пСсылка) = Тип(ВетисИмяСправочника.Locality("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пСсылка, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пСсылка) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка.guid, ВетисИмяСправочника.Locality("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка, ВетисИмяСправочника.Locality("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Package(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.PackingForm("СправочникСсылка")) Тогда
		//вызывать надо PackingType
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда //packingType
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.PackingType.guid, ВетисИмяСправочника.PackingForm("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.PackingForm("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция PackageList(пЗначение, пУровень = Неопределено, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.PackingForm("СправочникСсылка")) Тогда
		//вызывать надо PackingType
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Если НЕ пЗначение.Свойства().Получить("package") = Неопределено
		И ТипЗнч(пЗначение.package) = Тип("СписокXDTO") Тогда
			_level = ВетисDictionaryСлой1с.PackageLevelType(?(пУровень = Неопределено, ВетисDictionaryСлой1с.PackageLevelType(), пУровень));
			Для каждого _package Из пЗначение.package Цикл
				Если _package.level = _level Тогда
					Возврат _package;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Возврат ВетисDictionary_2_0.Package();
	КонецЕсли;
	
КонецФункции

Функция PackingType(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	//сделать: посмотреть как приходит упаковка из api по guid или по globalID, пока считаем что guid
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.PackingForm("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.PackingForm("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.PackingForm("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Producer(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Enterprise("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("СписокXDTO") Тогда
		Для каждого _Значение Из пЗначение Цикл
			Возврат Producer(_Значение);
		КонецЦикла;
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Если НЕ пЗначение.Свойства().Получить("guid") = Неопределено Тогда
			Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
		ИначеЕсли НЕ пЗначение.Свойства().Получить("enterprise") = Неопределено Тогда
			Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.enterprise.guid, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
		ИначеЕсли НЕ пЗначение.Свойства().Получить("producer") = Неопределено И ТипЗнч(пЗначение.producer) = Тип("СписокXDTO") И пЗначение.producer.Количество() > 0 Тогда
			Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.producer[0].enterprise.guid, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
		КонецЕсли;
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Product(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Product("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.SubProduct("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.SubProduct("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Purpose(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Purpose("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.Purpose("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.Purpose("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция ProductItem(пЗначение, пПредприятие, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Если ЗначениеЗаполнено(пЗначение.guid) Тогда
			Возврат Ветис.Соответствие_ПолучитьProductItem(пЗначение.guid, пПредприятие, ПоУмолчанию);
		Иначе
			Возврат Ветис.Соответствие_ПолучитьProductItem(пЗначение.name, пПредприятие, ПоУмолчанию);
		КонецЕсли;
	Иначе
		Возврат Ветис.Соответствие_ПолучитьProductItem(пЗначение, пПредприятие, ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Region(пСсылка, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пСсылка) = Тип(ВетисИмяСправочника.Region("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пСсылка, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пСсылка) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка.guid, ВетисИмяСправочника.Region("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка, ВетисИмяСправочника.Region("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция SubProduct(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.SubProduct("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.SubProduct("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.SubProduct("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция Unit(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Unit("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пЗначение) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение.guid, ВетисИмяСправочника.Unit("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пЗначение, ВетисИмяСправочника.Unit("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции


Функция BusinessEntityType(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисBusinessEntityType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ЮрЛицо") Тогда
			Возврат ВетисКонстанты.BusinessEntityType_JURIDICAL();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ФизЛицо") Тогда
			Возврат ВетисКонстанты.BusinessEntityType_PHYSICAL();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ИП") Тогда
			Возврат ВетисКонстанты.BusinessEntityType_SELF_EMPLOYED();
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.BusinessEntityType_JURIDICAL() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ЮрЛицо");
		ИначеЕсли value = ВетисКонстанты.BusinessEntityType_PHYSICAL() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ФизЛицо");
		ИначеЕсли value = ВетисКонстанты.BusinessEntityType_SELF_EMPLOYED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ИП");
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция DocumentType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисDocumentType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТовароТранспортнаяНакладная") Тогда
			Возврат ВетисКонстанты.DocumentType_ТоварноТранспортнаяНакладная();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.Коносамент") Тогда
			Возврат ВетисКонстанты.DocumentType_Коносамент();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.CMR") Тогда
			Возврат ВетисКонстанты.DocumentType_CMR();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.Авианакладная") Тогда
			Возврат ВетисКонстанты.DocumentType_Авианакладная();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТранспортнаяНакладная") Тогда
			Возврат ВетисКонстанты.DocumentType_ТранспортнаяНакладная();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТОРГ12") Тогда
			Возврат ВетисКонстанты.DocumentType_ТОРГ12();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС") Тогда
			Возврат ВетисКонстанты.DocumentType_ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции") Тогда
			Возврат ВетисКонстанты.DocumentType_РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисDocumentType.АктОтбораПробыНаИсследование") Тогда
			Возврат ВетисКонстанты.DocumentType_АктОтбораПробыНаИсследование();
		Иначе
			Возврат ВетисКонстанты.DocumentType_ТоварноТранспортнаяНакладная();
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.DocumentType_ТоварноТранспортнаяНакладная() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТовароТранспортнаяНакладная");
		ИначеЕсли value = ВетисКонстанты.DocumentType_Коносамент() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.Коносамент");
		ИначеЕсли value = ВетисКонстанты.DocumentType_CMR() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.CMR");
		ИначеЕсли value = ВетисКонстанты.DocumentType_Авианакладная() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.Авианакладная");
		ИначеЕсли value = ВетисКонстанты.DocumentType_ТранспортнаяНакладная() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТранспортнаяНакладная");
		ИначеЕсли value = ВетисКонстанты.DocumentType_ТОРГ12() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТОРГ12");
		ИначеЕсли value = ВетисКонстанты.DocumentType_ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС");
		ИначеЕсли value = ВетисКонстанты.DocumentType_РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции");
		ИначеЕсли value = ВетисКонстанты.DocumentType_АктОтбораПробыНаИсследование() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.АктОтбораПробыНаИсследование");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисDocumentType.ТовароТранспортнаяНакладная");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ProductType(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисProductType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисProductType.МясоИМясопродукты") Тогда
			Возврат ВетисКонстанты.ProductType_МясоИМясопродукты();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.КормаИКормовыеДобавки") Тогда
			Возврат ВетисКонстанты.ProductType_КормаИКормовыеДобавки();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.ЖивыеЖивотные") Тогда
			Возврат ВетисКонстанты.ProductType_ЖивыеЖивотные();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.ЛекарственныеСредства") Тогда
			Возврат ВетисКонстанты.ProductType_ЛекарственныеСредства();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.ПищевыеПродукты") Тогда
			Возврат ВетисКонстанты.ProductType_ПищевыеПродукты();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.НепищевыеПродуктыИДругое") Тогда
			Возврат ВетисКонстанты.ProductType_НепищевыеПродуктыИДругое();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.РыбаИМорепродукты") Тогда
			Возврат ВетисКонстанты.ProductType_РыбаИМорепродукты();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.ПродукцияНеТребующаяРазрешения") Тогда
			Возврат ВетисКонстанты.ProductType_НепищевыеПродуктыИДругое();
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.ProductType_МясоИМясопродукты() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.МясоИМясопродукты");
		ИначеЕсли value = ВетисКонстанты.ProductType_КормаИКормовыеДобавки() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.КормаИКормовыеДобавки");
		ИначеЕсли value = ВетисКонстанты.ProductType_ЖивыеЖивотные() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.ЖивыеЖивотные");
		ИначеЕсли value = ВетисКонстанты.ProductType_ЛекарственныеСредства() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.ЛекарственныеСредства");
		ИначеЕсли value = ВетисКонстанты.ProductType_ПищевыеПродукты() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.ПищевыеПродукты");
		ИначеЕсли value = ВетисКонстанты.ProductType_НепищевыеПродуктыИДругое() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.НепищевыеПродуктыИДругое");
		ИначеЕсли value = ВетисКонстанты.ProductType_РыбаИМорепродукты() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.РыбаИМорепродукты");
		ИначеЕсли value = ВетисКонстанты.ProductType_ПродукцияНеТребующаяРазрешения() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.ПродукцияНеТребующаяРазрешения");
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция TransportType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисTransportType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.Автомобильный") Тогда
			Возврат ВетисКонстанты.TransportType_Автомобильный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.Железнодорожный") Тогда
			Возврат ВетисКонстанты.TransportType_Железнодорожный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.Авиатранспорт") Тогда
			Возврат ВетисКонстанты.TransportType_Авиатранспортный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.МорскойКонтейнер") Тогда
			Возврат ВетисКонстанты.TransportType_МорскойКонтейнер();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportType.МорскойТрюм") Тогда
			Возврат ВетисКонстанты.TransportType_МорскойТрюм();
		Иначе
			Возврат ВетисКонстанты.TransportType_Автомобильный();
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.TransportType_Автомобильный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.Автомобильный");
		ИначеЕсли value = ВетисКонстанты.TransportType_Железнодорожный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.Железнодорожный");
		ИначеЕсли value = ВетисКонстанты.TransportType_Авиатранспортный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.Авиатранспорт");
		ИначеЕсли value = ВетисКонстанты.TransportType_МорскойКонтейнер() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.МорскойКонтейнер");
		ИначеЕсли value = ВетисКонстанты.TransportType_МорскойТрюм() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.МорскойТрюм");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportType.Автомобильный");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция TransportationStorageType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисTransportStorageType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Замороженные") Тогда
			Возврат ВетисКонстанты.TransportationStorageType_FROZEN();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Охлажденные") Тогда
			Возврат ВетисКонстанты.TransportationStorageType_CHILLED();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Охлаждаемые") Тогда
			Возврат ВетисКонстанты.TransportationStorageType_COOLED();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Вентилируемые") Тогда
			Возврат ВетисКонстанты.TransportationStorageType_VENTILATED();
		Иначе
			Возврат ВетисКонстанты.TransportationStorageType_FROZEN();
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.TransportationStorageType_FROZEN() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Замороженные");
		ИначеЕсли value = ВетисКонстанты.TransportationStorageType_CHILLED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Охлажденные");
		ИначеЕсли value = ВетисКонстанты.TransportationStorageType_COOLED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Охлаждаемые");
		ИначеЕсли value = ВетисКонстанты.TransportationStorageType_VENTILATED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Вентилируемые");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисTransportStorageType.Замороженные");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ResearchResult(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисResearchResult") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNKNOWN") Тогда
			Возврат ВетисКонстанты.ResearchResult_UNKNOWN();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.POSITIVE") Тогда
			Возврат ВетисКонстанты.ResearchResult_POSITIVE();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.NEGATIVE") Тогда
			Возврат ВетисКонстанты.ResearchResult_NEGATIVE();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNFULFILLED") Тогда
			Возврат ВетисКонстанты.ResearchResult_UNFULFILLED();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.VSERAW") Тогда
			Возврат ВетисКонстанты.ResearchResult_VSERAW();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисResearchResult.VSEFULL") Тогда
			Возврат ВетисКонстанты.ResearchResult_VSEFULL();
		Иначе
			Возврат ВетисКонстанты.ResearchResult_UNKNOWN();
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.ResearchResult_UNKNOWN() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNKNOWN");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_POSITIVE() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.POSITIVE");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_NEGATIVE() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.NEGATIVE");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_UNFULFILLED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNFULFILLED");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_VSERAW() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.VSERAW");
		ИначеЕсли value = ВетисКонстанты.ResearchResult_VSEFULL() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.VSEFULL");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисResearchResult.UNKNOWN");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция PackageLevelType(value = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисPackageLevelType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Внутренний") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Внутренний();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Потребительский") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Потребительский();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Промежуточный") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Промежуточный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Торговый") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Торговый();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Дополнительный") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Дополнительный();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Транспортный") Тогда
			Возврат ВетисКонстанты.PackageLevelType_Транспортный();
		Иначе
			Возврат ВетисКонстанты.PackageLevelType_Потребительский();
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.PackageLevelType_Внутренний() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Внутренний");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Потребительский() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Потребительский");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Промежуточный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Промежуточный");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Торговый() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Торговый");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Дополнительный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Дополнительный");
		ИначеЕсли value = ВетисКонстанты.PackageLevelType_Транспортный() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Транспортный");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисPackageLevelType.Потребительский");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция EnterpriseType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисEnterpriseType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Предприятие") Тогда
			Возврат ВетисКонстанты.EnterpriseType_Предприятие();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Рынок") Тогда
			Возврат ВетисКонстанты.EnterpriseType_Рынок();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.СББЖ") Тогда
			Возврат ВетисКонстанты.EnterpriseType_СББЖ();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Судно") Тогда
			Возврат ВетисКонстанты.EnterpriseType_Судно();
		Иначе
			Возврат 0;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.EnterpriseType_Предприятие() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Предприятие");
		ИначеЕсли value = ВетисКонстанты.EnterpriseType_Рынок() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Рынок");
		ИначеЕсли value = ВетисКонстанты.EnterpriseType_СББЖ() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.СББЖ");
		ИначеЕсли value = ВетисКонстанты.EnterpriseType_Судно() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Судно");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции
