
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипПродукции = ПредопределенноеЗначение("Перечисление.ВетисProductType.МясоИМясопродукты");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаКлиенте
Процедура ВетисНоменклатураЗаполнить(Команда)
	
	ВетисНоменклатураЗаполнитьСервер();
	
КонецПроцедуры

&НаСервере
Процедура ВетисНоменклатураЗаполнитьСервер()
	
	Перем _product, _subProduct, _productItem, _параметрыP;
	
	_enterpriseGuid = ВетисCerberusEnterpriseСлой1с.Enterprise(Предприятие);
	
	_ТипПродукции = ВетисArgusProductionСлой1с.ProductType(ТипПродукции);
	
	СписокВетис.Очистить();
	
	Пока ВетисArgusProduction.GetProductByTypeListСледующий(_ТипПродукции, _product, _параметрыP) Цикл
		
		_параметрыS = Неопределено;
		Пока ВетисArgusProduction.GetSubProductByProductListСледующий(_product.guid, _subProduct, _параметрыS) Цикл
			
			_СписокСтрока = СписокSubProductВетис.Добавить();
			_СписокСтрока.name = _subProduct.name;
			_СписокСтрока.guid = _subProduct.guid;
			
			_параметрыPI = Неопределено;
			Пока ВетисArgusProduction.GetProductItemListСледующий(_subProduct.guid, _enterpriseGuid, _productItem, _параметрыPI) Цикл
				
				_СписокСтрока = СписокВетис.Добавить();
				_СписокСтрока.name = _productItem.name;
				_СписокСтрока.guid = _productItem.guid;
				_СписокСтрока.subProduct = _subProduct.guid;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	СписокВетис.Сортировать("name");
		
КонецПроцедуры


&НаКлиенте
Процедура СоздатьСвязь(Команда)
	
	СоздатьСвязьСервер();
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСвязьСервер() Экспорт
	
	ТекДанные = Объект.ВетисНоменклатура.НайтиПоИдентификатору(Элементы.ВетисНоменклатура.ТекущаяСтрока);
	
	_ТипПродукции = Перечисления.ВетисProductType.Индекс(ТипПродукции) + 1;
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого ТекДанные1с из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			
		КонецЦикла;
	Иначе
		ТекДанные1с = Элементы.СправочникСписок.ТекущиеДанные;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСвязь(Команда)
	
	УдалитьСвязьСервер();
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьСервер()
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого ТекДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			
		КонецЦикла;
	Иначе
		ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВетисНоменклатураВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элементы.ВетисНоменклатура.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	ВетисОбщегоНазначения.ДобавитьОтбор(СправочникСписок.Отбор, "Наименование", ТекДанные.Наименование);
	
КонецПроцедуры

&НаКлиенте
Процедура ХСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.BusinessEntityФормаВыбора(ЭтаФорма, "ХСОбработкаОповещения", СтандартнаяОбработка, ХС);
	
КонецПроцедуры

&НаКлиенте
Процедура ХСОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		ХС = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.EnterpriseФормаВыбора(ЭтаФорма, "ПредприятиеОбработкаОповещения", СтандартнаяОбработка, ХС);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредприятиеОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Предприятие = Результат;
	КонецЕсли;
	
КонецПроцедуры
