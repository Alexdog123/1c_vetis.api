
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеСервер Тогда
		Элементы.СправочникСписок.Видимость = Ложь;
	#КонецЕсли
	
	Элементы.ГруппаОтбор.Видимость = Ложь;
	
	СправочникСписок.ПроизвольныйЗапрос = Истина;
	СправочникСписок.ОсновнаяТаблица = ВетисИмяСправочника.Country("Справочник");
	СправочникСписок.ТекстЗапроса =
	"ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.Код,
	|	_Таблица.Наименование КАК name,
	|	_Ветис.guid КАК guid,
	|	_Ветис.name КАК Ветисname,
	|	_Ветис.Описание КАК ВетисОписание
	|ИЗ
	|	Справочник."+ВетисИмяСправочника.Country()+" КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Ветис
	|		ПО _Таблица.Ссылка = _Ветис.Ссылка";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаСписокВетисЗаполнить(Команда)
	
	СтраныВетисЗаполнитьСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязь(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		_ТекущиеДанные = Элементы.СписокВетис.ТекущиеДанные;
		
		_Параметры = Новый Структура("guid,name", _ТекущиеДанные.guid, _ТекущиеДанные.name);
		
		ВетисФормы.CountryФормаВыбора(ЭтаФорма, "КомандаСоздатьСвязьВыборОбработкаОповещения", , , _Параметры);
		
		Возврат;
	#Иначе
		
		СоздатьСвязьСервер(Элементы.СправочникСписок.ТекущиеДанные.Ссылка, Элементы.СправочникСписок.ТекущиеДанные.name);
		
		Элементы.СправочникСписок.Обновить();
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьСвязь(Команда)
	
	УдалитьСвязьСервер();
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервиса(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Если Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ВетисФормы.CountryФормаВыбора(ЭтаФорма, "КомандаЗаполнитьИзСервисаВыборОбработкаОповещения");
		
		Возврат;
	#Иначе
		
		Если Элементы.СправочникСписок.ТекущаяСтрока = Неопределено 
			ИЛИ Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		_форма = ОткрытьФорму(ВетисИмяСправочника.Country("Справочник", "ФормаОбъекта"), Новый Структура("Ключ", Элементы.СправочникСписок.ТекущаяСтрока));
		
		_форма.Объект.Наименование = Элементы.СписокВетис.ТекущиеДанные.name;
		_форма.Объект.НаименованиеПолное = Элементы.СписокВетис.ТекущиеДанные.fullName;
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьИзСервиса(Команда)
	
	Если Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	_форма = ОткрытьФорму(ВетисИмяСправочника.Country("Справочник", "ФормаОбъекта"));
	
	_форма.Объект.Наименование = Элементы.СписокВетис.ТекущиеДанные.name;
	_форма.Объект.НаименованиеПолное = Элементы.СписокВетис.ТекущиеДанные.fullName;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтбор(Команда)
	
	Элементы.ФормаКомандаОтбор.Пометка = НЕ Элементы.ФормаКомандаОтбор.Пометка;
	
	Элементы.ГруппаОтбор.Видимость = Элементы.ФормаКомандаОтбор.Пометка;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаСоздатьСвязьВыборОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		
		_ТекущиеДанные = Элементы.СписокВетис.ТекущиеДанные;
		
		ВетисСоответствие.Добавить(пРезультат, пПараметры.guid, пПараметры.name);
		
		Элементы.СправочникСписок.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервисаВыборОбработкаОповещения(пРезультат, пПараметр) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		_форма = ОткрытьФорму(ВетисИмяСправочника.Country("Справочник", "ФормаОбъекта"), Новый Структура("Ключ", пРезультат));
		
		_форма.Объект.Наименование = Элементы.СписокВетис.ТекущиеДанные.name;
		_форма.Объект.НаименованиеПолное = Элементы.СписокВетис.ТекущиеДанные.fullName;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборИспользованиеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	_ТекДанные = Элементы.СписокВетис.ТекущиеДанные;
	
	Элементы.СправочникСписок.ТекущаяСтрока = СправочникСписокНайти(_ТекДанные.name)
	
КонецПроцедуры

&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	_ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	_СтраныВетисСтроки = СписокВетис.НайтиСтроки(Новый Структура("name", _ТекДанные.name));
	
	Если _СтраныВетисСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СписокВетис.ТекущаяСтрока = _СтраныВетисСтроки[0].ПолучитьИдентификатор();
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.ОтборКод.Доступность = ОтборКодИспользование;
	Элементы.ОтборИмя.Доступность = ОтборИмяИспользование;
	Элементы.ОтборПолноеИмя.Доступность = ОтборПолноеИмяИспользование;
	
КонецПроцедуры


&НаСервере
Процедура СтраныВетисЗаполнитьСервер()
	
	Перем _Entity, _Параметры;
	
	_Версия20 = ВетисXSD.Версия_2_0();
	_ВетисIkarService = ?(_Версия20, ВетисIkarService_2_0, ВетисIkarService);
	
	СписокВетис.Очистить();
	
	_ОтборКод = ВРег(ОтборКод);
	_ОтборИмя = ВРег(ОтборИмя);
	_ОтборПолноеИмя = ВРег(ОтборПолноеИмя);
	
	Пока _ВетисIkarService.GetAllCountryListСледующий(_Entity, _Параметры) Цикл
		
		Если ОтборКодИспользование И Найти(ВРег(СокрЛП(_Entity.code)), _ОтборКод) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОтборИмяИспользование И Найти(ВРег(СокрЛП(_Entity.name)), _ОтборИмя) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОтборПолноеИмяИспользование И Найти(ВРег(СокрЛП(_Entity.fullName)), _ОтборПолноеИмя) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		_Строка = СписокВетис.Добавить();
		
		ЗаполнитьЗначенияСвойств(_Строка, _Entity);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСвязьСервер(пСсылка, name) Экспорт
	
	Если ЭтаФорма.ТекущийЭлемент = Элементы.СписокВетис Тогда
		_ТекДанные = СписокВетис.НайтиПоИдентификатору(Элементы.СписокВетис.ТекущаяСтрока);
	Иначе
		_СтраныВетисСтроки = СписокВетис.НайтиСтроки(Новый Структура("name", name));
		
		Если _СтраныВетисСтроки.Количество() = 0 Тогда Возврат; КонецЕсли;
		
		_ТекДанные = _СтраныВетисСтроки[0];
		
	КонецЕсли;
	
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		
		Для Каждого _ТекДанные1с из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисСоответствие.Добавить(пСсылка, _ТекДанные.guid, _ТекДанные.name);
		КонецЦикла;
		
	Иначе
		ВетисСоответствие.Добавить(пСсылка, _ТекДанные.guid, _ТекДанные.name);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьСервер()
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			
			ВетисСоответствие.Удалить(_ТекДанные.Ссылка);
			
		КонецЦикла;
	Иначе
		_ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
		
		ВетисСоответствие.Удалить(_ТекДанные.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция СправочникСписокНайти(пНаименование)
	
	Возврат Справочники[ВетисИмяСправочника.Country()].НайтиПоНаименованию(пНаименование);
	
КонецФункции
