
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СкладскойЖурналПоследние = Истина;
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурнал.Отбор, "last", СкладскойЖурналПоследние,,СкладскойЖурналПоследние);
	
	Элементы.СписокСкладскойЖурналСкладскойЖурналПоследние.Пометка = СкладскойЖурналПоследние;
	
	Версия = ВетисXSD.Версия();
	
	Отладка = ВетисОбщегоНазначения.РазрешенаОтладка();
	
КонецПроцедуры


&НаКлиенте
Процедура ВСДАннулировать(Команда)
	
	_ТекущиеДанные = Элементы.СписокВСД.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ _ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Оформлен") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ _ТекущиеДанные.Тип = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Транспортный") Тогда
		Возврат;
	КонецЕсли;
	
	_Причина = "";
	
	_оо = Новый ОписаниеОповещения("ВСДАннулироватьОбработкаОповещения", ЭтаФорма, _ТекущиеДанные.Ссылка);
	
	ПоказатьВводСтроки(_оо, _Причина, "Причина аннулирования " + _ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВСДСинхронизировать(Команда)
	
	//ВетисMercuryVetdocumentСлой1с.Синхронизировать(,ХС, Предприятие, ?(ЗначениеЗаполнено(ТипВСД), ТипВСД, Неопределено), ?(ЗначениеЗаполнено(СтатусВСД), СтатусВСД, Неопределено));
	ВетисMercuryVetdocumentСлой1с.Синхронизировать(,ХС, Предприятие, ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Входящий"));
	
	Элементы.СписокВСД.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВСДАннулироватьОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВетисMercuryVetdocumentСлой1с.Аннулировать(Параметр, Результат);
	
	Элементы.СписокВСД.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьСкладскойЖурнал(Команда)
	
	ВетисMercuryApplicationsСлой1с.СинхронизироватьСкладскойЖурнал(ХС, Предприятие);
	
	Элементы.СписокСкладскойЖурнал.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладскойЖурналПоследние(Команда)
	
	СкладскойЖурналПоследние = НЕ СкладскойЖурналПоследние;
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурнал.Отбор, "last", СкладскойЖурналПоследние,,СкладскойЖурналПоследние);
	
	Элементы.СписокСкладскойЖурналСкладскойЖурналПоследние.Пометка = СкладскойЖурналПоследние;
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсияПриИзменении(Элемент)
	
	ВетисXSD.ВерсияУстановить(Версия);
	
	ВетисXSD.Инициализировать();
	
	Оповестить("ВетисВерсия", "РабочийСтол");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтладкаПриИзменении(Элемент)
	
	ВетисОбщегоНазначения.РазрешенаОтладка(Отладка);
	
	Оповестить("ВетисОтладка", "РабочийСтол");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = "РабочийСтол" Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисВерсия" Тогда
		Версия = ВетисXSD.Версия();
	ИначеЕсли ИмяСобытия = "ВетисОтладка" Тогда
		Отладка = ВетисОбщегоНазначения.РазрешенаОтладка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладскойЖурналПолучитьТекущий(Команда)
	
	ТекущиеДанные = Элементы.СписокСкладскойЖурнал.ТекущиеДанные;
	
	СкладскойЖурналПолучитьТекущийСервер(ТекущиеДанные.guid);
	
КонецПроцедуры

Процедура СкладскойЖурналПолучитьТекущийСервер(guid)
	//тест:
	//http://vetrf.ru/vetrf-forum/posts/list/1185/6855.page#46389
	//В записи журнала есть объект vetDocument, в котором возвращаются реквизиты ВСД. То есть при выполнении метода, например, GetStockEntryByGuid вы получите данные записи журнала и UUID ветеринарного сертификата, на основании которого эта запись была создана. 
	//результат:
	//работает только в 2.0
	
	Если ВетисXSD.Версия_2_0() Тогда
		_enterpriseGuid = ВетисDictionaryСлой1с.Enterprise(Предприятие);
		_issuerId       = ВетисDictionaryСлой1с.BusinessEntity(ХС);
		_StockEntry     = ВетисMercuryApplications_2_0.getStockEntryByGuid(guid, _enterpriseGuid, _issuerId);
		
		Если _StockEntry.vetDocument.Количество() > 0 Тогда
			_VetDocument    = ВетисMercuryApplications_2_0.getVetDocumentByUuid(_StockEntry.vetDocument[0].uuid, _enterpriseGuid, _issuerId);
		КонецЕсли;
	Иначе
		_enterpriseGuid = ВетисCerberusEnterpriseСлой1с.Enterprise(Предприятие);
		_issuerId       = ВетисCerberusEnterpriseСлой1с.BusinessEntity(ХС);
		_StockEntry     = ВетисMercuryApplications.getStockEntryByGuid(guid, _enterpriseGuid, _issuerId);
		
		Если _StockEntry.vetDocument.Количество() > 0 Тогда
			_VetDocument    = ВетисMercuryApplications.getVetDocumentByUuid(_StockEntry.vetDocument[0].uuid, _enterpriseGuid, _issuerId);
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.СписокСкладскойЖурналСкладскойЖурналПолучитьТекущий.Заголовок = "Тест "+_StockEntry.vetDocument.Количество();
	
КонецПроцедуры
