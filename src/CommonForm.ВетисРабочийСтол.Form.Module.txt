
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	#Если МобильноеПриложениеСервер Тогда
		Элементы.ОтборПредприятие.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.ОтборХС.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Элементы.СписокВСДАннулировать.Видимость = Ложь;
		Элементы.ГруппаОтборUuid.Видимость = Ложь;
	#КонецЕсли
	
	СкладскойЖурналПоследние = Истина;
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурнал.Отбор, "last", СкладскойЖурналПоследние,,СкладскойЖурналПоследние);
	
	Элементы.СписокСкладскойЖурналСкладскойЖурналПоследние.Пометка = СкладскойЖурналПоследние;
	
	Версия = Ветис.Версия();
	
	//Тестовый = Ветис.Тестовый();
	
	//Отладка = Ветис.РазрешенаОтладка();
	
	ОтборХС = Ветис.ОсновнойХС();
	
	ВСДОтборТип.Добавить(Перечисления.ВетисVetDocumentType.Транспортный,,Истина);
	ВСДОтборТип.Добавить(Перечисления.ВетисVetDocumentType.Возвратный,,Истина);
	ВСДОтборТип.Добавить(Перечисления.ВетисVetDocumentType.Производственный);
	ВСДОтборТип.Добавить(Перечисления.ВетисVetDocumentType.Входящий);
	ВСДОтборТип.Добавить(Перечисления.ВетисVetDocumentType.Исходящий);
	
	ВСДОтборСтатус.Добавить(Перечисления.ВетисVetDocumentStatus.Оформлен,,Истина);
	ВСДОтборСтатус.Добавить(Перечисления.ВетисVetDocumentStatus.Погашен);
	ВСДОтборСтатус.Добавить(Перечисления.ВетисVetDocumentStatus.Аннулирован);
	
	Элементы.ГруппаСкладскойЖурнал.Видимость = Ветис.РазрешенаОтладка();
	
	Элементы.СписокВСДuuid.Видимость = Ветис.Настройка("ПоказыватьGuid");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВСДОтборОбновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = ЭтаФорма.ИмяФормы Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисВерсия" Тогда
		Версия = ВетисВызовСервера.Версия();
	ИначеЕсли ИмяСобытия = "ВетисОтладка" Тогда
		Отладка = ВетисВызовСервера.РазрешенаОтладка();
		Элементы.ГруппаСкладскойЖурнал.Видимость = Отладка;
	ИначеЕсли ИмяСобытия = "ВетисТестовый" Тогда
		Тестовый = ВетисВызовСервера.Тестовый();
	ИначеЕсли ИмяСобытия = "ВетисПоказыватьGuid" Тогда
		Элементы.СписокВСДuuid.Видимость = ВетисВызовСервера.Настройка("ПоказыватьGuid");
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаЖурнал(Команда)
	
	ОткрытьФорму("РегистрСведений.ВетисЖурнал.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНастройки(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ВетисНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановкаСоответствияСправочников(Команда)
	
	ОткрытьФорму("Обработка.ВетисУстановкаСоответствияСправочников.Форма");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПредприятияХС(Команда)
	
	ОткрытьФорму("РегистрСведений.ВетисПредприятияХС.ФормаСписка");
	
КонецПроцедуры



&НаКлиенте
Процедура КомандаАннулироватьВСД(Команда)
	
	_ТекущиеДанные = Элементы.СписокВСД.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ _ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Оформлен") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ _ТекущиеДанные.Тип = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Транспортный") Тогда
		Возврат;
	КонецЕсли;
	
	_Причина = "";
	
	_оо = Новый ОписаниеОповещения("ВСДАннулироватьОбработкаОповещения", ЭтаФорма, _ТекущиеДанные.Ссылка);
	
	ПоказатьВводСтроки(_оо, _Причина, "Причина аннулирования " + _ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСинхронизироватьВСД(Команда)
	
	Перем _Отказ, _Ошибка;
	
	Если НЕ ЗначениеЗаполнено(ОтборХС) Тогда
		Сообщить("Необходимо выбрать ХС");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОтборПредприятие) Тогда
		Сообщить("Необходимо выбрать предприятие");
		Возврат;
	КонецЕсли;
	
	Для каждого _Статус Из ВСДОтборСтатус Цикл
		Если НЕ _Статус.Пометка Тогда Продолжить; КонецЕсли;
		Для каждого _Тип Из ВСДОтборТип Цикл
			
			Если НЕ _Тип.Пометка Тогда Продолжить; КонецЕсли;
			
			ВетисХозяйственныеОперации.СинхронизироватьЖурналВСД(ОтборХС, ОтборПредприятие, _Тип.Значение, _Статус.Значение, _Отказ, _Ошибка);
			
			Если _Отказ = Истина Тогда
				Сообщить(_Ошибка);
				Возврат;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	Элементы.СписокВСД.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВСДАннулироватьОбработкаОповещения(Результат, Параметр) Экспорт
	
	Перем _Отказ, _Ошибка;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВетисMercuryVetdocumentСлой1с.Аннулировать(Параметр, Результат, _Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
	Иначе
		Элементы.СписокВСД.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтборТипВСД(Команда)
	
	_оо = Новый ОписаниеОповещения("ВСДОтборТипОбработкаОповещения", ЭтаФорма);
	
	ВСДОтборТип.ПоказатьОтметкуЭлементов(_оо);
	
КонецПроцедуры

&НаКлиенте
Процедура ВСДОтборТипОбработкаОповещения(пСписок, пПараметры) Экспорт
	
	Если НЕ пСписок = Неопределено Тогда
		ВСДОтборОбновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтборСтатусВСД(Команда)
	
	_оо = Новый ОписаниеОповещения("ВСДОтборСтатусОбработкаОповещения", ЭтаФорма);
	
	ВСДОтборСтатус.ПоказатьОтметкуЭлементов(_оо);
	
КонецПроцедуры

&НаКлиенте
Процедура ВСДОтборСтатусОбработкаОповещения(пСписок, пПараметры) Экспорт
	
	Если НЕ пСписок = Неопределено Тогда
		ВСДОтборОбновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВСДОтборОбновить()
	
	_список = Новый Массив;
	
	//бумажные (заведенные через 1с) видны всегда
	_список.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.ПустаяСсылка"));
	
	_заголовок = "";
	
	Для каждого _элемент Из ВСДОтборТип Цикл
		Если _элемент.Пометка Тогда
			_список.Добавить(_элемент.Значение);
			_заголовок = _заголовок + "," + Строка(_элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВСД.Отбор, "Тип", _список, "ВСписке");
	
	Элементы.СписокВСДОтборТип.Заголовок = Сред(_заголовок, 2);
	
	
	_список = Новый Массив;
	
	_заголовок = "";
	
	//бумажные (заведенные через 1с) видны всегда
	_список.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.ПустаяСсылка"));
	
	Для каждого _элемент Из ВСДОтборСтатус Цикл
		Если _элемент.Пометка Тогда
			_список.Добавить(_элемент.Значение);
			_заголовок = _заголовок + "," + Строка(_элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВСД.Отбор, "Статус", _список, "ВСписке");
	
	Элементы.СписокВСДОтборСтатус.Заголовок = Сред(_заголовок, 2);
	
	_группаИЛИ = ВетисОбщегоНазначенияКлиентСервер.ДобавитьГруппу(СписокВСД.Отбор, "ХС", "ГруппаИли");
	
	_группа = ВетисОбщегоНазначенияКлиентСервер.ДобавитьГруппу(_группаИЛИ, "Отправитель", "ГруппаИ");
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(_группа, "Отправитель", ОтборХС);
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(_группа, "ОтправительПредприятие", ОтборПредприятие);
	
	_группа = ВетисОбщегоНазначенияКлиентСервер.ДобавитьГруппу(_группаИЛИ, "Получатель", "ГруппаИ");
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(_группа, "Получатель", ОтборХС);
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(_группа, "ПолучательПредприятие", ОтборПредприятие);
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурнал.Отбор, "ХозяйствующийСубъект", ОтборХС);
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурнал.Отбор, "Предприятие", ОтборПредприятие);
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокТранспортныеПартии.Отбор, "Отправитель", ОтборХС);
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокТранспортныеПартии.Отбор, "ОтправительПредприятие", ОтборПредприятие);
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВходящиеПартииПоДокументам.Отбор, "Получатель", ОтборХС);
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВходящиеПартииПоДокументам.Отбор, "ПолучательПредприятие", ОтборПредприятие);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборUuidИспользованиеПриИзменении(Элемент)
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокВСД.Отбор, "uuid", ОтборUuid, , ОтборUuidИспользование);
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаСинхронизироватьСкладскойЖурнал(Команда)
	
	Перем _Отказ, _Ошибка;
	
	ВетисХозяйственныеОперации.СинхронизироватьСкладскойЖурнал(ОтборХС, ОтборПредприятие, _Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
	КонецЕсли;
	
	Элементы.СписокСкладскойЖурнал.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСкладскойЖурналОтборПоследние(Команда)
	
	СкладскойЖурналПоследние = НЕ СкладскойЖурналПоследние;
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СписокСкладскойЖурнал.Отбор, "last", СкладскойЖурналПоследние,,СкладскойЖурналПоследние);
	
	Элементы.СписокСкладскойЖурналСкладскойЖурналПоследние.Пометка = СкладскойЖурналПоследние;
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсияПриИзменении(Элемент)
	
	ВетисВызовСервера.ВерсияУстановить(Версия);
	
	ВетисВызовСервера.ИнициализироватьXSD();
	
	Оповестить("ВетисВерсия", ЭтаФорма.ИмяФормы);
	
КонецПроцедуры

//&НаКлиенте
//Процедура ОтладкаПриИзменении(Элемент)
//	
//	ВетисВызовСервера.РазрешенаОтладка(Отладка);
//	
//	Элементы.ГруппаСкладскойЖурнал.Видимость = Отладка;
//	
//	Оповестить("ВетисОтладка", ЭтаФорма.ИмяФормы);
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ТестовыйПриИзменении(Элемент)
//	
//	ВетисВызовСервера.ТестовыйУстановить(Тестовый);
//	
//	ВетисВызовСервера.ИнициализироватьXSD();
//	
//	Оповестить("ВетисТестовый", ЭтаФорма.ИмяФормы);
//	
//КонецПроцедуры


&НаКлиенте
Процедура КомандаСкладскойЖурналТест(Команда)
	
	ТекущиеДанные = Элементы.СписокСкладскойЖурнал.ТекущиеДанные;
	
	СкладскойЖурналПолучитьТекущийСервер(ТекущиеДанные.guid);
	
КонецПроцедуры

Процедура СкладскойЖурналПолучитьТекущийСервер(guid)
	//тест:
	//http://vetrf.ru/vetrf-forum/posts/list/1185/6855.page#46389
	//В записи журнала есть объект vetDocument, в котором возвращаются реквизиты ВСД. То есть при выполнении метода, например, GetStockEntryByGuid вы получите данные записи журнала и UUID ветеринарного сертификата, на основании которого эта запись была создана. 
	//результат:
	//работает только в 2.0
	
	Если Ветис.Версия_2_0() Тогда
		_enterpriseGuid = ВетисDictionaryСлой1с.Enterprise(ОтборПредприятие);
		_issuerId       = ВетисDictionaryСлой1с.BusinessEntity(ОтборХС);
		_StockEntry     = ВетисMercuryApplications_2_0.getStockEntryByGuid(guid, _enterpriseGuid, _issuerId);
		
		Если _StockEntry.vetDocument.Количество() > 0 Тогда
			_VetDocument    = ВетисMercuryApplications_2_0.getVetDocumentByUuid(_StockEntry.vetDocument[0].uuid, _enterpriseGuid, _issuerId);
		КонецЕсли;
	Иначе
		_enterpriseGuid = ВетисCerberusEnterpriseСлой1с.Enterprise(ОтборПредприятие);
		_issuerId       = ВетисCerberusEnterpriseСлой1с.BusinessEntity(ОтборХС);
		_StockEntry     = ВетисMercuryApplications.getStockEntryByGuid(guid, _enterpriseGuid, _issuerId);
		
		Если _StockEntry.vetDocument.Количество() > 0 Тогда
			_VetDocument    = ВетисMercuryApplications.getVetDocumentByUuid(_StockEntry.vetDocument[0].uuid, _enterpriseGuid, _issuerId);
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.СписокСкладскойЖурналСкладскойЖурналПолучитьТекущий.Заголовок = "Тест "+_StockEntry.vetDocument.Количество();
	
КонецПроцедуры


&НаКлиенте
Процедура ОтборПредприятиеПриИзменении(Элемент)
	
	ВСДОтборОбновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.EnterpriseФормаВыбора(ЭтаФорма, "ОтборПредприятиеНачалоВыбораОбработкаОповещения", СтандартнаяОбработка, ОтборХС);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПредприятиеНачалоВыбораОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		ОтборПредприятие = пРезультат;
		ВСДОтборОбновить();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтборХСПриИзменении(Элемент)
	
	ВСДОтборОбновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборХСНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.BusinessEntityФормаВыбора(ЭтаФорма, "ОтборХСНачалоВыбораОбработкаОповещения", СтандартнаяОбработка, ОтборХС);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборХСНачалоВыбораОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		ОтборХС = пРезультат;
		ОтборПредприятие = Неопределено;
		ВСДОтборОбновить();
	КонецЕсли;
	
КонецПроцедуры


