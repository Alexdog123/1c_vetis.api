
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПартииДок.Загрузить(Параметры.ПартииДок);
	
	КлючСтроки = Параметры.КлючСтроки;
	Количество = Параметры.Количество;
	КоличествоМест = Параметры.КоличествоМест;
	Номенклатура = Параметры.Номенклатура;
	НоменклатурнаяГруппа = Параметры.НоменклатурнаяГруппа;
	Предприятие = Параметры.Предприятие;
	ХозяйствующийСубъект = Параметры.ХозяйствующийСубъект;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаОбновитьПартии(Команда)
	
	ОбновитьПартииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРаспределитьПартии(Количеств)
	
	РаспределитьПартии();
	
	ОбновитьПартииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПартииПереместитьВниз(Команда)
	
	_ТекущиеДанные = Элементы.ПартииСписок.ТекущиеДанные;
	
	Если _ТекущиеДанные.Использовать Тогда
		_строка = ПартииДок.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid))[0];
		Если ПартииДок.Индекс(_строка) < ПартииДок.Количество() - 1 Тогда
			ПартииДок.Сдвинуть(ПартииДок.Индекс(_строка), 1);
			ОбновитьПартииНаСервере();
			Элементы.ПартииСписок.ТекущаяСтрока = ПартииСписок.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid))[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПартииПереместитьВверх(Команда)
	
	_ТекущиеДанные = Элементы.ПартииСписок.ТекущиеДанные;
	
	Если _ТекущиеДанные.Использовать Тогда
		_строка = ПартииДок.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid))[0];
		Если ПартииДок.Индекс(_строка) > 0 Тогда
			ПартииДок.Сдвинуть(ПартииДок.Индекс(_строка), -1);
			ОбновитьПартииНаСервере();
			Элементы.ПартииСписок.ТекущаяСтрока = ПартииСписок.НайтиСтроки(Новый Структура("guid", _ТекущиеДанные.guid))[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьПартииНаСервере()
	
	//Если Элементы.Товары.ТекущаяСтрока = Неопределено Тогда
	//	Возврат;
	//КонецЕсли;
	
	ПартииСписок.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(_Таблица.guid КАК Строка(36)) КАК guid,
	|	ВЫРАЗИТЬ(_Таблица.КлючСтроки КАК Число) КлючСтроки,
	|	ВЫРАЗИТЬ(_Таблица.НомерСтроки КАК Число) НомерСтроки,
	|	ВЫРАЗИТЬ(_Таблица.Количество КАК Число) Количество,
	|	ВЫРАЗИТЬ(_Таблица.КоличествоМест КАК Число) КоличествоМест,
	|	ВЫРАЗИТЬ(_Таблица.Отправлена КАК Булево) Отправлена
	|ПОМЕСТИТЬ ВПартииДок
	|ИЗ
	|	&ПартииДок КАК _Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_Партии.guid,
	|	_Партии.entryNumber,
	|	_Партии.updateDate,
	|	_Партии.volume КАК Количество,
	|	_Партии.packingAmount КАК КоличествоМест,
	|	_SubProduct.Ссылка КАК НоменклатурнаяГруппа,
	|	_SubProduct.guid КАК SubProductGuid,
	|	_ProductItem.Ссылка КАК Номенклатура,
	|	_Unit.Ссылка КАК ЕдиницаИзмерения,
	|	_PackingForm.Ссылка КАК Упаковка
	|ПОМЕСТИТЬ ВПартии
	|ИЗ
	|	РегистрСведений.ВетисСкладскойЖурнал КАК _Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _SubProduct
	|		ПО _Партии.SubProduct = _SubProduct.guid
	|			И _SubProduct.Ссылка Ссылка Справочник.НоменклатурныеГруппы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _ProductItem
	|		ПО _Партии.ProductItem = _ProductItem.guid
	|			И _Партии.Предприятие = _ProductItem.Предприятие
	|			И _ProductItem.Ссылка Ссылка Справочник.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Unit
	|		ПО _Партии.Unit = _Unit.guid
	|			И _Unit.Ссылка Ссылка Справочник.КлассификаторЕдиницИзмерения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _PackingForm
	|		ПО _Партии.PackingForm = _PackingForm.guid
	|			И _PackingForm.Ссылка Ссылка Справочник.ВетисPackingForm
	|ГДЕ
	|	ИСТИНА
	|	И _Партии.last
	|	И НЕ _Партии.status В(201,400,410,420,430)
//http://help.vetrf.ru/wiki/TransportOperation
//Указанная версия записи (uuid) складского журнала продукции в ИС Меркурий должна быть актуальной, неаннулированной и неудалённой.
//201	WITHDRAWN - Запись журнала аннулирована.
//400	DELETED - Запись была удалена.
//410	DELETED_WHEN_MERGE - Запись была удалена в результате объединения.
//420	DELETED_WHEN_SPLIT - Запись была удалена в результате разделения.
//430	DELETED_WHEN_ATTACH - Запись была удалена в результате присоединения.
	|	И _Партии.volume > 0
	|//о1	И _ProductItem.Ссылка = &Номенклатура
	|//о2	И _SubProduct.Ссылка = &НоменклатурнаяГруппа
	|	И _Партии.ХозяйствующийСубъект = &ХозяйствующийСубъект
	|	И _Партии.Предприятие = &Предприятие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА _ПартииДок.guid ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Использовать,
	|	ЕСТЬNULL(_ПартииДок.НомерСтроки, 999999) КАК НомерСтроки,
	|	&КлючСвязи КАК КлючСвязи,
	|	_ПартииДок.КлючСтроки,
	| ЕСТЬNULL(_Партии.guid, _ПартииДок.guid) КАК guid,
	| ЕСТЬNULL(_Партии.updateDate, ДатаВремя(1,1,1)) КАК updateDate,
	| ЕСТЬNULL(_Партии.entryNumber, """") КАК entryNumber,
	| _Партии.SubProductGuid,
	|	_Партии.НоменклатурнаяГруппа,
	|	_Партии.Номенклатура,
	|	_Партии.ЕдиницаИзмерения,
	|	_Партии.Упаковка,
	|	Выбор Когда _ПартииДок.Количество есть null Тогда 0 Иначе _ПартииДок.Количество Конец КАК Количество,
	|	Выбор Когда _ПартииДок.КоличествоМест есть null Тогда 0 Иначе _ПартииДок.КоличествоМест Конец КАК КоличествоМест,
	|	ЕСТЬNULL(_Партии.Количество, 0) КАК КоличествоПартии,
	|	ЕСТЬNULL(_Партии.КоличествоМест, 0) КАК КоличествоМестПартии,
	|	_ПартииДок.Отправлена КАК Отправлена
	|ИЗ
	|	ВПартии КАК _Партии
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВПартииДок КАК _ПартииДок
	|		ПО _Партии.guid = _ПартииДок.guid
	|ГДЕ
	|	ИСТИНА
	|	И ИСТИНА
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	| updateDate, //сначала старые
	|	_Партии.Количество";
	
	Запрос.УстановитьПараметр("ХозяйствующийСубъект", ХозяйствующийСубъект);
	Запрос.УстановитьПараметр("Предприятие", Предприятие);
	
	Запрос.УстановитьПараметр("ПартииДок", ПартииДок);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	Запрос.УстановитьПараметр("КлючСвязи", КлючСтроки);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//о2", "");
	
	//Если ЗначениеЗаполнено(_ТекущиеДанные.Номенклатура) Тогда
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//о1", "");
	//ИначеЕсли ЗначениеЗаполнено(_ТекущиеДанные.НоменклатурнаяГруппа) Тогда
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//о2", "");
	//Иначе
	//	Возврат;
	//КонецЕсли;
	
	_Результат = Запрос.Выполнить();
	_Выборка = _Результат.Выбрать();
	
	КоличествоИтог = 0;
	КоличествоМестИтог = 0;
	
	Пока _Выборка.Следующий() Цикл
		
		Если _Выборка.guid = NULL Тогда
			Если НЕ _Выборка.Отправлена Тогда
				ПартииДок.Удалить(_Выборка.НомерСтроки-1);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		_строка = ПартииСписок.Добавить();
		
		ЗаполнитьЗначенияСвойств(_строка, _Выборка);
		
		_строка.Представление = _Выборка.entryNumber + " / " + Формат(_Выборка.updateDate, "ДЛФ=D");
		
		КоличествоИтог = КоличествоИтог + _Выборка.Количество;
		
		КоличествоМестИтог = КоличествоМестИтог + _Выборка.КоличествоМест;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РаспределитьПартии()
	
	Если Элементы.Товары.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	_ПартииСтроки = ПартииДок;
	
	_Количество = Количество;
	
	_Структура = Новый Структура("guid");
	
	Для каждого _ПартииСтрока Из _ПартииСтроки Цикл
		
		_Структура.guid = _ПартииСтрока.guid;
		
		_ПартииСписокСтроки = ПартииСписок.НайтиСтроки(_Структура);
		
		//Добавлено VladimirVS89, 2017-12-12
		РаспределенныеПартии=ПартииДок.НайтиСтроки(_Структура);
		//Конец добавления VladimirVS89, 2017-12-12
		
		Если _ПартииСписокСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		_ПартииСписокСтрока = _ПартииСписокСтроки[0];
		
		//Добавлено VladimirVS89, 2017-12-12
		Для каждого строка из РаспределенныеПартии Цикл;
			
			Если _ПартииСтрока.КлючСвязи<>строка.КлючСвязи Тогда
				
				_ПартииСписокСтрока.КоличествоПартии=_ПартииСписокСтрока.КоличествоПартии-строка.Количество;
				
			КонецЕсли;
			
		КонецЦикла;
		//Конец добавления VladimirVS89, 2017-12-12
		
		Если _ПартииСписокСтрока.Отправлена Тогда
			_Количество = _Количество - _ПартииСписокСтрока.Количество;
			Продолжить;
		ИначеЕсли _Количество <= 0 Тогда
			_ПартииСтрока.Количество = 0;
		ИначеЕсли _ПартииСписокСтрока.КоличествоПартии >= _Количество Тогда
			_ПартииСтрока.Количество = _Количество;
			_Количество = 0;
		Иначе
			_ПартииСтрока.Количество = _ПартииСписокСтрока.КоличествоПартии;
			_Количество = _Количество - _ПартииСписокСтрока.КоличествоПартии;
		КонецЕсли;
		
		_ПартииСтрока.КоличествоМест = _ПартииСтрока.Количество * ?(_ПартииСписокСтрока.КоличествоПартии = 0, 0, _ПартииСписокСтрока.КоличествоМестПартии / _ПартииСписокСтрока.КоличествоПартии);
		
		Модифицированность = Истина;
		
	КонецЦикла;
	
КонецПроцедуры
