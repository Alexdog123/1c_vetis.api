
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьРеквизитыФормы();
	
	Для каждого _Элемент Из Элементы Цикл
		Если ТипЗнч(_Элемент) = Тип("ПолеФормы") Тогда
			Если Лев(_Элемент.ПутьКДанным, 2) = "сж" Тогда
				_Элемент.УстановитьДействие("ПриИзменении", "ТоварыПриИзменении");
			ИначеЕсли Лев(_Элемент.ПутьКДанным, 3) = "всд" Тогда
				_Элемент.УстановитьДействие("ПриИзменении", "ВСДПриИзменении");
			ИначеЕсли Лев(_Элемент.ПутьКДанным, 3) = "осм" Тогда
				_Элемент.УстановитьДействие("ПриИзменении", "РезультатыОсмотраПриИзменении");
			ИначеЕсли Лев(_Элемент.ПутьКДанным, 3) = "ттн" Тогда
				_Элемент.УстановитьДействие("ПриИзменении", "ТТНПриИзменении");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ФормаКомандаПогасить.Видимость = (Ложь
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.ПустаяСсылка")
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Оформлен"));
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.Товары.Очистить();
	ТекущийОбъект.ВСД.Очистить();
	ТекущийОбъект.ТТН.Очистить();
	
	_СтрокаСЖ = ТекущийОбъект.Товары.Добавить();
	_СтрокаВСД = ТекущийОбъект.ВСД.Добавить();
	_СтрокаТТН = ТекущийОбъект.ТТН.Добавить();
	
	Для каждого _Реквизит Из ПолучитьРеквизиты() Цикл
		Если Лев(_Реквизит.Имя, 2) = "сж" Тогда
			_СтрокаСЖ[Сред(_Реквизит.Имя, 3)] = ЭтаФорма[_Реквизит.Имя];
		ИначеЕсли Лев(_Реквизит.Имя, 3) = "всд" Тогда
			_СтрокаВСД[Сред(_Реквизит.Имя, 4)] = ЭтаФорма[_Реквизит.Имя];
		ИначеЕсли Лев(_Реквизит.Имя, 3) = "осм" Тогда
			_СтрокаВСД[Сред(_Реквизит.Имя, 4)] = ЭтаФорма[_Реквизит.Имя];
		ИначеЕсли Лев(_Реквизит.Имя, 3) = "ттн" Тогда
			_СтрокаТТН[Сред(_Реквизит.Имя, 4)] = ЭтаФорма[_Реквизит.Имя];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаЗаполнитьИзСервиса(Команда)
	
	КомандаЗаполнитьИзСервисаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПогасить(Команда)
	
	Если НЕ Объект.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.uuid) Тогда
		Возврат;
	КонецЕсли;
	
	_Индекс = 0;
	
	Для _Индекс = 0 По Объект.Товары.Количество()-1 Цикл
		
		КомандаПогаситьСервер(_Индекс);
		
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
	ТоварыПриИзмененииНаСервере(Элемент.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ТоварыПриИзмененииНаСервере(ЭлементИмя)
	
	Если Элементы[ЭлементИмя].ПутьКДанным = "сжНоменклатура" Тогда
		сжЕдиницаИзмерения = сжНоменклатура.БазоваяЕдиницаИзмерения;
		сжСтранаПроисхождения = сжНоменклатура.СтранаПроисхождения;
		сжНоменклатурнаяГруппа = сжНоменклатура.НоменклатурнаяГруппа;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВСДПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатыОсмотраПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТТНПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура сжНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.ProductItemФормаВыбора(ЭтаФорма, "сжНоменклатураОбработкаОповещения", СтандартнаяОбработка, сжНоменклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура сжНоменклатураОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		сжНоменклатура = Результат;
		сжProductItemName = "";
		сжProductItemGuid = "";
		сжSubProductName = "";
		сжSubProductGuid = "";
		ТоварыПриИзмененииНаСервере("сжНоменклатура");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура сжProductItemNameОчистка(Элемент, СтандартнаяОбработка)
	сжProductItemGuid = "";
КонецПроцедуры

&НаКлиенте
Процедура сжSubProductNameОчистка(Элемент, СтандартнаяОбработка)
	сжSubProductGuid = "";
КонецПроцедуры


&НаКлиенте
Процедура сжПроизводительПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.EnterpriseФормаВыбора(ЭтаФорма, "сжПроизводительПредприятиеОбработкаОповещения", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура сжПроизводительПредприятиеОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		сжПроизводительПредприятие = Результат;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура сжСтранаПроисхожденияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.CountryФормаВыбора(ЭтаФорма, "сжСтранаПроисхожденияОповещения", СтандартнаяОбработка, сжСтранаПроисхождения);
	
КонецПроцедуры

&НаКлиенте
Процедура сжСтранаПроисхожденияОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		сжСтранаПроисхождения = Результат;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.BusinessEntityФормаВыбора(ЭтаФорма, "ПолучательОбработкаОповещения", СтандартнаяОбработка, Объект.Получатель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.Получатель = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.EnterpriseФормаВыбора(ЭтаФорма, "ОтправительПредприятиеОбработкаОповещения", СтандартнаяОбработка, Объект.Получатель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПредприятиеОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.ПолучательПредприятие = Результат;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтправительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.BusinessEntityФормаВыбора(ЭтаФорма, "ОтправительОбработкаОповещения", СтандартнаяОбработка, Объект.Отправитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.Отправитель = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.EnterpriseФормаВыбора(ЭтаФорма, "ОтправительПредприятиеОбработкаОповещения", СтандартнаяОбработка, Объект.Отправитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительПредприятиеОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.ОтправительПредприятие = Результат;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ттнПосредникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.BusinessEntityФормаВыбора(ЭтаФорма, "ттнПосредникОбработкаОповещения", СтандартнаяОбработка, ттнПосредник);
	
КонецПроцедуры

&НаКлиенте
Процедура ттнПосредникОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		ттнПосредник = Результат;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьРеквизитыФормы()
	
	Для каждого _Реквизит Из ПолучитьРеквизиты() Цикл
		Для каждого _Строка Из Объект.Товары Цикл
			Если Лев(_Реквизит.Имя, 2) = "сж" Тогда
				ЭтаФорма[_Реквизит.Имя] = _Строка[Сред(_Реквизит.Имя, 3)];
			КонецЕсли;
		КонецЦикла;
		
		Для каждого _Строка Из Объект.ВСД Цикл
			Если Лев(_Реквизит.Имя, 3) = "всд" Тогда
				ЭтаФорма[_Реквизит.Имя] = _Строка[Сред(_Реквизит.Имя, 4)];
			КонецЕсли;
		КонецЦикла;
		
		Для каждого _Строка Из Объект.РезультатыОсмотра Цикл
			Если Лев(_Реквизит.Имя, 3) = "осм" Тогда
				ЭтаФорма[_Реквизит.Имя] = _Строка[Сред(_Реквизит.Имя, 4)];
			КонецЕсли;
		КонецЦикла;
		
		Для каждого _Строка Из Объект.ТТН Цикл
			Если Лев(_Реквизит.Имя, 3) = "ттн" Тогда
				ЭтаФорма[_Реквизит.Имя] = _Строка[Сред(_Реквизит.Имя, 4)];
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура КомандаЗаполнитьИзСервисаСервер()
	
	Если НЕ ВетисMercuryApplicationsСлой1с.getVetDocumentByUuid(Объект, Объект) = Неопределено Тогда
		
		ЗаполнитьРеквизитыФормы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура КомандаПогаситьСервер(пНомерСтроки)
	
	_Отказ = Ложь;
	
	_СтрокаСЖ = Объект.Товары.Получить(пНомерСтроки);
	
	ВетисMercuryApplicationsСлой1с.IncomingOperation(_СтрокаСЖ, Объект, _Отказ);
	
	Если НЕ _Отказ = Ложь Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = ЭтаФорма.ИмяФормы Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисВерсия" Тогда
		УстановитьВидимость();
	ИначеЕсли ИмяСобытия = "ВетисОтладка" Тогда
		УстановитьВидимость();
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимость()
	
	_Версия20 = ВетисXSD.Версия_2_0();
	_Отладка = ВетисОбщегоНазначения.РазрешенаОтладка();
	
	Элементы.ГруппаРезультатыОсмотра.Видимость = _Версия20;
	Элементы.ГруппаВСД.Видимость = НЕ _Версия20;
	Элементы.ГруппаДополнительно.Видимость = _Отладка;
	Элементы.uuid.Видимость = _Отладка;
	
КонецПроцедуры
