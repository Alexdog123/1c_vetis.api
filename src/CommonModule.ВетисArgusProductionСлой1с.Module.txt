
Функция ProductType(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисProductType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисProductType.МясоИМясопродукты") Тогда
			Возврат ВетисКонстанты.ProductType_МясоИМясопродукты();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.КормаИКормовыеДобавки") Тогда
			Возврат ВетисКонстанты.ProductType_КормаИКормовыеДобавки();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.ЖивыеЖивотные") Тогда
			Возврат ВетисКонстанты.ProductType_ЖивыеЖивотные();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.ЛекарственныеСредства") Тогда
			Возврат ВетисКонстанты.ProductType_ЛекарственныеСредства();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.ПищевыеПродукты") Тогда
			Возврат ВетисКонстанты.ProductType_ПищевыеПродукты();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.НепищевыеПродуктыИДругое") Тогда
			Возврат ВетисКонстанты.ProductType_НепищевыеПродуктыИДругое();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.РыбаИМорепродукты") Тогда
			Возврат ВетисКонстанты.ProductType_РыбаИМорепродукты();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисProductType.ПродукцияНеТребующаяРазрешения") Тогда
			Возврат ВетисКонстанты.ProductType_НепищевыеПродуктыИДругое();
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.ProductType_МясоИМясопродукты() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.МясоИМясопродукты");
		ИначеЕсли value = ВетисКонстанты.ProductType_КормаИКормовыеДобавки() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.КормаИКормовыеДобавки");
		ИначеЕсли value = ВетисКонстанты.ProductType_ЖивыеЖивотные() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.ЖивыеЖивотные");
		ИначеЕсли value = ВетисКонстанты.ProductType_ЛекарственныеСредства() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.ЛекарственныеСредства");
		ИначеЕсли value = ВетисКонстанты.ProductType_ПищевыеПродукты() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.ПищевыеПродукты");
		ИначеЕсли value = ВетисКонстанты.ProductType_НепищевыеПродуктыИДругое() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.НепищевыеПродуктыИДругое");
		ИначеЕсли value = ВетисКонстанты.ProductType_РыбаИМорепродукты() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.РыбаИМорепродукты");
		ИначеЕсли value = ВетисКонстанты.ProductType_ПродукцияНеТребующаяРазрешения() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисProductType.ПродукцияНеТребующаяРазрешения");
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция Product(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип(ВетисИмяСправочника.Product("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(value, ПоУмолчанию);
	ИначеЕсли ТипЗнч(value) = Тип("ОбъектXDTO") Тогда
		Возврат Ветис.Соответствие_ПолучитьСсылку(value.guid, ВетисИмяСправочника.SubProduct("Справочник"), ПоУмолчанию);
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(value, ВетисИмяСправочника.SubProduct("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция SubProduct(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если пЗначение = Неопределено Тогда
		Возврат Неопределено;
	ИначеЕсли ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.SubProduct("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	Иначе
		_guid = ?(ТипЗнч(пЗначение) = Тип("ОбъектXDTO"), пЗначение.guid, пЗначение);
		Если ПустаяСтрока(_guid) Тогда
			Возврат ПоУмолчанию;
		КонецЕсли;
		_Значение = Ветис.Соответствие_ПолучитьСсылку(_guid, ВетисИмяСправочника.SubProduct("Справочник"), Неопределено);
		Если _Значение = Неопределено Тогда
			Если Ветис.Настройки_Интеграция() Тогда
				Возврат ПоУмолчанию;
			Иначе
				Возврат SubProductДобавить(_guid);
			КонецЕсли;
		Иначе
			Возврат _Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ProductItem(value, пПредприятие, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ОбъектXDTO") Тогда
		Если ЗначениеЗаполнено(value.guid) Тогда
			Возврат Ветис.Соответствие_ПолучитьProductItem(value.guid, пПредприятие, ПоУмолчанию);
		Иначе
			Возврат Ветис.Соответствие_ПолучитьProductItem(value.name, пПредприятие, ПоУмолчанию);
		КонецЕсли;
	Иначе
		Возврат Ветис.Соответствие_ПолучитьProductItem(value, пПредприятие, ПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция SubProductДобавить(guid)
	
	_SubProduct = ?(Ветис.Версия_2_0(), ВетисProductService_2_0, ВетисProductService).GetSubProductByGuid(guid);
	
	Запрос = Новый Запрос("ВЫБРАТЬ _Таблица.Ссылка ИЗ Справочник.НоменклатурныеГруппы КАК _Таблица ГДЕ НЕ _Таблица.ЭтоГруппа И _Таблица.Наименование В (&Наименование)");
	
	Запрос.УстановитьПараметр("Наименование", _SubProduct.name);
	
	_Объект = Запрос.Выполнить().Выбрать();
	
	Если НЕ _Объект.Следующий() Тогда
		
		_Объект = Справочники.НоменклатурныеГруппы.СоздатьЭлемент();
		
		_Объект.Наименование = _SubProduct.name;
		
		_Объект.Записать();
		
		Ветис.Журнал_Добавить("+ " + СокрЛП(_SubProduct.name), "Ветис.SubProduct");
		
	КонецЕсли;
	
	Ветис.Соответствие_Добавить(_Объект.Ссылка, _SubProduct.guid, _SubProduct.name);
	
	Возврат _Объект.Ссылка;
	
КонецФункции
