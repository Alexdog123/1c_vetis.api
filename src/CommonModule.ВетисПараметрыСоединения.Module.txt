
Функция Логин() Экспорт
	Возврат ВетисПеременные.Получить("ВетисЛогин");
КонецФункции

Функция Пароль() Экспорт
	Возврат ВетисПеременные.Получить("ВетисПароль");
КонецФункции

Функция apiKey() Экспорт
	Возврат ВетисПеременные.Получить("ВетисКлючАПИ");
КонецФункции

Функция serviceId() Экспорт
	Возврат "mercury-g2b.service" + ВетисОбщегоНазначения.ВерсияПредставление(":");
КонецФункции

Функция ЛогинВрача() Экспорт
	Возврат ВетисПеременные.Получить("ВетисЛогинВрача");
КонецФункции

Функция Врач() Экспорт
	
	Если ВетисОбщегоНазначения.ВерсияРавно("2.0") Тогда
		Возврат ВетисMercuryVetdocument_2_0.User(ЛогинВрача(), ВетисПеременные.Получить("ВетисВрач"), ВетисПеременные.Получить("ВетисДолжностьВрача"));
	Иначе
		Возврат ВетисArgusCommon.User(ЛогинВрача(), ВетисПеременные.Получить("ВетисВрач"), ВетисПеременные.Получить("ВетисДолжностьВрача"));
	КонецЕсли;
	
КонецФункции

Функция ЛогинХС() Экспорт
	Возврат ВетисПеременные.Получить("ВетисЛогинХС");
КонецФункции

Функция ПарольХС() Экспорт
	Возврат ВетисПеременные.Получить("ВетисПарольХС");
КонецФункции

Функция Адрес() Экспорт
	Возврат ВетисПеременные.Получить("ВетисАдресТочкиДоступа");
КонецФункции

Функция Порт() Экспорт
	Возврат ВетисПеременные.Получить("ВетисПортТочкиДоступа");
КонецФункции

Функция issuerId() Экспорт
	Возврат ВетисПеременные.Получить("ВетисИдентификаторХС");
КонецФункции

Процедура Инициализировать() Экспорт
	
	Если НЕ РольДоступна("ВетисПользователь") Тогда
		Возврат;
	КонецЕсли;
	
	ВетисПеременные.Инициализировать();
	
	ВетисОбщегоНазначения.ВерсияУстановить(Константы.ВетисВерсия.Получить());
	
	ВетисПеременные.Установить("ВетисИдентификаторХС", "<нет настроек>");
	ВетисПеременные.Установить("ВетисХС", Неопределено);
	ВетисПеременные.Установить("ВетисПользователь", Пользователи.ТекущийПользователь());
	
	ИнициализироватьНастройкиХС(Константы.ВетисОсновнойХС.Получить());
	
	_Настройки = ПолучитьНастройкиПользователя();
	
	ВетисПеременные.Установить("ВетисЛогинХС",    _Настройки.Логин);
	ВетисПеременные.Установить("ВетисПарольХС",   _Настройки.Пароль);
	
КонецПроцедуры

Функция ИнициализироватьНастройкиХС(пХС = Неопределено) Экспорт
	
	Если пХС = Неопределено Тогда
		Возврат ВетисПеременные.Получить("ВетисИдентификаторХС");
		
	ИначеЕсли ТипЗнч(пХС) = Тип(ВетисИмяСправочника.BusinessEntity("СправочникСсылка")) Тогда
		Если ВетисПеременные.Получить("ВетисХС") = пХС Тогда
			Возврат ВетисПеременные.Получить("ВетисИдентификаторХС");
		Иначе
			_ХС = пХС;
			_issuerId = ВетисCerberusEnterpriseСлой1с.BusinessEntity(пХС);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(пХС) = Тип("Строка") И НЕ ПустаяСтрока(пХС) Тогда
		Если ВетисПеременные.Получить("ВетисИдентификаторХС") = пХС Тогда
			Возврат ВетисПеременные.Получить("ВетисИдентификаторХС");
		Иначе
			_ХС = ВетисCerberusEnterpriseСлой1с.BusinessEntity(пХС);
			_issuerId = пХС;
		КонецЕсли;
		
	Иначе
		Возврат Неопределено;
		
	КонецЕсли;
	
	_Настройки = ПолучитьНастройкиХС(_ХС);
	
	ВетисПеременные.Установить("ВетисЛогин",          _Настройки.Логин);
	ВетисПеременные.Установить("ВетисПароль",         _Настройки.Пароль);
	ВетисПеременные.Установить("ВетисЛогинВрача",     _Настройки.ЛогинВрача);
	ВетисПеременные.Установить("ВетисВрач",           _Настройки.Врач);
	ВетисПеременные.Установить("ВетисДолжностьВрача", _Настройки.ДолжностьВрача);
	
	ВетисПеременные.Установить("ВетисКлючАПИ",    _Настройки.КлючАПИ);
	
	ВетисПеременные.Установить("ВетисХС", _ХС);
	ВетисПеременные.Установить("ВетисИдентификаторХС", _issuerId);
	
	ВетисПеременные.Установить("ВетисАдресТочкиДоступа", ?(_Настройки.Тестовый, "api2.vetrf.ru", "api.vetrf.ru"));
	ВетисПеременные.Установить("ВетисПортТочкиДоступа",  ?(_Настройки.Тестовый, 8002, Неопределено));
	
	Возврат _issuerId;
	
КонецФункции

Функция ПолучитьНастройкиХС(пХС)
	
	_мз = РегистрыСведений.ВетисНастройкиХС.СоздатьМенеджерЗаписи();
	_мз.ХозяйствующийСубъект = пХС;
	
	_мз.Прочитать();
	
	_результат = Новый Структура();
	Если _мз.Выбран() Тогда
		Для каждого _ресурс Из Метаданные.РегистрыСведений.ВетисНастройкиХС.Ресурсы Цикл
			_результат.Вставить(_ресурс.Имя, _мз[_ресурс.Имя]);
		КонецЦикла;
	Иначе
		Для каждого _ресурс Из Метаданные.РегистрыСведений.ВетисНастройкиХС.Ресурсы Цикл
			_результат.Вставить(_ресурс.Имя, Неопределено);
		КонецЦикла;
	КонецЕсли;
	
	Возврат _результат;
	
КонецФункции

Функция ПолучитьНастройкиПользователя()
	
	_мз = РегистрыСведений.ВетисПользователи.СоздатьМенеджерЗаписи();
	_мз.Пользователь = ВетисПеременные.Получить("ВетисПользователь");
	_мз.ХозяйствующийСубъект = ВетисПеременные.Получить("ВетисХС");
	
	_мз.Прочитать();
	
	Если _мз.Выбран() Тогда
		Возврат Новый Структура("Логин, Пароль", _мз.Логин, _мз.Пароль);
	Иначе
		Возврат Новый Структура("Логин, Пароль", "", "");
	КонецЕсли;
	
КонецФункции
