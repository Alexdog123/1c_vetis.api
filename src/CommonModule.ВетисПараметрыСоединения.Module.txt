
Функция Логин() Экспорт
	Возврат ВетисПеременные.Получить("ВетисЛогин");
КонецФункции

Функция Пароль() Экспорт
	Возврат ВетисПеременные.Получить("ВетисПароль");
КонецФункции

Функция apiKey() Экспорт
	Возврат ВетисПеременные.Получить("ВетисКлючАПИ");
КонецФункции

Функция serviceId() Экспорт
	Возврат "mercury-g2b.service" + ВетисXSD.ВерсияПредставление(":");
КонецФункции

Функция ЛогинВрача() Экспорт
	Возврат ВетисПеременные.Получить("ВетисЛогинВрача");
КонецФункции

Функция Врач() Экспорт
	Если ВетисXSD.Версия_2_0() Тогда
		Возврат ВетисMercuryVetdocument_2_0.User(ЛогинВрача(), ВетисПеременные.Получить("ВетисВрач"), ВетисПеременные.Получить("ВетисДолжностьВрача"));
	Иначе
		Возврат ВетисArgusCommon.User(ЛогинВрача(), ВетисПеременные.Получить("ВетисВрач"), ВетисПеременные.Получить("ВетисДолжностьВрача"));
	КонецЕсли;
КонецФункции

Функция ЛогинХС() Экспорт
	Возврат ВетисПеременные.Получить("ВетисЛогинХС");
КонецФункции

Функция ПарольХС() Экспорт
	Возврат ВетисПеременные.Получить("ВетисПарольХС");
КонецФункции

Функция issuerId() Экспорт
	Возврат ВетисПеременные.Получить("ВетисИдентификаторХС");
КонецФункции

Функция ОсновнойХС(пЗначение = Неопределено) Экспорт
	
	Если пЗначение = Неопределено Тогда
			
		_Значение = ВетисПеременные.Получить("ВетисХС", Неопределено);
		
		Если _Значение = Неопределено Тогда
			
			_Значение = Константы.ВетисОсновнойХС.Получить();
			
			ВетисПеременные.Установить("ВетисХС", _Значение);
			
		КонецЕсли;
		
		Возврат _Значение;
		
	Иначе
		
		Константы.ВетисОсновнойХС.Установить(пЗначение);
		
		ВетисПеременные.Установить("ВетисХС", пЗначение);
		
	КонецЕсли;
	
КонецФункции


Процедура Инициализировать() Экспорт
	
	Если НЕ РольДоступна("ВетисПользователь") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьНастройкиХС();
	
	ИнициализироватьНастройкиПользователя();
	
	ВетисXSD.Инициализировать();
	
КонецПроцедуры

Функция ИнициализироватьНастройкиХС(пХС = Неопределено) Экспорт
	
	Если пХС = Неопределено Тогда
		_ХС = ОсновнойХС();
		
	ИначеЕсли ТипЗнч(пХС) = Тип(ВетисИмяСправочника.BusinessEntity("СправочникСсылка")) Тогда
		Если ОсновнойХС() = пХС Тогда
			Возврат issuerId();
		Иначе
			_ХС = пХС;
			_issuerId = ВетисCerberusEnterpriseСлой1с.BusinessEntity(пХС);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(пХС) = Тип("Строка") И НЕ ПустаяСтрока(пХС) Тогда
		Если issuerId() = пХС Тогда
			Возврат пХС;
		Иначе
			_ХС = ВетисCerberusEnterpriseСлой1с.BusinessEntity(пХС);
			_issuerId = пХС;
		КонецЕсли;
		
	Иначе
		Возврат Неопределено;
		
	КонецЕсли;
	
	_Настройки = ПолучитьНастройкиХС(_ХС);
	
	ВетисПеременные.Установить("ВетисЛогин",          _Настройки.Логин);
	ВетисПеременные.Установить("ВетисПароль",         _Настройки.Пароль);
	ВетисПеременные.Установить("ВетисЛогинВрача",     _Настройки.ЛогинВрача);
	ВетисПеременные.Установить("ВетисВрач",           _Настройки.Врач);
	ВетисПеременные.Установить("ВетисДолжностьВрача", _Настройки.ДолжностьВрача);
	
	ВетисПеременные.Установить("ВетисКлючАПИ",    _Настройки.КлючАПИ);
	
	ВетисПеременные.Установить("ВетисХС", _ХС);
	ВетисПеременные.Установить("ВетисИдентификаторХС", _issuerId);
	
	Возврат _issuerId;
	
КонецФункции

Функция ИнициализироватьНастройкиПользователя() Экспорт
	
	_мз = РегистрыСведений.ВетисПользователи.СоздатьМенеджерЗаписи();
	_мз.Пользователь = Пользователи.ТекущийПользователь();
	_мз.ХозяйствующийСубъект = ОсновнойХС();
	
	_мз.Прочитать();
	
	Если _мз.Выбран() Тогда
		ВетисПеременные.Установить("ВетисЛогинХС",  _мз.Логин);
		ВетисПеременные.Установить("ВетисПарольХС", _мз.Пароль);
	Иначе
		ВетисПеременные.Установить("ВетисЛогинХС",  "");
		ВетисПеременные.Установить("ВетисПарольХС", "");
	КонецЕсли;
	
КонецФункции

Функция ПолучитьНастройкиХС(пХС)
	
	_мз = РегистрыСведений.ВетисНастройкиХС.СоздатьМенеджерЗаписи();
	_мз.ХозяйствующийСубъект = пХС;
	
	_мз.Прочитать();
	
	_результат = Новый Структура();
	Если _мз.Выбран() Тогда
		Для каждого _ресурс Из Метаданные.РегистрыСведений.ВетисНастройкиХС.Ресурсы Цикл
			_результат.Вставить(_ресурс.Имя, _мз[_ресурс.Имя]);
		КонецЦикла;
	Иначе
		Для каждого _ресурс Из Метаданные.РегистрыСведений.ВетисНастройкиХС.Ресурсы Цикл
			_результат.Вставить(_ресурс.Имя, _ресурс.Тип.ПривестиЗначение());
		КонецЦикла;
	КонецЕсли;
	
	Возврат _результат;
	
КонецФункции

