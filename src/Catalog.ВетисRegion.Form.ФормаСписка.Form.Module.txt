
&НаСервере
Процедура КомандаЗаполнитьНаСервере(пСтрана)
	
	_Страна = пСтрана;
	
	_countryGuid = ?(ВетисXSD.Версия_2_0(), ВетисDictionaryСлой1с, ВетисIkarСлой1с).Country(_Страна);
	
	Если НЕ ЗначениеЗаполнено(_countryGuid) Тогда
		ВетисОбщегоНазначения.ВывестиСообщение("Заполнение справочника ВетисRegion: нет сопоставления страны.");
		Возврат;
	КонецЕсли;
	
	_Service = ?(ВетисXSD.Версия_2_0(), ВетисIkarService_2_0, ВетисIkarService);
	
	_ТаблицаВетис = Новый ТаблицаЗначений;
	_ТаблицаВетис.Колонки.Добавить("name", Новый ОписаниеТипов("Строка"));
	_ТаблицаВетис.Колонки.Добавить("guid", Новый ОписаниеТипов("Строка"));
	_ТаблицаВетис.Колонки.Добавить("regionCode", Новый ОписаниеТипов("Строка"));
	_ТаблицаВетис.Колонки.Добавить("type", Новый ОписаниеТипов("Строка"));
	
	_Выборка = Неопределено; _параметры = Неопределено;
	Пока _Service.GetRegionListByCountryСледующий(_countryGuid, _Выборка, _параметры) Цикл
		ЗаполнитьЗначенияСвойств(_ТаблицаВетис.Добавить(), _Выборка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(_Таблица.name КАК СТРОКА(150)) КАК name,
	|	ВЫРАЗИТЬ(_Таблица.guid КАК СТРОКА(36)) КАК guid,
	|	ВЫРАЗИТЬ(_Таблица.regionCode КАК СТРОКА(10)) КАК regionCode,
	|	ВЫРАЗИТЬ(_Таблица.type КАК СТРОКА(10)) КАК type
	|ПОМЕСТИТЬ ВТаблицаВетис
	|ИЗ
	|	&ТаблицаВетис КАК _Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_Таблица.Ссылка КАК Ссылка,
	|	_Таблица.Наименование КАК Наименование,
	|	_Соответствие.guid КАК guid
	|ПОМЕСТИТЬ ВСправочник
	|ИЗ
	|	Справочник.ВетисRegion КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Соответствие
	|		ПО _Таблица.Ссылка = _Соответствие.Ссылка
	|ГДЕ
	|	ИСТИНА
	|	И _Таблица.Страна = &Страна
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_Таблица.Ссылка КАК Ссылка,
	|	_Таблица.Наименование КАК Наименование,
	|	_Ветис.name КАК name,
	|	_Ветис.guid КАК guid,
	|	_Ветис.regionCode КАК regionCode,
	|	_Ветис.type КАК type
	|ИЗ
	|	ВТаблицаВетис КАК _Ветис
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВСправочник КАК _Таблица
	|		ПО _Ветис.guid = _Таблица.guid
	|ГДЕ
	|	ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	name";
	
	Запрос.УстановитьПараметр("Страна", _Страна);
	Запрос.УстановитьПараметр("ТаблицаВетис", _ТаблицаВетис);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		_Новый = Ложь;
		
		_ЕстьИзменения = Ложь;
		
		Если Выборка.guid = NULL Тогда
			Выборка.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
			ВетисОбщегоНазначения.ВывестиСообщение("- " + Выборка.Наименование, "Ветис.Region");
			Продолжить;
			
		ИначеЕсли Выборка.Ссылка = NULL Тогда
			_Новый = Истина;
			
		Иначе
			_ЕстьИзменения = Ложь
			ИЛИ НЕ Выборка.Наименование = СокрЛП(Выборка.name);
			
		КонецЕсли;
		
		Если _ЕстьИзменения ИЛИ _Новый Тогда
			
			Если _Новый Тогда
				_Элемент = Справочники[ВетисИмяСправочника.Region()].СоздатьЭлемент();
				ВетисОбщегоНазначения.ВывестиСообщение("+ " + СокрЛП(Выборка.name), "Ветис.Region");
			Иначе
				_Элемент = Выборка.Ссылка.ПолучитьОбъект();
				ВетисОбщегоНазначения.ВывестиСообщение("~ " + СокрЛП(Выборка.name), "Ветис.Region");
			КонецЕсли;
			
			_Элемент.Наименование  = СокрЛП(Выборка.name);
			_Элемент.Страна        = _Страна;
			_Элемент.КодРегиона    = СокрЛП(Выборка.regionCode);
			_Элемент.Тип           = СокрЛП(Выборка.type);
			
			Попытка
				_Элемент.Записать();
				
				ВетисСоответствие.Добавить(_Элемент.Ссылка, Выборка.guid, Выборка.name);
				
			Исключение
				ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "Ветис.Region");
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнить(Команда)
	
	КомандаЗаполнитьНаСервере(Страна);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СтранаОтборНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.CountryФормаВыбора(ЭтаФорма, "СтранаОтборОбработкаОповещения", СтандартнаяОбработка, Страна);
	
КонецПроцедуры

&НаКлиенте
Процедура СтранаОтборОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Страна = Результат;
	КонецЕсли;
	
КонецПроцедуры
