
Функция ОсновнойХС(пЗначение = Неопределено) Экспорт
	
	Если пЗначение = Неопределено Тогда
			
		_Значение = ВетисПеременные.Получить("ВетисХС", Неопределено);
		
		Если _Значение = Неопределено Тогда
			
			_Значение = Константы.ВетисОсновнойХС.Получить();
			
			ВетисПеременные.Установить("ВетисХС", _Значение);
			
		КонецЕсли;
		
		Возврат _Значение;
		
	Иначе
		
		Константы.ВетисОсновнойХС.Установить(пЗначение);
		
		ВетисПеременные.Установить("ВетисХС", пЗначение);
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьСписокПредприятийПоХС(пХС) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	_Таблица.Предприятие
	|ИЗ
	|	РегистрСведений.ВетисПредприятияХС КАК _Таблица
	|ГДЕ
	|	_Таблица.ХозяйствующийСубъект = &ХС
	|";
	
	Запрос.УстановитьПараметр("ХС", пХС);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	_Список = Новый Массив;
	Пока Выборка.Следующий() Цикл
		_Список.Добавить(Выборка.Предприятие);
	КонецЦикла;
	
	Возврат _Список;
	
КонецФункции

Процедура ОбновитьСвязиХСПредприятие() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_Таблица.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
	|	_Таблица.Предприятие,
	|	_Таблица.ВСервисе,
	|	_СоответствиеПредприятие.guid КАК EnterpriseGuid,
	|	_СоответствиеХС.guid КАК BusinessEntityGuid
	|ИЗ
	|	РегистрСведений.ВетисПредприятияХС КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _СоответствиеХС
	|		ПО _Таблица.ХозяйствующийСубъект = _СоответствиеХС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _СоответствиеПредприятие
	|		ПО _Таблица.Предприятие = _СоответствиеПредприятие.Ссылка
	|ГДЕ
	|	ИСТИНА
	|	И ИСТИНА
	|ИТОГИ
	|	МАКСИМУМ(BusinessEntityGuid)
	|ПО
	|	ХозяйствующийСубъект";
	
	Результат = Запрос.Выполнить();
	ВыборкаХС = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаХС.Следующий() Цикл
		
		_список = Новый Массив;
		_Enterprise = Неопределено;
		_параметры = Неопределено;
		Если ВетисXSD.Версия_2_0() Тогда
			Пока ВетисEnterpriseService_2_0.GetActivityLocationListСледующий(ВыборкаХС.BusinessEntityGuid, _Enterprise, _параметры) Цикл
				_список.Добавить(_Enterprise.guid);
			КонецЦикла;
		Иначе
			Пока ВетисEnterpriseService.GetBusinessEntityEnterpriseListСледующий(ВыборкаХС.BusinessEntityGuid, _Enterprise, _параметры) Цикл
				_список.Добавить(_Enterprise.guid);
			КонецЦикла;
		КонецЕсли;
		
		Выборка = ВыборкаХС.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.EnterpriseGuid = NULL ИЛИ Выборка.BusinessEntityGuid = NULL ИЛИ _список.Найти(Выборка.EnterpriseGuid) = Неопределено Тогда
				_ВСервисе = Ложь;
			Иначе
				_ВСервисе = Истина;
			КонецЕсли;
			
			_мз = РегистрыСведений.ВетисПредприятияХС.СоздатьМенеджерЗаписи();
			_мз.ХозяйствующийСубъект = Выборка.ХозяйствующийСубъект;
			_мз.Предприятие = Выборка.Предприятие;
			_мз.ВСервисе = _ВСервисе;
			_мз.Записать();
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура СинхронизироватьЖурналВСД(пСсылка = Неопределено, пХозяйствующийСубъект = Неопределено, пПредприятие = Неопределено, пТип = Неопределено, пСтатус = Неопределено) Экспорт
	
	_ВетисCerberusEnterpriseСлой1с = ?(ВетисXSD.Версия_2_0(), ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с);
	
	Если пХозяйствующийСубъект = Неопределено Тогда
		_ХозяйствующийСубъект = ОсновнойХС();
	Иначе
		_ХозяйствующийСубъект = пХозяйствующийСубъект;
	КонецЕсли;
	
	_issuerId = _ВетисCerberusEnterpriseСлой1с.BusinessEntity(_ХозяйствующийСубъект);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_Таблица.Ссылка КАК Ссылка,
	|	_Таблица.uuid КАК uuid,
	|	_Таблица.Тип КАК Тип,
	|	_Таблица.Статус КАК Статус,
	|	_Таблица.СерияВСД КАК СерияВСД,
	|	_Таблица.НомерВСД КАК НомерВСД,
	|	_Таблица.ДатаВСД КАК ДатаВСД
	|ИЗ
	|	Документ.ВетисВетеринарноСопроводительныйДокумент КАК _Таблица
	|ГДЕ
	|	ИСТИНА
	|	И НЕ _Таблица.ПометкаУдаления
	|	И НЕ _Таблица.uuid = """"
	|	И (_Таблица.Отправитель = &ХС ИЛИ _Таблица.Получатель = &ХС)
	|//опо	И (_Таблица.ОтправительПредприятие = &Предприятие ИЛИ _Таблица.ПолучательПредприятие = &Предприятие)
	|//от	И _Таблица.Тип = &Тип
	|//ос	И _Таблица.Статус = &Статус
	|	И ИСТИНА";
	
	Запрос.УстановитьПараметр("Статус", пСтатус);
	Запрос.УстановитьПараметр("Тип", пТип);
	Запрос.УстановитьПараметр("ХС", _ХозяйствующийСубъект);
	Запрос.УстановитьПараметр("Предприятие", пПредприятие);
	
	Если НЕ пСтатус = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ос", "");
	КонецЕсли;
	
	Если НЕ пТип = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//от", "");
	КонецЕсли;
	
	Если НЕ пПредприятие = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//опо", "");
	КонецЕсли;
	
	_Ветки = Запрос.Выполнить().Выгрузить();
	
	Если пПредприятие = Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	_Таблица.Ссылка КАК Ссылка,
		|	_Таблица.guid КАК guid
		|ИЗ
		|	РегистрСведений.ВетисСоответствие КАК _Таблица
		|ГДЕ
		|	ИСТИНА
		|	И _Таблица.Ссылка ССЫЛКА Справочник."+ВетисИмяСправочника.Enterprise()+"
		//только свои предприятия
		|	И _Таблица.Ссылка В
		|			(ВЫБРАТЬ
		|				_Таблица.Предприятие
		|			ИЗ
		|				РегистрСведений.ВетисПредприятияХС КАК _Таблица
		|			ГДЕ
		|				_Таблица.ХозяйствующийСубъект = &ХС)
		|	И ИСТИНА";
		Запрос.УстановитьПараметр("ХС", _ХозяйствующийСубъект);
		
		Результат = Запрос.Выполнить();
		
		Если НЕ Результат.Пустой() Тогда
			Выборка = Результат.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				СинхронизироватьЖурналВСДХСПредприятие(Выборка.guid, _issuerId, пТип, пСтатус, _Ветки);
				
			КонецЦикла;
		КонецЕсли;
	Иначе
		СинхронизироватьЖурналВСДХСПредприятие(_ВетисCerberusEnterpriseСлой1с.Enterprise(пПредприятие), _issuerId, пТип, пСтатус, _Ветки);
		
	КонецЕсли;
	
	Для каждого _Строка Из _Ветки Цикл
		_Док = _Строка.Ссылка.ПолучитьОбъект();
		_Док.ДополнительныеСвойства.Вставить("Загрузка", Истина);
		_Док.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
КонецПроцедуры

Процедура СинхронизироватьЖурналВСДХСПредприятие(enterpriseGuid, issuerId = Неопределено, пТип = Неопределено, пСтатус = Неопределено, пВетки)
	
	Перем _VetDocument, _Параметры;
	
	_Тип = ВетисMercuryVetdocumentСлой1с.VetDocumentType(пТип);
	_Статус = ВетисMercuryVetdocumentСлой1с.VetDocumentStatus(пСтатус);
	
	_Версия20 = ВетисXSD.Версия_2_0();
	
	_ВетисMercuryApplications = ?(_Версия20, ВетисMercuryApplications_2_0, ВетисMercuryApplications);
	
	Пока _ВетисMercuryApplications.getVetDocumentListСледующий(enterpriseGuid, issuerId, _Тип, _Статус, _VetDocument, _Параметры) Цикл
		
		_Строка = пВетки.Найти(_VetDocument.uuid, "uuid");
		
		Если _Строка = Неопределено Тогда
			_док = Документы.ВетисВетеринарноСопроводительныйДокумент.СоздатьДокумент();
			_док.Дата = ТекущаяДата();
		ИначеЕсли Ложь
			И _Строка.Тип       = ВетисMercuryVetdocumentСлой1с.VetDocumentType(_VetDocument.type)
			И _Строка.Статус    = ВетисMercuryVetdocumentСлой1с.VetDocumentStatus(_VetDocument.status)
			И (_Строка.СерияВСД = _VetDocument.issueSeries ИЛИ _VetDocument.issueSeries = Неопределено)
			И _Строка.НомерВСД  = _VetDocument.issueNumber
			И _Строка.ДатаВСД   = ВетисОбщегоНазначения.ВремяБД(_VetDocument.issueDate)
			Тогда
			//считаем что ничего не изменилось
			пВетки.Удалить(_Строка);
			Продолжить;
		Иначе
			_док = _Строка.Ссылка.ПолучитьОбъект();
			пВетки.Удалить(_Строка);
		КонецЕсли;
		
		ВетисMercuryVetdocumentСлой1с.VetDocumentКонвертировать(_док, _VetDocument);
		
		_док.ДополнительныеСвойства.Вставить("Загрузка");
		
		_док.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СинхронизироватьСкладскойЖурнал(пХС, пПредприятие) Экспорт
	
	Перем _stockEntry, _параметры;
	
	_Версия20 = ВетисXSD.Версия_2_0();
	_ВетисCerberusEnterpriseСлой1с = ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с);
	_ВетисMercuryApplications = ?(_Версия20, ВетисMercuryApplications_2_0, ВетисMercuryApplications);
	_ВетисArgusProductionСлой1с = ?(_Версия20, ВетисDictionaryСлой1с, ВетисArgusProductionСлой1с);
	_ВетисArgusCommonСлой1с = ?(_Версия20, ВетисDictionaryСлой1с, ВетисArgusCommonСлой1с);
	
	_issuerId = _ВетисCerberusEnterpriseСлой1с.BusinessEntity(пХС);
	
	_enterpriseGuid = _ВетисCerberusEnterpriseСлой1с.Enterprise(пПредприятие);
	
	_запрос = Новый Запрос("ВЫБРАТЬ ЕСТЬNULL(МАКСИМУМ(updateDate), ДАТАВРЕМЯ(1,1,1)) КАК Период ИЗ РегистрСведений.ВетисСкладскойЖурналРС");
	_выборка = _запрос.Выполнить().Выбрать();
	_выборка.Следующий();
	
	Пока _ВетисMercuryApplications.getStockEntryChangesListСледующий(_enterpriseGuid, _issuerId, _выборка.Период + 1, , _stockEntry, _параметры) Цикл
		
		_мз = РегистрыСведений.ВетисСкладскойЖурналРС.СоздатьМенеджерЗаписи();
		
		_мз.guid = _stockEntry.guid;
		_мз.uuid = _stockEntry.uuid;
		_мз.last = _stockEntry.last;
		
		_мз.status = _stockEntry.status;
		_мз._active = _stockEntry.active;
		_мз.entryNumber = _stockEntry.entryNumber;
		
		_мз.createDate = ВетисОбщегоНазначения.ВремяБД(_stockEntry.createDate);
		_мз.updateDate = ВетисОбщегоНазначения.ВремяБД(_stockEntry.updateDate);
		
		_мз.ProductType = _stockEntry.batch.productType;
		_мз.Product     = _stockEntry.batch.product.guid;
		_мз.SubProduct  = _stockEntry.batch.subProduct.guid;
		_мз.ProductItem = _stockEntry.batch.productItem.guid;
		
		_мз.Unit        = _stockEntry.batch.unit.guid;
		_мз.volume      = _stockEntry.batch.volume;
		
		Если _Версия20 Тогда
			//_мз.PackingForm = ?(_stockEntry.batch.productItem.packaging = Неопределено, "", _stockEntry.batch.productItem.packaging.packagingType.guid);
			//_мз.packingAmount = ?(_stockEntry.batch.productItem.packaging = Неопределено, 0, _stockEntry.batch.productItem.packaging.quantity);
			_package = ВетисDictionaryСлой1с.PackageList(_stockEntry.batch.packageList);
			_мз.PackingForm   = _package.packingType.guid;
			_мз.packingAmount = _package.quantity;
		Иначе
			_мз.PackingForm = ?(_stockEntry.batch.packingList = Неопределено, "", _stockEntry.batch.packingList.packingForm[0].uuid);
			_мз.packingAmount = _stockEntry.batch.packingAmount;
		КонецЕсли;
		
		_мз.Записать();
		
	КонецЦикла;
	
КонецПроцедуры
