
Функция BusinessEntity(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.BusinessEntity("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	Иначе
		_guid = ?(ТипЗнч(пЗначение) = Тип("ОбъектXDTO"), пЗначение.guid, пЗначение);
		_Значение = Ветис.Соответствие_ПолучитьСсылку(_guid, ВетисИмяСправочника.BusinessEntity("Справочник"), Неопределено);
		Если _Значение = Неопределено Тогда
			Если Ветис.СоздаватьХС() Тогда
				Возврат BusinessEntityДобавить(пЗначение.guid);
			Иначе
				Возврат ПоУмолчанию;
			КонецЕсли;
		Иначе
			Возврат _Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция BusinessEntityДобавить(guid)
	
	_Значение = ВетисEnterpriseService.GetBusinessEntityByGuid(guid);
	
	Запрос = Новый Запрос("ВЫБРАТЬ _Таблица.Ссылка ИЗ Справочник."+ВетисИмяСправочника.BusinessEntity()+" КАК _Таблица ГДЕ НЕ _Таблица.ЭтоГруппа И _Таблица.ИНН В (&ИНН)");
	
	Запрос.УстановитьПараметр("ИНН", _Значение.inn);
	
	_Объект = Запрос.Выполнить().Выбрать();
	
	Если НЕ _Объект.Следующий() Тогда
		
		_Объект = Вычислить(ВетисИмяСправочника.BusinessEntity("Справочники", "СоздатьЭлемент()"));
		
		BusinessEntityКонвертировать(_Объект, _Значение);
		
		_Объект.Записать();
		
	КонецЕсли;
	
	Ветис.Соответствие_Добавить(_Объект.Ссылка, _Значение.guid, _Значение.name, _Значение.fio);
	
	Возврат _Объект.Ссылка;
	
КонецФункции

Процедура BusinessEntityКонвертировать(пЗначение1, пЗначение2) Экспорт
	
	Если ТипЗнч(пЗначение1) = Тип("ОбъектXDTO") Тогда
		
	ИначеЕсли ТипЗнч(пЗначение2) = Тип("ОбъектXDTO") Тогда
		Если пЗначение2.type = ВетисКонстанты.BusinessEntityType_JURIDICAL() Тогда
			пЗначение1.Наименование = ?(ЗначениеЗаполнено(пЗначение2.Name), пЗначение2.Name, пЗначение2.fullName);
			пЗначение1.НаименованиеПолное = ?(ЗначениеЗаполнено(пЗначение2.fullName), пЗначение2.fullName, пЗначение2.Name);
			пЗначение1.ИНН = пЗначение2.inn;
			пЗначение1.КПП = пЗначение2.kpp;
			пЗначение1.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо");
		Иначе
			пЗначение1.Наименование = пЗначение2.fio;
			пЗначение1.ИНН = пЗначение2.inn;
			пЗначение1.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


Функция Enterprise(пЗначение, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пЗначение) = Тип(ВетисИмяСправочника.Enterprise("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пЗначение, ПоУмолчанию);
	Иначе
		_guid = ?(ТипЗнч(пЗначение) = Тип("ОбъектXDTO"), пЗначение.guid, пЗначение);
		_Значение = Ветис.Соответствие_ПолучитьСсылку(_guid, ВетисИмяСправочника.Enterprise("Справочник"), Неопределено);
		Если _Значение = Неопределено Тогда
			Если Ветис.СоздаватьХС() Тогда
				Возврат EnterpriseДобавить(пЗначение.guid);
			Иначе
				Возврат ПоУмолчанию;
			КонецЕсли;
		Иначе
			Возврат _Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция EnterpriseДобавить(guid)
	
	_Значение = ВетисEnterpriseService.GetEnterpriseByGuid(guid);
	
	Запрос = Новый Запрос("ВЫБРАТЬ _Таблица.Ссылка ИЗ Справочник."+ВетисИмяСправочника.Enterprise()+" КАК _Таблица ГДЕ НЕ _Таблица.ЭтоГруппа И _Таблица.ИНН В (&ИНН)");
	
	Запрос.УстановитьПараметр("ИНН", _Значение.inn);
	
	_Объект = Запрос.Выполнить().Выбрать();
	
	Если НЕ _Объект.Следующий() Тогда
		
		_Объект = Вычислить(ВетисИмяСправочника.Enterprise("Справочники", "СоздатьЭлемент()"));
		
		EnterpriseКонвертировать(_Объект, _Значение);
		
		_Объект.Записать();
		
	КонецЕсли;
	
	Ветис.Соответствие_Добавить(_Объект.Ссылка, _Значение.guid, _Значение.name, _Значение.fio);
	
	Возврат _Объект.Ссылка;
	
КонецФункции

Процедура EnterpriseКонвертировать(пЗначение1, пЗначение2) Экспорт
	
	Если ТипЗнч(пЗначение1) = Тип("ОбъектXDTO") Тогда
		
	ИначеЕсли ТипЗнч(пЗначение2) = Тип("ОбъектXDTO") Тогда
		пЗначение1.Наименование = пЗначение2.Name;
		пЗначение1.Тип =  ВетисCerberusEnterpriseСлой1с.EnterpriseType(пЗначение2.type);
		пЗначение1.Собственник = ВетисCerberusEnterpriseСлой1с.BusinessEntity(пЗначение2.owner);
		
		пЗначение1.Страна = ВетисIkarСлой1с.Country(пЗначение2.address.country.guid);
		пЗначение1.Регион = ВетисIkarСлой1с.Region(пЗначение2.address.region.guid);
		пЗначение1.Район = ВетисIkarСлой1с.District(пЗначение2.address.district.guid);
		пЗначение1.НаселенныйПункт = ВетисIkarСлой1с.Locality(пЗначение2.address.locality.guid);
		пЗначение1.АдресПредставление = пЗначение2.address.addressView;
		
		пЗначение1.НомераПредприятия.Очистить();
		Для каждого _enterpriseNumber Из пЗначение2.numberList.enterpriseNumber Цикл
			_строка = пЗначение1.НомераПредприятия.Добавить();
			_строка.Номер = _enterpriseNumber;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры


Функция Producer(пСсылка, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(пСсылка) = Тип(ВетисИмяСправочника.Enterprise("СправочникСсылка")) Тогда
		Возврат Ветис.Соответствие_ПолучитьGuid(пСсылка, ПоУмолчанию);
	ИначеЕсли ТипЗнч(пСсылка) = Тип("ОбъектXDTO") Тогда
		Если НЕ пСсылка.Свойства().Получить("guid") = Неопределено Тогда
			Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка.guid, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
		ИначеЕсли НЕ пСсылка.Свойства().Получить("enterprise") = Неопределено Тогда
			Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка.enterprise.guid, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
		ИначеЕсли НЕ пСсылка.Свойства().Получить("producer") = Неопределено И ТипЗнч(пСсылка.producer) = Тип("СписокXDTO") И пСсылка.producer.Количество() > 0 Тогда
			Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка.producer[0].enterprise.guid, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
		КонецЕсли;
	Иначе
		Возврат Ветис.Соответствие_ПолучитьСсылку(пСсылка, ВетисИмяСправочника.Enterprise("Справочник"), ПоУмолчанию);
	КонецЕсли;
	
КонецФункции


Функция BusinessEntityType(value, ПоУмолчанию = Неопределено) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисBusinessEntityType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ЮрЛицо") Тогда
			Возврат ВетисКонстанты.BusinessEntityType_JURIDICAL();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ФизЛицо") Тогда
			Возврат ВетисКонстанты.BusinessEntityType_PHYSICAL();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ИП") Тогда
			Возврат ВетисКонстанты.BusinessEntityType_SELF_EMPLOYED();
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.BusinessEntityType_JURIDICAL() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ЮрЛицо");
		ИначеЕсли value = ВетисКонстанты.BusinessEntityType_PHYSICAL() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ФизЛицо");
		ИначеЕсли value = ВетисКонстанты.BusinessEntityType_SELF_EMPLOYED() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисBusinessEntityType.ИП");
		Иначе
			Возврат ПоУмолчанию;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция EnterpriseType(value) Экспорт
	
	Если ТипЗнч(value) = Тип("ПеречислениеСсылка.ВетисEnterpriseType") Тогда
		Если      value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Предприятие") Тогда
			Возврат ВетисКонстанты.EnterpriseType_Предприятие();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Рынок") Тогда
			Возврат ВетисКонстанты.EnterpriseType_Рынок();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.СББЖ") Тогда
			Возврат ВетисКонстанты.EnterpriseType_СББЖ();
		ИначеЕсли value = ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Судно") Тогда
			Возврат ВетисКонстанты.EnterpriseType_Судно();
		Иначе
			Возврат 0;
		КонецЕсли;
	Иначе
		Если      value = ВетисКонстанты.EnterpriseType_Предприятие() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Предприятие");
		ИначеЕсли value = ВетисКонстанты.EnterpriseType_Рынок() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Рынок");
		ИначеЕсли value = ВетисКонстанты.EnterpriseType_СББЖ() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.СББЖ");
		ИначеЕсли value = ВетисКонстанты.EnterpriseType_Судно() Тогда
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.Судно");
		Иначе
			Возврат ПредопределенноеЗначение("Перечисление.ВетисEnterpriseType.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции
