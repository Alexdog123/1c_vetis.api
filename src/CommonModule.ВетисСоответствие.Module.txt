
Функция ПолучитьСсылку(guid, пТип, ПоУмолчанию = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	_Таблица.Ссылка
	|ИЗ
	|	РегистрСведений.ВетисСоответствие КАК _Таблица
	|ГДЕ
	|	_Таблица.guid = &guid
	|	И _Таблица.Ссылка ССЫЛКА {Тип}
	|	И ИСТИНА";
	
	Запрос.УстановитьПараметр("guid", guid);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "{Тип}", пТип);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат ПоУмолчанию;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьGuid(Ссылка, ПоУмолчанию = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	_Таблица.guid
	|ИЗ
	|	РегистрСведений.ВетисСоответствие КАК _Таблица
	|ГДЕ
	|	_Таблица.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.guid;
	Иначе
		Возврат ПоУмолчанию;
	КонецЕсли;
	
КонецФункции

Функция Добавить(Ссылка, guid, name = "", Описание = "") Экспорт
	
	мз = РегистрыСведений.ВетисСоответствие.СоздатьМенеджерЗаписи();
	
	мз.Ссылка = Ссылка;
	мз.guid   = guid;
	мз.name   = name;
	мз.Описание = Описание;
	
	мз.Записать();
	
КонецФункции

Функция Удалить(Ссылка) Экспорт
	
	мз = РегистрыСведений.ВетисСоответствие.СоздатьМенеджерЗаписи();
	
	мз.Ссылка = Ссылка;
	
	мз.Удалить();
	
КонецФункции


//Конвертирует номенклатуру в обе стороны
//Одна номенклатура нашей базы может быть связана с номенклатурой каждого поставщика
//Не путать с modificationOperation, где требуется Предприятие
//Параметры:
// Ссылка - наша номенклатура или guid или name
// ХозяйствующийСубъект - ХС поставщика
Функция ПолучитьProductItem(Ссылка, ХозяйствующийСубъект, ПоУмолчанию = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат ПоУмолчанию;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|//1	ВЫБОР КОГДА _Таблица.guid = """" ТОГДА _Таблица.name ИНАЧЕ _Таблица.guid КАК Ссылка,
	|//1	_Таблица.guid,
	|//1	_Таблица.name
	|//2	_Таблица.Ссылка
	|//3	_Таблица.Ссылка
	|ИЗ
	|	РегистрСведений.ВетисСоответствие КАК _Таблица
	|ГДЕ
	|	ИСТИНА
	|//1	И _Таблица.Ссылка = &Ссылка
	|//2	И _Таблица.guid = &Ссылка
	|//3	И _Таблица.name = &Ссылка
	|	И _Таблица.ХозяйствующийСубъект = &ХозяйствующийСубъект
	|	И _Таблица.Ссылка ССЫЛКА "+ВетисИмяСправочника.ProductItem("Справочник")+"
	|	И ИСТИНА";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ХозяйствующийСубъект", ХозяйствующийСубъект);
	
	_ЭтоСсылка = ТипЗнч(Ссылка) = ТипЗнч(ВетисИмяСправочника.ProductItem("СправочникСсылка"));
	
	Если _ЭтоСсылка Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//1", "");
	Иначе
		Попытка
			_проверка = Новый УникальныйИдентификатор(Ссылка);
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//2", "");
		Исключение
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//3", "");
		КонецПопытки;
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если _ЭтоСсылка Тогда
			Возврат Новый Структура("guid, name", Выборка.guid, Выборка.name);
		Иначе
			Возврат Выборка.Ссылка;
		КонецЕсли;
	Иначе
		Возврат ПоУмолчанию;
	КонецЕсли;
	
КонецФункции

Функция ДобавитьProductItem(Ссылка, ХозяйствующийСубъект, guid, name = "", Описание = "") Экспорт
	
	Если НЕ ЗначениеЗаполнено(guid) И НЕ ЗначениеЗаполнено(name)Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	мз = РегистрыСведений.ВетисСоответствие.СоздатьМенеджерЗаписи();
	
	мз.Ссылка      = Ссылка;
	мз.ХозяйствующийСубъект = ХозяйствующийСубъект;
	мз.guid        = guid;
	мз.name        = name;
	мз.Описание    = Описание;
	
	мз.Записать();
	
КонецФункции

Функция УдалитьProductItem(Ссылка, ХозяйствующийСубъект) Экспорт
	
	мз = РегистрыСведений.ВетисСоответствие.СоздатьМенеджерЗаписи();
	
	мз.Ссылка = Ссылка;
	мз.ХозяйствующийСубъект = ХозяйствующийСубъект;
	
	мз.Удалить();
	
КонецФункции
