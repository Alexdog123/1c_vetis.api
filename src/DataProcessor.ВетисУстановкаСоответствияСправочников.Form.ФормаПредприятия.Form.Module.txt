
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СправочникСписок.ПроизвольныйЗапрос = Истина;
	СправочникСписок.ОсновнаяТаблица = ВетисИмяСправочника.Enterprise("Справочник");
	СправочникСписок.ТекстЗапроса =
	"ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.Код,
	|	_Таблица.Наименование,
	|	_Таблица.АдресПредставление КАК Адрес,
	|	_Связи.ВСервисе,
	|	_Связи.ХозяйствующийСубъект,
	|	_Ветис.guid КАК guid,
	|	_Ветис.name КАК Ветисname,
	|	_Ветис.Описание КАК ВетисОписание
	|{ВЫБРАТЬ
	|	Ссылка.*,
	|	Код,
	|	Наименование,
	|	Адрес,
	|	ВСервисе,
	|	ХозяйствующийСубъект,
	|	guid,
	|	Ветисname,
	|	ВетисОписание}
	|ИЗ
	|	Справочник."+ВетисИмяСправочника.Enterprise()+" КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Ветис
	|		ПО _Таблица.Ссылка = _Ветис.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисПредприятияХС КАК _Связи
	|		ПО _Таблица.Ссылка = _Связи.Предприятие";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаОтборПоХС(Команда)
	
	ОтборПоХС = НЕ ОтборПоХС;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайтиПоИмени(Команда)
	
	СписокВетисЗаполнитьПоИмениСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайтиПоGuid(Команда)
	
	СписокВетисЗаполнитьПоGuidСервер(ОтборGuid, ОтборПоХС);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайтиПоХС(Команда)
	
	СписокВетисЗаполнитьПоGuidСервер(Объект.ХозяйствующийСубъект, ОтборПоХС);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязь(Команда)
	
	ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	СоздатьСвязьСервер(ТекущиеДанные.Ссылка);
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьСвязь(Команда)
	
	УдалитьСвязьСервер();
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервиса(Команда)
	
	Если Элементы.СправочникСписок.ТекущаяСтрока = Неопределено 
		ИЛИ Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	_форма = ОткрытьФорму(ВетисИмяСправочника.Enterprise("Справочник", "ФормаОбъекта"), Новый Структура("Ключ", Элементы.СправочникСписок.ТекущаяСтрока));
	
	_реквизиты = ЗаполнитьИзСервисаНаСервере();
	
	ЗаполнитьЗначенияСвойств(_форма.Объект, _реквизиты, , "НомераПредприятия");
	
	Для каждого _реквизит Из _реквизиты.НомераПредприятия Цикл
		_строка = _форма.Объект.НомераПредприятия.Добавить();
		_строка.Номер = _реквизит.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьИзСервиса(Команда)
	
	Если Элементы.СписокВетис.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	_форма = ОткрытьФорму(ВетисИмяСправочника.Enterprise("Справочник", "ФормаОбъекта"));
	
	_реквизиты = ЗаполнитьИзСервисаНаСервере();
	
	ЗаполнитьЗначенияСвойств(_форма.Объект, _реквизиты, , "НомераПредприятия");
	
	_форма.Объект.НомераПредприятия.Очистить();
	Для каждого _реквизит Из _реквизиты.НомераПредприятия Цикл
		_строка = _форма.Объект.НомераПредприятия.Добавить();
		_строка.Номер = _реквизит.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтвязатьПредприятиеХС1(Команда)
	
	_ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено ИЛИ НЕ ЗначениеЗаполнено(_ТекущиеДанные.guid) Тогда
		Возврат;
	КонецЕсли;
	
	ВетисХозяйственныеОперации.ОтвязатьХСПредприятие(Объект.ХозяйствующийСубъект, _ТекущиеДанные.Ссылка);
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПривязатьПредприятиеХС(Команда)
	
	_ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено ИЛИ НЕ ЗначениеЗаполнено(_ТекущиеДанные.guid) Тогда
		Возврат;
	КонецЕсли;
	
	ВетисХозяйственныеОперации.ПривязатьХСПредприятие(Объект.ХозяйствующийСубъект, _ТекущиеДанные.Ссылка);
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура ОтборИспользованиеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму(ВетисИмяСправочника.Enterprise("Справочник", "ФормаОбъекта"), Новый Структура("Ключ", Элементы.СправочникСписок.ТекущаяСтрока));
	
КонецПроцедуры


&НаСервере
Процедура СписокВетисЗаполнитьПоИмениСервер()
	
	Перем _Enterprise, _Параметры;
	
	_Версия20 = ВетисXSD.Версия_2_0();
	
	СписокВетис.Очистить();
	
	_отбор = Новый Структура();
	
	Если ОтборНаименованиеИспользование Тогда
		_отбор.Вставить("name", ОтборНаименование);
	КонецЕсли;
	
	Если ОтборРайонИспользование ИЛИ ОтборРегионИспользование Тогда
		_отборадрес = Новый Структура();
		Если ОтборРегионИспользование Тогда
			_отборадрес.Вставить("region", Новый Структура("guid", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Region(ОтборРегион)));
		КонецЕсли;
		Если ОтборРайонИспользование Тогда
			_отборадрес.Вставить("district", Новый Структура("guid", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).District(ОтборРайон)));
		КонецЕсли;
		_отбор.Вставить("address", _отборадрес);
	КонецЕсли;
	
	Если _Версия20 Тогда
		Пока ВетисEnterpriseService_2_0.GetRussianEnterpriseListСледующий(_отбор, _Enterprise, _Параметры) Цикл
			СписокВетисДобавить(_Enterprise);
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
	Иначе
		Пока ВетисEnterpriseService.GetRussianEnterpriseListСледующий(_отбор, _Enterprise, _Параметры) Цикл
			СписокВетисДобавить(_Enterprise);
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокВетисЗаполнитьПоGuidСервер(пGuid, пОтборПоХС)
	
	Перем _Enterprise, _Параметры;
	
	СписокВетис.Очистить();
	
	Если НЕ ЗначениеЗаполнено(пGuid) Тогда Возврат; КонецЕсли;
	
	_Версия20 = ВетисXSD.Версия_2_0();
	
	Если пОтборПоХС Тогда
		
		Если ТипЗнч(пGuid) = Тип("Строка") Тогда
			_Guid = пGuid;
		Иначе
			_Guid = ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).BusinessEntity(пGuid);
		КонецЕсли;
		
		Пока ?(_Версия20, ВетисEnterpriseService_2_0, ВетисEnterpriseService).GetActivityLocationListСледующий(_Guid, _Enterprise, _Параметры) Цикл
			СписокВетисДобавить(_Enterprise);
		КонецЦикла;
		
	Иначе
		
		_Enterprise = ?(_Версия20, ВетисEnterpriseService_2_0, ВетисEnterpriseService).GetEnterpriseByGuid(пGuid);
		
		СписокВетисДобавить(_Enterprise);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокВетисДобавить(пEnterprise)
	
	//в 2.0 в тесте найдены дубли 2017-10-26
	Если СписокВетис.НайтиСтроки(Новый Структура("guid", пEnterprise.guid)).Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	_СписокВетисСтрока = СписокВетис.Добавить();
	
	_СписокВетисСтрока.guid = пEnterprise.guid;
	_СписокВетисСтрока.name = пEnterprise.name;
	_СписокВетисСтрока.type = пEnterprise.type;
	_СписокВетисСтрока.owner = ?(пEnterprise.owner = Неопределено, "", пEnterprise.owner.guid);
	
	Если НЕ пEnterprise.address = Неопределено Тогда
		_СписокВетисСтрока.country  = ?(пEnterprise.address.country = Неопределено, "", пEnterprise.address.country.guid);
		_СписокВетисСтрока.region   = ?(пEnterprise.address.region = Неопределено, "", пEnterprise.address.region.guid);
		_СписокВетисСтрока.district = ?(пEnterprise.address.district = Неопределено, "", пEnterprise.address.district.guid);
		_СписокВетисСтрока.locality = ?(пEnterprise.address.locality = Неопределено, "", пEnterprise.address.locality.guid);
		_СписокВетисСтрока.street   = ?(пEnterprise.address.street = Неопределено, "", пEnterprise.address.street.guid);
		_СписокВетисСтрока.address  = пEnterprise.address.addressView;
	КонецЕсли;
	
	Если НЕ пEnterprise.numberList = Неопределено Тогда
		Для каждого _enterpriseNumber Из пEnterprise.numberList.enterpriseNumber Цикл
			_СписокВетисСтрока.numberList.Добавить(_enterpriseNumber);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура СоздатьСвязьСервер(пСсылка) Экспорт
	
	_ТекущиеДанные = СписокВетис.НайтиПоИдентификатору(Элементы.СписокВетис.ТекущаяСтрока);
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекущиеДанные1с из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисСоответствие.Добавить(_ТекущиеДанные1с.Ссылка, _ТекущиеДанные.guid, _ТекущиеДанные.name, _ТекущиеДанные.address);
		КонецЦикла;
	Иначе
		ВетисСоответствие.Добавить(пСсылка, _ТекущиеДанные.guid, _ТекущиеДанные.name, _ТекущиеДанные.address);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьСервер()
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекущиеДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисСоответствие.Удалить(_ТекущиеДанные.Ссылка);
		КонецЦикла;
	Иначе
		ВетисСоответствие.Удалить(Элементы.СправочникСписок.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ГруппаОтборИмя.Видимость = НЕ ОтборПоХС;
	Элементы.ГруппаОтборХС.Видимость = ОтборПоХС;
	
	Элементы.ОтборНаименование.Доступность = ОтборНаименованиеИспользование;
	Элементы.ОтборРайон.Доступность = ОтборРайонИспользование;
	Элементы.ОтборРегион.Доступность = ОтборРегионИспользование;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьИзСервисаНаСервере()
	
	_Версия20 = ВетисXSD.Версия_2_0();
	
	Для Каждого _ТекущаяСтрока из Элементы.СписокВетис.ВыделенныеСтроки Цикл
		_ТекущиеДанные = СписокВетис.НайтиПоИдентификатору(_ТекущаяСтрока);
		
		_Предприятие = Новый Структура;
		
		_Предприятие.Вставить("Наименование", _ТекущиеДанные.name);
		_Предприятие.Вставить("Тип", ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).EnterpriseType(_ТекущиеДанные.type));
		_Предприятие.Вставить("Собственник", ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).BusinessEntity(_ТекущиеДанные.owner));
		
		_Предприятие.Вставить("Страна", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Country(_ТекущиеДанные.country));
		_Предприятие.Вставить("Регион", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Region(_ТекущиеДанные.region));
		_Предприятие.Вставить("Район", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).District(_ТекущиеДанные.district));
		_Предприятие.Вставить("НаселенныйПункт", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Locality(_ТекущиеДанные.locality));
		_Предприятие.Вставить("АдресПредставление", _ТекущиеДанные.address);
		
		_Предприятие.Вставить("НомераПредприятия", _ТекущиеДанные.numberList);
		
		Возврат _Предприятие;
	КонецЦикла;
	
КонецФункции
