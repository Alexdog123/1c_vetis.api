
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СправочникСписок.ПроизвольныйЗапрос = Истина;
	СправочникСписок.ОсновнаяТаблица = ВетисИмяСправочника.Enterprise("Справочник");
	СправочникСписок.ТекстЗапроса =
	"ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.Код,
	|	_Таблица.Наименование КАК name,
	|	_Ветис.guid КАК guid,
	|	_Ветис.name КАК Ветисname,
	|	_Ветис.Описание КАК ВетисОписание
	|ИЗ
	|	Справочник."+ВетисИмяСправочника.Enterprise()+" КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Ветис
	|		ПО _Таблица.Ссылка = _Ветис.Ссылка";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаОтборПоХС(Команда)
	
	ОтборПоХС = НЕ ОтборПоХС;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайтиПоИмени(Команда)
	
	СписокВетисЗаполнитьПоИмениСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайтиПоGuid(Команда)
	
	СписокВетисЗаполнитьПоGuidСервер(ОтборGuid, ОтборПоХС);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайтиПоХС(Команда)
	
	СписокВетисЗаполнитьПоGuidСервер(Объект.ХозяйствующийСубъект, ОтборПоХС);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязь(Команда)
	
	ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	СоздатьСвязьСервер(ТекущиеДанные.Ссылка);
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьСвязь(Команда)
	
	УдалитьСвязьСервер();
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьИзСервиса(Команда)
	
	КомандаЗаполнитьИзСервисаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьИзСервиса(Команда)
	
	КомандаДобавитьИзСервисаНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//_ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	//
	//_СписокВетисСтроки = СписокВетис.НайтиСтроки(Новый Структура("name", _ТекущиеДанные.name));
	//
	//Если _СписокВетисСтроки.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Элементы.СписокВетис.ТекущаяСтрока = _СписокВетисСтроки[0].ПолучитьИдентификатор();
	
КонецПроцедуры


&НаСервере
Процедура СписокВетисЗаполнитьПоИмениСервер()
	
	Перем _Enterprise, _Параметры;
	
	_Версия20 = ВетисXSD.Версия_2_0();
	
	СписокВетис.Очистить();
	
	_отбор = Новый Структура();
	
	Если ОтборНаименованиеИспользование Тогда
		_отбор.Вставить("name", ОтборНаименование);
	КонецЕсли;
	
	Если ОтборРайонИспользование ИЛИ ОтборРегионИспользование Тогда
		_отборадрес = Новый Структура();
		Если ОтборРегионИспользование Тогда
			_отборадрес.Вставить("region", Новый Структура("guid", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Region(ОтборРегион)));
		КонецЕсли;
		Если ОтборРайонИспользование Тогда
			_отборадрес.Вставить("district", Новый Структура("guid", ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).District(ОтборРайон)));
		КонецЕсли;
		_отбор.Вставить("address", _отборадрес);
	КонецЕсли;
	
	Если _Версия20 Тогда
		Пока ВетисEnterpriseService_2_0.GetRussianEnterpriseListСледующий(_отбор, _Enterprise, _Параметры) Цикл
			СписокВетисДобавить(_Enterprise);
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
	Иначе
		Пока ВетисEnterpriseService.GetRussianEnterpriseListСледующий(_отбор, _Enterprise, _Параметры) Цикл
			СписокВетисДобавить(_Enterprise);
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокВетисЗаполнитьПоGuidСервер(пGuid, пОтборПоХС)
	
	Перем _Enterprise, _Параметры;
	
	СписокВетис.Очистить();
	
	Если НЕ ЗначениеЗаполнено(пGuid) Тогда Возврат; КонецЕсли;
	
	_Версия20 = ВетисXSD.Версия_2_0();
	
	Если пОтборПоХС Тогда
		
		Если ТипЗнч(пGuid) = Тип("Строка") Тогда
			_Guid = пGuid;
		Иначе
			_Guid = ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).BusinessEntity(пGuid);
		КонецЕсли;
		
		Пока ?(_Версия20, ВетисEnterpriseService_2_0, ВетисEnterpriseService).GetActivityLocationListСледующий(_Guid, _Enterprise, _Параметры) Цикл
			СписокВетисДобавить(_Enterprise);
		КонецЦикла;
		
	Иначе
		
		_Enterprise = ?(_Версия20, ВетисEnterpriseService_2_0, ВетисEnterpriseService).GetEnterpriseByGuid(пGuid);
		
		СписокВетисДобавить(_Enterprise);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокВетисДобавить(пEnterprise)
	
	//в 2.0 в тесте найдены дубли 2017-10-26
	Если СписокВетис.НайтиСтроки(Новый Структура("guid", пEnterprise.guid)).Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	_СписокВетисСтрока = СписокВетис.Добавить();
	
	_СписокВетисСтрока.guid = пEnterprise.guid;
	_СписокВетисСтрока.name = пEnterprise.name;
	_СписокВетисСтрока.type = пEnterprise.type;
	_СписокВетисСтрока.owner = ?(пEnterprise.owner = Неопределено, "", пEnterprise.owner.guid);
	
	Если НЕ пEnterprise.address = Неопределено Тогда
		_СписокВетисСтрока.country  = ?(пEnterprise.address.country = Неопределено, "", пEnterprise.address.country.guid);
		_СписокВетисСтрока.region   = ?(пEnterprise.address.region = Неопределено, "", пEnterprise.address.region.guid);
		_СписокВетисСтрока.district = ?(пEnterprise.address.district = Неопределено, "", пEnterprise.address.district.guid);
		_СписокВетисСтрока.locality = ?(пEnterprise.address.locality = Неопределено, "", пEnterprise.address.locality.guid);
		_СписокВетисСтрока.street   = ?(пEnterprise.address.street = Неопределено, "", пEnterprise.address.street.guid);
		_СписокВетисСтрока.address  = пEnterprise.address.addressView;
	КонецЕсли;
	
	Если НЕ пEnterprise.numberList = Неопределено Тогда
		Для каждого _enterpriseNumber Из пEnterprise.numberList.enterpriseNumber Цикл
			_СписокВетисСтрока.numberList.Добавить(_enterpriseNumber);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура СоздатьСвязьСервер(пСсылка) Экспорт
	
	_ТекущиеДанные = СписокВетис.НайтиПоИдентификатору(Элементы.СписокВетис.ТекущаяСтрока);
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекущиеДанные1с из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисСоответствие.Добавить(_ТекущиеДанные1с.Ссылка, _ТекущиеДанные.guid, _ТекущиеДанные.name, _ТекущиеДанные.address);
		КонецЦикла;
	Иначе
		ВетисСоответствие.Добавить(пСсылка, _ТекущиеДанные.guid, _ТекущиеДанные.name, _ТекущиеДанные.address);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьСервер()
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекущиеДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисСоответствие.Удалить(_ТекущиеДанные.Ссылка);
		КонецЦикла;
	Иначе
		ВетисСоответствие.Удалить(Элементы.СправочникСписок.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ГруппаОтборИмя.Видимость = НЕ ОтборПоХС;
	Элементы.ГруппаОтборХС.Видимость = ОтборПоХС;
	
	Элементы.ОтборНаименование.Доступность = ОтборНаименованиеИспользование;
	Элементы.ОтборРайон.Доступность = ОтборРайонИспользование;
	Элементы.ОтборРегион.Доступность = ОтборРегионИспользование;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборИспользованиеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура КомандаЗаполнитьИзСервисаНаСервере()
	
КонецПроцедуры

&НаСервере
Процедура КомандаДобавитьИзСервисаНаСервере()
	
	_Версия20 = ВетисXSD.Версия_2_0();
	
	Если Элементы.СписокВетис.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекущаяСтрока из Элементы.СписокВетис.ВыделенныеСтроки Цикл
			_ТекущиеДанные = СписокВетис.НайтиПоИдентификатору(_ТекущаяСтрока);
			
			_Предприятие = Справочники.ВетисПредприятия.СоздатьЭлемент();
			
			_Предприятие.Наименование = _ТекущаяСтрока.name;
			
			_Предприятие.Тип = ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).EnterpriseType(_ТекущаяСтрока.type);
			
			_Предприятие.Собственник = ?(_Версия20, ВетисDictionaryСлой1с, ВетисCerberusEnterpriseСлой1с).BusinessEntity(_ТекущаяСтрока.owner);
			
			_Предприятие.Страна = ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Country(_ТекущаяСтрока.country);
			_Предприятие.Регион = ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Region(_ТекущаяСтрока.region);
			_Предприятие.Район = ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).District(_ТекущаяСтрока.district);
			_Предприятие.НаселенныйПункт = ?(_Версия20, ВетисDictionaryСлой1с, ВетисIkarСлой1с).Locality(_ТекущаяСтрока.locality);
			
			Для каждого _number Из _ТекущаяСтрока.numberList Цикл
				НомераПредприятияСтрока = _Предприятие.НомераПредприятия.Добавить();
				НомераПредприятияСтрока.Номер = _number.Значение;
			КонецЦикла;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
