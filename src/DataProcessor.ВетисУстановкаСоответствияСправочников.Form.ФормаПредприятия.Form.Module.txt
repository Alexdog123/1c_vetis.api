
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаОтборПоХС(Команда)
	
	ОтборПоХС = НЕ ОтборПоХС;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСписокВетисЗаполнить(Команда)
	
	СписокВетисЗаполнитьСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайтиПоИмени(Команда)
	
	СписокВетисЗаполнитьПоИмениСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайтиПоGuid(Команда)
	
	СписокВетисЗаполнитьПоGuidСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайтиПоХС(Команда)
	
	СписокВетисЗаполнитьПоХССервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьСвязь(Команда)
	
	ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	СоздатьСвязьСервер(ТекущиеДанные.Ссылка, ТекущиеДанные.name);
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьСвязь(Команда)
	
	УдалитьСвязьСервер();
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//_ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
	//
	//_СписокВетисСтроки = СписокВетис.НайтиСтроки(Новый Структура("name", _ТекДанные.name));
	//
	//Если _СписокВетисСтроки.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Элементы.СписокВетис.ТекущаяСтрока = _СписокВетисСтроки[0].ПолучитьИдентификатор();
	
КонецПроцедуры


&НаСервере
Процедура СписокВетисЗаполнитьСервер()
	
	Перем _Enterprise, _Параметры;
	
	СписокВетис.Очистить();
	
	Если ОтборПоХС Тогда
		
		Если ВетисXSD.Версия_2_0() Тогда
			_businessEntityGuid = ?(ЗначениеЗаполнено(businessEntityGuid), businessEntityGuid, ВетисDictionaryСлой1с.BusinessEntity(Объект.ХозяйствующийСубъект));
			
			Если НЕ ЗначениеЗаполнено(_businessEntityGuid) Тогда Возврат; КонецЕсли;
			
			Пока ВетисEnterpriseService_2_0.GetActivityLocationListСледующий(_businessEntityGuid, _Enterprise, _Параметры) Цикл
				СписокВетисДобавить(_Enterprise);
				Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
			КонецЦикла;
			
		Иначе
			_businessEntityGuid = ?(ЗначениеЗаполнено(businessEntityGuid), businessEntityGuid, ВетисCerberusEnterpriseСлой1с.BusinessEntity(Объект.ХозяйствующийСубъект));
			
			Если НЕ ЗначениеЗаполнено(_businessEntityGuid) Тогда Возврат; КонецЕсли;
			
			Пока ВетисEnterpriseService.GetBusinessEntityEnterpriseListСледующий(_businessEntityGuid, _Enterprise, _Параметры) Цикл
				СписокВетисДобавить(_Enterprise);
				Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		
		_отбор = Новый Структура();
		Если ЗначениеЗаполнено(guid) Тогда
			_отбор.Вставить("guid", guid);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Наименование) Тогда
			_отбор.Вставить("name", Наименование);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Район) ИЛИ ЗначениеЗаполнено(Регион) Тогда
			_отборадрес = Новый Структура();
			Если ЗначениеЗаполнено(Регион) Тогда
				_отборадрес.Вставить("region", Регион);
			КонецЕсли;
			Если ЗначениеЗаполнено(Район) Тогда
				_отборадрес.Вставить("district", Район);
			КонецЕсли;
			_отбор.Вставить("address", _отборадрес);
		КонецЕсли;
		
		Если ВетисXSD.Версия_2_0() Тогда
			Пока ВетисEnterpriseService_2_0.GetRussianEnterpriseListСледующий(_отбор, _Enterprise, _Параметры) Цикл
				СписокВетисДобавить(_Enterprise);
				Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
			КонецЦикла;
			
		Иначе
			Пока ВетисEnterpriseService.GetRussianEnterpriseListСледующий(_отбор, _Enterprise, _Параметры) Цикл
				СписокВетисДобавить(_Enterprise);
				Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокВетисЗаполнитьПоХССервер()
	
	Перем _Enterprise, _Параметры;
	
	СписокВетис.Очистить();
	
	Если ВетисXSD.Версия_2_0() Тогда
		_businessEntityGuid = ВетисDictionaryСлой1с.BusinessEntity(Объект.ХозяйствующийСубъект);
		
		Если НЕ ЗначениеЗаполнено(_businessEntityGuid) Тогда Возврат; КонецЕсли;
		
		Пока ВетисEnterpriseService_2_0.GetActivityLocationListСледующий(_businessEntityGuid, _Enterprise, _Параметры) Цикл
			СписокВетисДобавить(_Enterprise);
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
	Иначе
		_businessEntityGuid = ВетисCerberusEnterpriseСлой1с.BusinessEntity(Объект.ХозяйствующийСубъект);
		
		Если НЕ ЗначениеЗаполнено(_businessEntityGuid) Тогда Возврат; КонецЕсли;
		
		Пока ВетисEnterpriseService.GetBusinessEntityEnterpriseListСледующий(_businessEntityGuid, _Enterprise, _Параметры) Цикл
			СписокВетисДобавить(_Enterprise);
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокВетисЗаполнитьПоИмениСервер()
	
	Перем _Enterprise, _Параметры;
	
	СписокВетис.Очистить();
	
	_отбор = Новый Структура();
	
	Если ЗначениеЗаполнено(Наименование) Тогда
		_отбор.Вставить("name", Наименование);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Район) ИЛИ ЗначениеЗаполнено(Регион) Тогда
		_отборадрес = Новый Структура();
		Если ЗначениеЗаполнено(Регион) Тогда
			_отборадрес.Вставить("region", Регион);
		КонецЕсли;
		Если ЗначениеЗаполнено(Район) Тогда
			_отборадрес.Вставить("district", Район);
		КонецЕсли;
		_отбор.Вставить("address", _отборадрес);
	КонецЕсли;
	
	Если ВетисXSD.Версия_2_0() Тогда
		Пока ВетисEnterpriseService_2_0.GetRussianEnterpriseListСледующий(_отбор, _Enterprise, _Параметры) Цикл
			СписокВетисДобавить(_Enterprise);
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
	Иначе
		Пока ВетисEnterpriseService.GetRussianEnterpriseListСледующий(_отбор, _Enterprise, _Параметры) Цикл
			СписокВетисДобавить(_Enterprise);
			Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокВетисЗаполнитьПоGuidСервер()
	
	Перем _Enterprise, _Параметры;
	
	СписокВетис.Очистить();
	
	Если ОтборПоХС Тогда
		
		Если ВетисXSD.Версия_2_0() Тогда
			
			Если НЕ ЗначениеЗаполнено(businessEntityGuid) Тогда Возврат; КонецЕсли;
			
			Пока ВетисEnterpriseService_2_0.GetActivityLocationListСледующий(businessEntityGuid, _Enterprise, _Параметры) Цикл
				СписокВетисДобавить(_Enterprise);
				Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
			КонецЦикла;
			
		Иначе
			
			Если НЕ ЗначениеЗаполнено(businessEntityGuid) Тогда Возврат; КонецЕсли;
			
			Пока ВетисEnterpriseService.GetBusinessEntityEnterpriseListСледующий(businessEntityGuid, _Enterprise, _Параметры) Цикл
				СписокВетисДобавить(_Enterprise);
				Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		
	Иначе
		_отбор = Новый Структура();
		
		Если ЗначениеЗаполнено(guid) Тогда
			_отбор.Вставить("guid", guid);
		КонецЕсли;
		
		Если ВетисXSD.Версия_2_0() Тогда
			Пока ВетисEnterpriseService_2_0.GetRussianEnterpriseListСледующий(_отбор, _Enterprise, _Параметры) Цикл
				СписокВетисДобавить(_Enterprise);
				Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
			КонецЦикла;
			
		Иначе
			Пока ВетисEnterpriseService.GetRussianEnterpriseListСледующий(_отбор, _Enterprise, _Параметры) Цикл
				СписокВетисДобавить(_Enterprise);
				Если МаксимальноеКоличество > 0 И СписокВетис.Количество() >= МаксимальноеКоличество Тогда Прервать; КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СписокВетисДобавить(Enterprise)
	
	//в 2.0 в тесте найдены дубли 2017-10-26
	Если СписокВетис.НайтиСтроки(Новый Структура("guid", Enterprise.guid)).Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	_СписокВетисСтрока = СписокВетис.Добавить();
	
	ЗаполнитьЗначенияСвойств(_СписокВетисСтрока, Enterprise);
	
	_СписокВетисСтрока.address = Enterprise.address.addressView;
	
КонецПроцедуры


&НаСервере
Процедура СоздатьСвязьСервер(п1сСсылка, п1сname) Экспорт
	
	_ТекДанные = СписокВетис.НайтиПоИдентификатору(Элементы.СписокВетис.ТекущаяСтрока);
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекДанные1с из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			ВетисСоответствие.Добавить(_ТекДанные1с.Ссылка, _ТекДанные.guid, _ТекДанные.name, _ТекДанные.address);
		КонецЦикла;
	Иначе
		ВетисСоответствие.Добавить(п1сСсылка, _ТекДанные.guid, _ТекДанные.name, _ТекДанные.address);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьСервер()
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			
			ВетисСоответствие.Удалить(_ТекДанные.Ссылка);
			
		КонецЦикла;
	Иначе
		_ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
		
		ВетисСоответствие.Удалить(_ТекДанные.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ГруппаОтборИмя.Видимость = НЕ ОтборПоХС;
	Элементы.ГруппаОтборХС.Видимость = ОтборПоХС;
	
КонецПроцедуры
