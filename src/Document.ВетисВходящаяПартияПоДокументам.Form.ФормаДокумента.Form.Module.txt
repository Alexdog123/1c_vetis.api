
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МногоуровневаяУпаковка = Ветис.Настройки_МногоуровневаяУпаковка();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = ЭтаФорма.ИмяФормы Тогда
		//
	ИначеЕсли ИмяСобытия = "ВетисНастройки" Тогда
		//Возникает ошибка: Отсутствует отображение для типа 'ДанныеФормыЭлементКоллекции'
		//УстановитьВидимость(ИмяСобытия);
	ИначеЕсли ИмяСобытия = "ВетисВерсия" Тогда
		//Возникает ошибка: Отсутствует отображение для типа 'ДанныеФормыЭлементКоллекции'
		//УстановитьВидимость(ИмяСобытия);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаОтправить(Команда)
	
	Перем _Отказ, _Ошибка;
	
	Если НЕ Объект.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	КомандаОтправитьНаСервере(_Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПоДокументу(Команда)
	
	//заполнить по поступлению
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодобратьВСД(Команда)
	
	ПодобратьВСДСервер();
	
КонецПроцедуры


&НаКлиенте
Процедура ОтправительПриИзменении(Элемент)
	
	Объект.ОтправительПредприятие = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.BusinessEntityФормаВыбора(ЭтаФорма, "ОтправительОбработкаОповещения", СтандартнаяОбработка, Объект.Отправитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительОбработкаОповещения(пРезультат, пПараметры) Экспорт
	
	Если НЕ пРезультат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.Отправитель = пРезультат;
		Объект.ОтправительПредприятие = Неопределено;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтправительПредприятиеПриИзменении(Элемент)
	
	Объект.ОтправительПредприятие = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Отправитель) Тогда
		ВетисФормы.EnterpriseФормаВыбора(ЭтаФорма, "ОтправительПредприятиеОбработкаОповещения", СтандартнаяОбработка, Объект.Отправитель);
	Иначе
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительПредприятиеОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.ОтправительПредприятие = Результат;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучательПриИзменении(Элемент)
	
	Объект.ПолучательПредприятие = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ВетисФормы.BusinessEntityФормаВыбора(ЭтаФорма, "ПолучательОбработкаОповещения", СтандартнаяОбработка, Объект.Получатель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.Получатель = Результат;
		Объект.ПолучательПредприятие = Неопределено;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучательПредприятиеПриИзменении(Элемент)
	
	Объект.ПолучательПредприятие = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Получатель) Тогда
		ВетисФормы.EnterpriseФормаВыбора(ЭтаФорма, "ПолучательПредприятиеОбработкаОповещения", СтандартнаяОбработка, Объект.Получатель);
	Иначе
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПредприятиеОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.ПолучательПредприятие = Результат;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//Если Поле.Имя = "ТоварыВозвратныйВСД" Тогда
	//	//ОткрытьЗначение(Элементы.Товары.ТекущиеДанные.ВозвратныйВСД);
	//ИначеЕсли Поле.Имя = "ТоварыВСД" И ЗначениеЗаполнено(Элементы.Товары.ТекущиеДанные.guid) Тогда
	//	//ОткрытьЗначение(Элементы.Товары.ТекущиеДанные.ВСД);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Копирование;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Погашен")
		ИЛИ Элемент.ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Аннулирован")
		Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Для каждого _СтрокаУпаковка Из Объект.Упаковка.НайтиСтроки(Новый Структура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки)) Цикл
		Для каждого _СтрокаМаркировка Из Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", _СтрокаУпаковка.КлючСтроки)) Цикл
			Объект.Маркировка.Удалить(_СтрокаМаркировка);
		КонецЦикла;
		Объект.Упаковка.Удалить(_СтрокаУпаковка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Упаковка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _ТекущиеДанные.КлючСтроки);
	
	_СтрокиУпаковка = Объект.Упаковка.НайтиСтроки(Новый Структура("КлючСвязи", _ТекущиеДанные.КлючСтроки));
	Если _СтрокиУпаковка.Количество() > 0 Тогда
		Элементы.Упаковка.ТекущаяСтрока = _СтрокиУпаковка[0];
		Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _СтрокиУпаковка[0].КлючСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСтроки = ПолучитьКлючСтрокиТовары();
		Элементы.Упаковка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки);
		Если НЕ Элементы.Упаковка.ТекущаяСтрока = Неопределено Тогда
			_ТекущиеДанные = Объект.Упаковка.НайтиПоИдентификатору(Элементы.Упаковка.ТекущаяСтрока);
			Если НЕ _ТекущиеДанные = Неопределено Тогда
				Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _ТекущиеДанные.КлючСтроки);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВСДПриИзменении(Элемент = Неопределено)
	
	Если НЕ ЗначениеЗаполнено(Элементы.Товары.ТекущиеДанные.ВСД) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСтрокуПоВСД(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущиеДанные.ВСД);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВСДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	_Статус = Новый СписокЗначений;
	_Статус.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.ПустаяСсылка"));
	_Статус.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Оформлен"));
	
	_Тип = Новый СписокЗначений;
	_Тип.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.ПустаяСсылка"));
	_Тип.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Входящий"));
	_Тип.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Транспортный"));
	
	_Параметры = Новый Структура("Проведен, Статус, Тип", Истина, _Статус, _Тип);
	
	_Параметры.Вставить("Отправитель", Объект.Отправитель);
	_Параметры.Вставить("Получатель", Объект.Получатель);
	_Параметры.Вставить("ОтправительПредприятие", Объект.ОтправительПредприятие);
	_Параметры.Вставить("ПолучательПредприятие", Объект.ПолучательПредприятие);
	
	_оо = Новый ОписаниеОповещения("ТоварыВСДНачалоВыбораОбработкаОповещения", ЭтаФорма);
	
	ОткрытьФорму("Документ.ВетисВетеринарноСопроводительныйДокумент.ФормаВыбора", _Параметры,,,,, _оо);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВСДНачалоВыбораОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		Элементы.Товары.ТекущиеДанные.ВСД = Результат;
		
		ТоварыВСДПриИзменении();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоМестПриИзменении(Элемент)
	
	_ТекущиеДанные = ?(ТекущийЭлемент = Элементы.Товары, Элементы.Товары.ТекущиеДанные, Элементы.ТоварыВозврат.ТекущиеДанные);
	
	_СтрокиУпаковка = Объект.Упаковка.НайтиСтроки(Новый Структура("КлючСвязи", _ТекущиеДанные.КлючСтроки));
	
	Если _СтрокиУпаковка.Количество() > 0 Тогда
		_СтрокаУпаковка = _СтрокиУпаковка[0];
		_СтрокиМаркировка = Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", _СтрокаУпаковка.КлючСтроки));
		Если _СтрокиМаркировка.Количество() > 0 Тогда
			_СтрокиМаркировка[0].Маркировка = _ТекущиеДанные.Маркировка;
		КонецЕсли;
	Иначе
		_СтрокаУпаковка = Объект.Упаковка.Добавить();
		_СтрокаУпаковка.КлючСтроки = ПолучитьКлючСтрокиУпаковка();
		_СтрокаУпаковка.КлючСвязи = _ТекущиеДанные.КлючСтроки;
		_СтрокаУпаковка.Уровень = ВетисВызовСервера.Настройки_УровеньУпаковки();
		_СтрокаМаркировка = Объект.Маркировка.Добавить();
		_СтрокаМаркировка.КлючСвязи = _СтрокаУпаковка.КлючСтроки;
		_СтрокаМаркировка.Маркировка = _ТекущиеДанные.Маркировка;
		_СтрокаМаркировка.КлассМаркировки = ВетисВызовСервера.Настройки_КлассМаркировки();
	КонецЕсли;
	
	_СтрокаУпаковка.Количество = _ТекущиеДанные.КоличествоМест;
	_СтрокаУпаковка.КоличествоВозврат = _ТекущиеДанные.КоличествоМестВозврат;
	_СтрокаУпаковка.Упаковка = _ТекущиеДанные.Упаковка;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВозвратКоличествоМестВозвратПриИзменении(Элемент)
	
	ТоварыКоличествоМестПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыУпаковкаПриИзменении(Элемент)
	
	ТоварыКоличествоМестПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыМаркировкаПриИзменении(Элемент)
	
	ТоварыКоличествоМестПриИзменении(Элемент);
	
КонецПроцедуры


&НаКлиенте
Процедура УпаковкаПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.Упаковка.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _ТекущиеДанные.КлючСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСтроки = ПолучитьКлючСтрокиУпаковка();
		Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПередУдалением(Элемент, Отказ)
	
	Для каждого _Строка Из Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки)) Цикл
		Объект.Маркировка.Удалить(_Строка);
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура МаркировкаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Элементы.Упаковка.ТекущиеДанные = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура МаркировкаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	_ТекущиеДанные = Элементы.Упаковка.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСвязи = _ТекущиеДанные.КлючСтроки;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СоставитьАктНесоответствияПриИзменении(Элемент)
	
	Элементы.ГруппаАктНесоответствияКолонка.Доступность = Объект.СоставитьАктНесоответствия;
	
КонецПроцедуры


&НаКлиенте
Процедура ПредприятиеОбработкаОповещения(пЗначение, пПараметр) Экспорт
	
	Если НЕ пЗначение = Неопределено Тогда
		Модифицированность = Истина;
		Выполнить пПараметр + " = пЗначение;";
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура КомандаОтправитьНаСервере(пОтказ = Ложь, пОшибка = "")
	
	_СтруктураПоиска = Новый Структура("КлючСвязи");
	
	Для каждого _СтрокаСЖ Из Объект.Товары Цикл
		
		Если ЗначениеЗаполнено(_СтрокаСЖ.Статус) И НЕ _СтрокаСЖ.Статус = Перечисления.ВетисVetDocumentStatus.Оформлен Тогда
			Продолжить;
		КонецЕсли;
		
		_СтруктураПоиска.КлючСвязи = _СтрокаСЖ.КлючСтроки;
		_СтрокиУпаковка = Объект.Упаковка.НайтиСтроки(_СтруктураПоиска);
		_СтрокиМаркировка = Новый Массив;
		Для каждого _СтрокаУпаковка Из _СтрокиУпаковка Цикл
			_СтруктураПоиска.КлючСвязи = _СтрокаУпаковка.КлючСтроки;
			_СтрокиМаркировка1 = Объект.Маркировка.НайтиСтроки(_СтруктураПоиска);
			Для каждого _СтрокаМаркировка Из _СтрокиМаркировка1 Цикл
				_СтрокиМаркировка.Добавить(_СтрокаМаркировка);
			КонецЦикла;
		КонецЦикла;
		
		_Результат = ВетисMercuryApplicationsСлой1с.IncomingOperation(_СтрокаСЖ, _СтрокиУпаковка, _СтрокиМаркировка, _СтрокаСЖ.ВСД, Объект.Дата, пОтказ, пОшибка);
		
		Если пОтказ = Истина Тогда
			Возврат;
		КонецЕсли;
		
		_Результат.Свойство("uuid", _СтрокаСЖ.guid);
		
		_Результат.Свойство("ВозвратныйВСД", _СтрокаСЖ.ВозвратныйВСД);
		
		_Результат.Свойство("Статус", _СтрокаСЖ.Статус);
		
		_Результат.Свойство("РезультатПриема", _СтрокаСЖ.РезультатПриема);
		_Результат.Свойство("РезультатВетКонтроля", _СтрокаСЖ.РезультатВетКонтроля);
		_Результат.Свойство("РешениеОПриеме", _СтрокаСЖ.РешениеОПриеме);
		
		_Результат.Свойство("АктПричина", _СтрокаСЖ.АктПричина);
		_Результат.Свойство("АктОписание", _СтрокаСЖ.АктОписание);
		
	КонецЦикла;
	
	Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуПоВСД(пСтрокаСЖ, пВСД)
	
	Если НЕ ЗначениеЗаполнено(Объект.Отправитель) Тогда
		Объект.Отправитель = пВСД.Отправитель;
		Объект.ОтправительПредприятие = пВСД.ОтправительПредприятие;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Получатель) Тогда
		Объект.Получатель  = пВСД.Получатель;
		Объект.ПолучательПредприятие  = пВСД.ПолучательПредприятие;
	КонецЕсли;
	
	_СтрокаСЖ = Объект.Товары.НайтиПоИдентификатору(пСтрокаСЖ);
	
	_всдСтрокаСЖ = пВСД.Товары[0];
	
	_СтрокаСЖ.КлючСтроки = ПолучитьКлючСтрокиТовары();
	
	_СтрокаСЖ.Статус = пВСД.Статус;
	
	_СтрокаСЖ.НоменклатурнаяГруппа = _всдСтрокаСЖ.НоменклатурнаяГруппа;
	_СтрокаСЖ.Номенклатура   = _всдСтрокаСЖ.Номенклатура;
	
	_СтрокаСЖ.Количество     = _всдСтрокаСЖ.Количество;
	//_СтрокаСЖ.КоличествоМест = пВСД.Упаковка.Итог("Количество");
	
	//_СтрокаСЖ.ЕдиницаИзмерения = _всдСтрокаСЖ.ЕдиницаИзмерения;
	//_СтрокаСЖ.Упаковка         = ?(пВСД.Упаковка.Количество() > 0, пВСД.Упаковка[0].Упаковка, Неопределено);
	
	_СтрокаСЖ.ProductItemGuid = _всдСтрокаСЖ.ProductItemGuid;
	_СтрокаСЖ.SubProductGuid  = _всдСтрокаСЖ.SubProductGuid;
	
	Для каждого _СтрокаУпаковкаВСД Из пВСД.Упаковка Цикл
		_СтрокаУпаковка = Объект.Упаковка.Добавить();
		_СтрокаУпаковка.КлючСтроки = ПолучитьКлючСтрокиУпаковка();
		_СтрокаУпаковка.КлючСвязи  = _СтрокаСЖ.КлючСтроки;
		_СтрокаУпаковка.Уровень    = _СтрокаУпаковкаВСД.Уровень;
		_СтрокаУпаковка.Упаковка   = _СтрокаУпаковкаВСД.Упаковка;
		_СтрокаУпаковка.Количество = _СтрокаУпаковкаВСД.Количество;
		
		_СтрокаСЖ.КоличествоМест = _СтрокаУпаковкаВСД.Количество;
		_СтрокаСЖ.Упаковка       = _СтрокаУпаковкаВСД.Упаковка;
		
		Для каждого _СтрокаМаркировкаВСД Из пВСД.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", _СтрокаУпаковкаВСД.КлючСтроки)) Цикл
			_СтрокаМаркировка = Объект.Маркировка.Добавить();
			_СтрокаМаркировка.КлючСвязи       = _СтрокаУпаковка.КлючСтроки;
			_СтрокаМаркировка.Маркировка      = _СтрокаМаркировкаВСД.Маркировка;
			_СтрокаМаркировка.КлассМаркировки = _СтрокаМаркировкаВСД.КлассМаркировки;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПодобратьВСДСервер()
	
	//сделать: переделать упаковку на ТЧ
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_Таблица.Ссылка КАК ВСД,
	|	_Таблица.НоменклатурнаяГруппа,
	|	_Таблица.Номенклатура,
	|	_Таблица.Количество,
	|	_Таблица.ЕдиницаИзмерения
	|ИЗ
	|	Документ.ВетисВетеринарноСопроводительныйДокумент.Товары КАК _Таблица
	|ГДЕ
	|	ИСТИНА
	|	И _Таблица.Ссылка.Проведен
	|	И _Таблица.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.ВетисVetDocumentStatus.ПустаяСсылка), ЗНАЧЕНИЕ(Перечисление.ВетисVetDocumentStatus.Оформлен))
	|	И _Таблица.Ссылка.Отправитель = &Отправитель
	|	И _Таблица.Ссылка.ОтправительПредприятие = &ОтправительПредприятие
	|	И _Таблица.Ссылка.Получатель = &Получатель
	|	И _Таблица.Ссылка.ПолучательПредприятие = &ПолучательПредприятие
	|	И ИСТИНА";
	
	Запрос.УстановитьПараметр("Отправитель", Объект.Отправитель);
	Запрос.УстановитьПараметр("Получатель", Объект.Получатель);
	Запрос.УстановитьПараметр("ОтправительПредприятие", Объект.ОтправительПредприятие);
	Запрос.УстановитьПараметр("ПолучательПредприятие", Объект.ПолучательПредприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		_Строка = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(_Строка, Выборка);
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВидимость(пИмяСобытия = Неопределено)
	
	_МногоуровневаяУпаковка = Ветис.Настройки_МногоуровневаяУпаковка();
	
	Если пИмяСобытия = Неопределено ИЛИ пИмяСобытия = "ВетисНастройки" ИЛИ пИмяСобытия = "ВетисВерсия" Тогда
		
		Элементы.ГруппаУпаковка.Видимость = _МногоуровневаяУпаковка;
		
		Элементы.ТоварыКоличествоМест.Видимость               = НЕ _МногоуровневаяУпаковка;
		Элементы.ТоварыВозвратКоличествоМестВозврат.Видимость = НЕ _МногоуровневаяУпаковка;
		Элементы.ТоварыУпаковка.Видимость                     = НЕ _МногоуровневаяУпаковка;
		Элементы.ТоварыМаркировка.Видимость                   = НЕ _МногоуровневаяУпаковка;
		
		Если НЕ МногоуровневаяУпаковка = _МногоуровневаяУпаковка Тогда
			Модифицированность = Истина;
			Если _МногоуровневаяУпаковка Тогда
				//интерактивно все синхронизируется, возможно это излишнее действие
				Объект.Упаковка.Очистить();
				Объект.Маркировка.Очистить();
				
				Для каждого _СтрокаТовары Из Объект.Товары Цикл
					_СтрокаУпаковка = Объект.Упаковка.Добавить();
					_СтрокаУпаковка.КлючСтроки = ПолучитьКлючСтрокиУпаковка();
					_СтрокаУпаковка.КлючСвязи = _СтрокаТовары.КлючСтроки;
					_СтрокаУпаковка.Уровень = ВетисВызовСервера.Настройки_УровеньУпаковки();
					_СтрокаУпаковка.Количество = _СтрокаТовары.КоличествоМест;
					_СтрокаУпаковка.КоличествоВозврат = _СтрокаТовары.КоличествоМестВозврат;
					_СтрокаУпаковка.Упаковка = _СтрокаТовары.Упаковка;
					
					_СтрокаМаркировка = Объект.Маркировка.Добавить();
					_СтрокаМаркировка.КлючСвязи = _СтрокаУпаковка.КлючСтроки;
					_СтрокаМаркировка.Маркировка = _СтрокаТовары.Маркировка;
					_СтрокаМаркировка.КлассМаркировки = ВетисВызовСервера.Настройки_КлассМаркировки();
				КонецЦикла;
			Иначе
				Для каждого _СтрокаТовары Из Объект.Товары Цикл
					
					_СтрокиУпаковка = Объект.Упаковка.НайтиСтроки(Новый Структура("КлючСвязи", _СтрокаТовары.КлючСтроки));
					
					Если _СтрокиУпаковка.Количество() = 0 Тогда
						_СтрокаТовары.КоличествоМест = 0;
						_СтрокаТовары.КоличествоМестВозврат = 0;
						_СтрокаТовары.Упаковка = Неопределено;
						_СтрокаТовары.Маркировка = Неопределено;
						Продолжить;
					КонецЕсли;
					
					_СтрокаУпаковка = _СтрокиУпаковка[0];
					
					_СтрокаТовары.КоличествоМест = _СтрокаУпаковка.Количество;
					_СтрокаТовары.КоличествоМестВозврат = _СтрокаУпаковка.КоличествоВозврат;
					_СтрокаТовары.Упаковка = _СтрокаУпаковка.Упаковка;
					
					_СтрокиМаркировка = Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", _СтрокаУпаковка.КлючСтроки));
					
					Если _СтрокиМаркировка.Количество() > 0 Тогда
						_СтрокаТовары.Маркировка = _СтрокиМаркировка[0].Маркировка;
						//остальные удаляем
						_СтрокиМаркировка.Удалить(0);
						Для каждого _СтрокаМаркировка Из _СтрокиМаркировка Цикл
							Объект.Маркировка.Удалить(_СтрокаМаркировка);
						КонецЦикла;
					КонецЕсли;
					
					//остальные удаляем
					_СтрокиУпаковка.Удалить(0);
					Для каждого _СтрокаУпаковка Из _СтрокиУпаковка Цикл
						Объект.Упаковка.Удалить(_СтрокаУпаковка);
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	МногоуровневаяУпаковка = _МногоуровневаяУпаковка;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКлючСтрокиТовары()
	
	_список = Объект.Товары.Выгрузить().ВыгрузитьКолонку("КлючСтроки");
	
	Для _Индекс = 1 По 999 Цикл
		Если _список.Найти(_Индекс) = Неопределено Тогда
			Возврат _Индекс;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция ПолучитьКлючСтрокиУпаковка()
	
	_список = Объект.Упаковка.Выгрузить().ВыгрузитьКолонку("КлючСтроки");
	
	Для _Индекс = 1 По 999 Цикл
		Если _список.Найти(_Индекс) = Неопределено Тогда
			Возврат _Индекс;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции
