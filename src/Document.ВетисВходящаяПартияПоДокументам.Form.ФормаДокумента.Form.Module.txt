
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаОтправить(Команда)
	
	Перем _Отказ, _Ошибка;
	
	Если НЕ Объект.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	КомандаОтправитьНаСервере(_Отказ, _Ошибка);
	
	Если _Отказ = Истина Тогда
		Сообщить(_Ошибка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПоДокументу(Команда)
	
	//заполнить по поступлению
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодобратьВСД(Команда)
	
	ПодобратьВСДСервер();
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТоварыВозвратныйВСД" Тогда
		//ОткрытьЗначение(Элементы.Товары.ТекущиеДанные.ВозвратныйВСД);
	ИначеЕсли Поле.Имя = "ТоварыВСД" И ЗначениеЗаполнено(Элементы.Товары.ТекущиеДанные.guid) Тогда
		//ОткрытьЗначение(Элементы.Товары.ТекущиеДанные.ВСД);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Копирование;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	Отказ = ЗначениеЗаполнено(Элемент.ТекущиеДанные.guid);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.Упаковка.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Упаковка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _ТекущиеДанные.КлючСтроки);
	Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", Элементы.Упаковка.ТекущиеДанные.КлючСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСтроки = ПолучитьКлючСтрокиТовары();
		Элементы.Упаковка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки);
		Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", Элементы.Упаковка.ТекущиеДанные.КлючСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВСДПриИзменении(Элемент = Неопределено)
	
	Если НЕ ЗначениеЗаполнено(Элементы.Товары.ТекущиеДанные.ВСД) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСтрокуПоВСД(Элементы.Товары.ТекущаяСтрока, Элементы.Товары.ТекущиеДанные.ВСД);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВСДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	_Статус = Новый СписокЗначений;
	_Статус.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.ПустаяСсылка"));
	_Статус.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Оформлен"));
	
	_Тип = Новый СписокЗначений;
	_Тип.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.ПустаяСсылка"));
	_Тип.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Входящий"));
	_Тип.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Транспортный"));
	
	_Параметры = Новый Структура("Проведен, Статус, Тип", Истина, _Статус, _Тип);
	
	_оо = Новый ОписаниеОповещения("ТоварыВСДНачалоВыбораОбработкаОповещения", ЭтаФорма);
	
	ОткрытьФорму("Документ.ВетисВетеринарноСопроводительныйДокумент.ФормаВыбора", _Параметры,,,,, _оо);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВСДНачалоВыбораОбработкаОповещения(Результат, Параметр) Экспорт
	
	Элементы.Товары.ТекущиеДанные.ВСД = Результат;
	
	ТоварыВСДПриИзменении();
	
КонецПроцедуры


&НаКлиенте
Процедура УпаковкаПриАктивизацииСтроки(Элемент)
	
	_ТекущиеДанные = Элементы.Упаковка.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", _ТекущиеДанные.КлючСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСтроки = ПолучитьКлючСтрокиУпаковка();
		Элементы.Маркировка.ОтборСтрок = Новый ФиксированнаяСтруктура("КлючСвязи", Элемент.ТекущиеДанные.КлючСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПередУдалением(Элемент, Отказ)
	
	_ТекущиеДанные = Элементы.Упаковка.ТекущиеДанные;
	
	_Строки = Объект.Маркировка.НайтиСтроки(Новый Структура("КлючСвязи", _ТекущиеДанные.КлючСтроки));
	
	Для каждого _Строка Из _Строки Цикл
		Объект.Маркировка.Удалить(_Строка);
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура МаркировкаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Элементы.Упаковка.ТекущиеДанные = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура МаркировкаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	_ТекущиеДанные = Элементы.Упаковка.ТекущиеДанные;
	
	Если _ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.КлючСвязи = _ТекущиеДанные.КлючСтроки;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СоставитьАктНесоответствияПриИзменении(Элемент)
	
	Элементы.ГруппаАктНесоответствияКолонка.Доступность = Объект.СоставитьАктНесоответствия;
	
КонецПроцедуры


&НаКлиенте
Процедура ПредприятиеОбработкаОповещения(пЗначение, пПараметр) Экспорт
	
	Если НЕ пЗначение = Неопределено Тогда
		Модифицированность = Истина;
		Выполнить пПараметр + " = пЗначение;";
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура КомандаОтправитьНаСервере(пОтказ = Ложь, пОшибка = "")
	
	Для каждого _СтрокаСЖ Из Объект.Товары Цикл
		
		Если ЗначениеЗаполнено(_СтрокаСЖ.guid) Тогда
			Продолжить;
		КонецЕсли;
		
		ВетисMercuryApplicationsСлой1с.IncomingOperation(_СтрокаСЖ, _СтрокаСЖ.ВСД, Объект.Дата, пОтказ, пОшибка);
		
		Если пОтказ = Истина Тогда
			Возврат;
		КонецЕсли;
		
	КонецЦикла;
	
	Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуПоВСД(пСтрокаСЖ, пВСД)
	
	Если НЕ ЗначениеЗаполнено(Объект.Отправитель) Тогда
		Объект.Отправитель = пВСД.Отправитель;
		Объект.ОтправительПредприятие = пВСД.ОтправительПредприятие;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Получатель) Тогда
		Объект.Получатель  = пВСД.Получатель;
		Объект.ПолучательПредприятие  = пВСД.ПолучательПредприятие;
	КонецЕсли;
	
	_СтрокаСЖ = Объект.Товары.НайтиПоИдентификатору(пСтрокаСЖ);
	
	_всдСтрокаСЖ = пВСД.Товары[0];
	
	_СтрокаСЖ.НоменклатурнаяГруппа = _всдСтрокаСЖ.НоменклатурнаяГруппа;
	_СтрокаСЖ.Номенклатура   = _всдСтрокаСЖ.Номенклатура;
	
	_СтрокаСЖ.Количество     = _всдСтрокаСЖ.Количество;
	//_СтрокаСЖ.КоличествоМест = _всдСтрокаСЖ.КоличествоМест;
	
	//_СтрокаСЖ.ЕдиницаИзмерения = _всдСтрокаСЖ.ЕдиницаИзмерения;
	//_СтрокаСЖ.Упаковка         = _всдСтрокаСЖ.Упаковка;
	
	_СтрокаСЖ.ProductItemGuid = _всдСтрокаСЖ.ProductItemGuid;
	_СтрокаСЖ.SubProductGuid  = _всдСтрокаСЖ.SubProductGuid;
	
КонецПроцедуры

&НаСервере
Процедура ПодобратьВСДСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	_Таблица.Ссылка КАК ВСД,
	|	_Таблица.НоменклатурнаяГруппа,
	|	_Таблица.Номенклатура,
	|	_Таблица.Количество,
	|	_Таблица.КоличествоМест,
	|	_Таблица.ЕдиницаИзмерения,
	|	_Таблица.Упаковка
	|ИЗ
	|	Документ.ВетисВетеринарноСопроводительныйДокумент.Товары КАК _Таблица
	|ГДЕ
	|	ИСТИНА
	|	И _Таблица.Ссылка.Проведен
	|	И _Таблица.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.ВетисVetDocumentStatus.ПустаяСсылка), ЗНАЧЕНИЕ(Перечисление.ВетисVetDocumentStatus.Оформлен))
	|	И _Таблица.Ссылка.Отправитель = &Отправитель
	|	И _Таблица.Ссылка.ОтправительПредприятие = &ОтправительПредприятие
	|	И _Таблица.Ссылка.Получатель = &Получатель
	|	И _Таблица.Ссылка.ПолучательПредприятие = &ПолучательПредприятие
	|	И ИСТИНА";
	
	Запрос.УстановитьПараметр("Отправитель", Объект.Отправитель);
	Запрос.УстановитьПараметр("Получатель", Объект.Получатель);
	Запрос.УстановитьПараметр("ОтправительПредприятие", Объект.ОтправительПредприятие);
	Запрос.УстановитьПараметр("ПолучательПредприятие", Объект.ПолучательПредприятие);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		_Строка = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(_Строка, Выборка);
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВидимость(пИмяСобытия = Неопределено)
	
	_МногоуровневаяУпаковка = Ветис.Настройки_МногоуровневаяУпаковка();
	
	Если пИмяСобытия = Неопределено ИЛИ пИмяСобытия = "ВетисНастройки" ИЛИ пИмяСобытия = "ВетисВерсия" Тогда
		_Версия20 = ?(ЗначениеЗаполнено(Объект.Версия), Объект.Версия, Ветис.Версия_2_0());
		Элементы.ГруппаУпаковка.Видимость = _Версия20 И _МногоуровневаяУпаковка;
		Элементы.ТоварыКоличествоМест.Видимость = НЕ _Версия20 ИЛИ НЕ _МногоуровневаяУпаковка;
		Элементы.ТоварыКоличествоМестВозврат.Видимость = НЕ _Версия20 ИЛИ НЕ _МногоуровневаяУпаковка;
	КонецЕсли;
	
	МногоуровневаяУпаковка = _МногоуровневаяУпаковка;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКлючСтрокиТовары()
	
	_список = Объект.Товары.Выгрузить().ВыгрузитьКолонку("КлючСтроки");
	
	Для _Индекс = 1 По 999 Цикл
		Если _список.Найти(_Индекс) = Неопределено Тогда
			Возврат _Индекс;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция ПолучитьКлючСтрокиУпаковка()
	
	_список = Объект.Упаковка.Выгрузить().ВыгрузитьКолонку("КлючСтроки");
	
	Для _Индекс = 1 По 999 Цикл
		Если _список.Найти(_Индекс) = Неопределено Тогда
			Возврат _Индекс;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

