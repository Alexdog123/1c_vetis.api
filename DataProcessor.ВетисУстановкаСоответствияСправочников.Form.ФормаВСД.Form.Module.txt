
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВетисЗаполнить(Команда)
	
	СписокВетисЗаполнитьСервер();
	
КонецПроцедуры

&НаСервере
Процедура СписокВетисЗаполнитьСервер()
	
	Перем _Item, _Параметры;
	
	СписокВетис.Очистить();
	
	_issuerId = ВетисCerberusEnterpriseСлой1с.BusinessEntity(ЗаполнениеДокументов.ПолучитьКонтрагентаПоОрганизации(Организация));
	
	//_enterpriseGuid = ВетисCerberusEnterpriseСлой1с.Enterprise(Справочники[ВетисИмяСправочника.Enterprise()].НайтиПоРеквизиту("Склад", Склад));
	
	_enterpriseGuid = ВетисCerberusEnterpriseСлой1с.EnterpriseСклад(Склад);
	
	_ListRequest = ВетисMercuryApplications.getVetDocumentListRequest(_enterpriseGuid);
	
	_Отладка = ВетисОбщегоНазначения.РазрешенаОтладка();
	
	Пока ВетисMercuryApplications.getVetDocumentListСледующий(_enterpriseGuid, _issuerId, _Item, _Параметры) Цикл
		
		_ТаблицаСтрока = СписокВетис.Добавить();
		
		ЗаполнитьЗначенияСвойств(_ТаблицаСтрока, _Item);
		
		_ТаблицаСтрока.confirmedBy = _Item.confirmedBy.fio;
		
		_ТаблицаСтрока.consignee = ВетисCerberusEnterpriseСлой1с.BusinessEntity(_Item.consignee.businessEntity);
		
		_ТаблицаСтрока.consignor = ВетисCerberusEnterpriseСлой1с.BusinessEntity(_Item.consignor.businessEntity);
		
		_ТаблицаСтрока.form = ВетисMercuryVetdocumentСлой1с.VetDocumentForm(_Item.form);
		
		_ТаблицаСтрока.purpose = ВетисArgusCommonСлой1с.Purpose(_Item.purpose);
		
		_ТаблицаСтрока.status = ВетисMercuryVetdocumentСлой1с.VetDocumentStatus(_Item.status);
		
		_ТаблицаСтрока.transferPermit = ?(_Item.transferPermit = Неопределено, "", "№" + _Item.transferPermit.issueNumber + " от " + _Item.transferPermit.issueDate);
		
		_ТаблицаСтрока.transportInfo = _Item.transportInfo.transportNumber.vehicleNumber;
		
		_ТаблицаСтрока.transportType = ВетисArgusShipmentСлой1с.TransportType(_Item.transportInfo.transportType);
		
		_ТаблицаСтрока.transportStorageType = ВетисArgusShipmentСлой1с.TransportationStorageType(_Item.transportStorageType);
		
		_ТаблицаСтрока.type = ВетисMercuryVetdocumentСлой1с.VetDocumentType(_Item.type);
		
		_ТаблицаСтрока.waybillType = ВетисArgusShipmentСлой1с.WaybillType(_Item.waybillType);
		
		_ТаблицаСтрока.waybill = "№" + _Item.waybillNumber + " от " + ВетисBase.xsDate(_Item.waybillDate);
		
		_ТаблицаСтрока.НоменклатурнаяГруппа = ВетисArgusProductionСлой1с.SubProduct(_Item.batch.subProduct);
		
		_ТаблицаСтрока.Количество = _Item.batch.volume;
		
		_ТаблицаСтрока.КоличествоМест = _Item.batch.packingAmount;
		
		_ТаблицаСтрока.ЕдиницаИзмерения = ВетисArgusCommonСлой1с.Unit(_Item.batch.unit);
		
		_ТаблицаСтрока.Упаковка = ВетисArgusCommonСлой1с.PackingForm(_Item.batch.packingList);
		
		_ТаблицаСтрока.Скоропортящаяся = _Item.batch.perishable;
		
		_ТаблицаСтрока.СтранаПроисхождения = ВетисIkarСлой1с.Country(_Item.batch.countryOfOrigin);
		
		_ТаблицаСтрока.ПроизводительПредприятие = ВетисCerberusEnterpriseСлой1с.Enterprise(_Item.batch.producerList.producer[0].enterprise);
		
		Если НЕ ЗначениеЗаполнено(_ТаблицаСтрока.ПроизводительПредприятие) Тогда
			_ТаблицаСтрока.ПроизводительПредприятие = ВетисCerberusEnterpriseСлой1с.EnterpriseСклад(_Item.batch.producerList.producer[0].enterprise);
		КонецЕсли;
		
		//ТаблицаСтрока.Производитель = ;
		
		_ТаблицаСтрока.НекачественныйГруз = _Item.batch.lowGradeCargo;
		
		_ТаблицаСтрока.Собственник = ВетисCerberusEnterpriseСлой1с.BusinessEntity(_Item.batch.owner);
		
	КонецЦикла;
	
	//СписокВетис.Сортировать("name");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСвязь(Команда)
	
	Если Элементы.СписокВетис.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.СправочникСписок.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьСвязьСервер(Элементы.СписокВетис.ТекущиеДанные.uuid, Элементы.СправочникСписок.ТекущиеДанные.Ссылка);
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСвязьСервер(uuid, пСсылка) Экспорт
	
	Перем _Отказ;
	
	_issuerId = ВетисCerberusEnterpriseСлой1с.BusinessEntity(ЗаполнениеДокументов.ПолучитьКонтрагентаПоОрганизации(Организация));
	
	_enterpriseGuid = ВетисCerberusEnterpriseСлой1с.EnterpriseСклад(Склад);
	
	_VetDocument = ВетисMercuryApplications.getVetDocumentByUuid(uuid, _enterpriseGuid, _issuerId, _Отказ);
	
	Если _Отказ = Истина Тогда Возврат; КонецЕсли;
	
	_док = пСсылка.ПолучитьОбъект();
	
	ВетисMercuryVetdocumentСлой1с.VetDocumentКонвертировать(_док, _VetDocument);
	
	_док.ОбменДанными.Загрузка = Истина;
	
	_док.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСвязь(Команда)
	
	УдалитьСвязьСервер();
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьСервер()
	
	//Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
	//	Для Каждого _ТекДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
	//		
	//		ВетисСоответствие.Удалить(_ТекДанные.Ссылка);
	//		
	//	КонецЦикла;
	//Иначе
	//	_ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
	//	
	//	ВетисСоответствие.Удалить(_ТекДанные.Ссылка);
	//	
	//КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
КонецПроцедуры


&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//СтандартнаяОбработка = Ложь;
	
	//_ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
	//
	//_СписокВетисСтроки = СписокВетис.НайтиСтроки(Новый Структура("name", _ТекДанные.name));
	//
	//Если _СписокВетисСтроки.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Элементы.СписокВетис.ТекущаяСтрока = _СписокВетисСтроки[0].ПолучитьИдентификатор();
	
КонецПроцедуры


&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	
КонецПроцедуры


&НаКлиенте
Процедура СкладНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	оо = Новый ОписаниеОповещения("СкладыОбработкаОповещения", ЭтаФорма);
	
	ОткрытьФорму("Справочник.Склады.ФормаВыбора", Новый Структура("Ключ,Запрос", Склад, ПолучитьТекстЗапросаСправочникСкладыФормаВыбора()), ,,,, оо);
	
КонецПроцедуры

&НаКлиенте
Процедура СкладыОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Склад = Результат;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПолучитьТекстЗапросаСправочникСкладыФормаВыбора()
	
	Возврат
	"ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.ПометкаУдаления,
	|	_Таблица.ЭтоГруппа,
	|	_Таблица.Код,
	|	_Таблица.Наименование,
	|	ВЫБОР
	|		КОГДА _Ветис.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Подсветка
	|ИЗ
	|	Справочник.Склады КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Ветис
	|		ПО _Таблица.Ссылка = _Ветис.Ссылка
	|ГДЕ
	|	ИСТИНА
	|	И НЕ _Таблица.ПометкаУдаления
	//|	И НЕ _Таблица.ЭтоГруппа
	|	И ИСТИНА";
	
КонецФункции


