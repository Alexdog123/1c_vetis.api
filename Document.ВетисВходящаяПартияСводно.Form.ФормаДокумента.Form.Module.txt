
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры


&НаКлиенте
Процедура СкладскойЖурналВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СкладскойЖурналВозвратныйВСД" Тогда
		ОткрытьЗначение(Элементы.СкладскойЖурнал.ТекущиеДанные.ВозвратныйВСД);
	ИначеЕсли Поле.Имя = "СкладскойЖурналВСД" И ЗначениеЗаполнено(Элементы.СкладскойЖурнал.ТекущиеДанные.guid) Тогда
		ОткрытьЗначение(Элементы.СкладскойЖурнал.ТекущиеДанные.ВСД);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладскойЖурналПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Копирование;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладскойЖурналПередУдалением(Элемент, Отказ)
	
	Отказ = ЗначениеЗаполнено(Элемент.ТекущиеДанные.guid);
	
КонецПроцедуры

&НаКлиенте
Процедура СкладскойЖурналПриАктивизацииСтроки(Элемент)
	
	Отправитель = Неопределено;
	Получатель = Неопределено;
	ОтправительПредприятие = Неопределено;
	ПолучательПредприятие = Неопределено;
	Количество = Неопределено;
	КоличествоМест = Неопределено;
	
	Если Элементы.СкладскойЖурнал.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Элементы.СкладскойЖурнал.ТекущиеДанные.ВСД) Тогда
		Возврат;
	КонецЕсли;
	
	_всд = Элементы.СкладскойЖурнал.ТекущиеДанные.ВСД;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, _всд, "Отправитель, ОтправительПредприятие, Получатель, ПолучательПредприятие");
	
	Количество = _всд.СкладскойЖурнал[0].Количество;
	
	КоличествоМест = _всд.СкладскойЖурнал[0].КоличествоМест;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладскойЖурналВСДПриИзменении(Элемент = Неопределено)
	
	_СтрокаСЖ = Элементы.СкладскойЖурнал.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(_СтрокаСЖ.ВСД) Тогда
		Возврат;
	КонецЕсли;
	
	_всдСтрокаСЖ = _СтрокаСЖ.ВСД.СкладскойЖурнал[0];
	_СтрокаСЖ.НоменклатурнаяГруппа = _всдСтрокаСЖ.НоменклатурнаяГруппа;
	_СтрокаСЖ.Количество           = _всдСтрокаСЖ.Количество;
	_СтрокаСЖ.КоличествоМест       = _всдСтрокаСЖ.КоличествоМест;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладскойЖурналВСДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	_Статус = Новый СписокЗначений;
	_Статус.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.ПустаяСсылка"));
	_Статус.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentStatus.Оформлен"));
	
	_Тип = Новый СписокЗначений;
	_Тип.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.ПустаяСсылка"));
	_Тип.Добавить(ПредопределенноеЗначение("Перечисление.ВетисVetDocumentType.Входящий"));
	
	_Параметры = Новый Структура("Проведен, Статус, Тип", Истина, _Статус, _Тип);
	
	_оо = Новый ОписаниеОповещения("СкладскойЖурналВСДНачалоВыбораОбработкаОповещения", ЭтаФорма);
	
	ОткрытьФорму("Документ.ВетисВетеринарноСопроводительныйДокумент.ФормаВыбора", _Параметры,,,,, _оо);
	
КонецПроцедуры

&НаКлиенте
Процедура СкладскойЖурналВСДНачалоВыбораОбработкаОповещения(Результат, Параметр) Экспорт
	
	Элементы.СкладскойЖурнал.ТекущиеДанные.ВСД = Результат;
	
	СкладскойЖурналВСДПриИзменении();
	
КонецПроцедуры


&НаКлиенте
Процедура СоставитьАктНесоответствияПриИзменении(Элемент)
	
	Элементы.ГруппаАктНесоответствияКолонка.Доступность = Объект.СоставитьАктНесоответствия;
	
КонецПроцедуры


&НаКлиенте
Процедура Отправить(Команда)
	
	Если НЕ Объект.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого _СтрокаСЖ Из Объект.СкладскойЖурнал Цикл
		
		Если ЗначениеЗаполнено(_СтрокаСЖ.guid) Тогда
			Продолжить;
		КонецЕсли;
		
		ОтправитьСервер(_СтрокаСЖ.НомерСтроки-1);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьСервер(пНомерСтроки)
	
	_СтрокаСЖ = Объект.СкладскойЖурнал.Получить(пНомерСтроки);
	
	ВетисMercuryApplicationsСлой1с.IncomingOperation(_СтрокаСЖ);
	
КонецПроцедуры


&НаКлиенте
Процедура ПредприятиеОбработкаОповещения(пЗначение, пПараметр) Экспорт
	
	Если НЕ пЗначение = Неопределено Тогда
		Модифицированность = Истина;
		Выполнить пПараметр + " = пЗначение;";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписок(ИмяВладельца)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	_Таблица.Владелец КАК Ссылка
	|ИЗ
	|	Справочник.кпсПунктыНазначения КАК _Таблица
	|ГДЕ
	|	_Таблица.Владелец = &Владелец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	_Таблица.Владелец
	|ИЗ
	|	Справочник.кпсПунктыНазначения КАК _Таблица
	|ГДЕ
	|	_Таблица.Владелец ССЫЛКА Справочник.Склады
	|	И 1 В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				1
	|			ИЗ
	|				РегистрСведений.СобственныеКонтрагенты
	|			ГДЕ
	|				РегистрСведений.СобственныеКонтрагенты.Контрагент = &Владелец)";
	
	Запрос.УстановитьПараметр("Владелец", Вычислить(ИмяВладельца));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	_Список = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		_Список.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат _Список;
	
КонецФункции

&НаСервере
Функция Элемент_ПутьКДанным(пЭлементИмя)
	
	Возврат Элементы[пЭлементИмя].ПутьКДанным;
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаСправочникКонтрагентыФормаВыбора()
	
	Возврат
	"ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.ПометкаУдаления,
	|	_Таблица.ЭтоГруппа,
	|	_Таблица.Код,
	|	_Таблица.Наименование,
	|	_Таблица.ИНН,
	|	_Таблица.КПП,
	|	_Таблица.ОсновнойМенеджерПокупателя КАК Менеджер,
	|	ВЫБОР
	|		КОГДА _Ветис.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Подсветка
	|ИЗ
	|	Справочник.Контрагенты КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Ветис
	|		ПО _Таблица.Ссылка = _Ветис.Ссылка
	|ГДЕ
	|	ИСТИНА
	|	И НЕ _Таблица.ПометкаУдаления
	|	И НЕ _Таблица.ЭтоГруппа";
	
КонецФункции


