
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Для каждого _СтрокаСЖ Из Объект.СкладскойЖурнал Цикл
	//	Для каждого _Реквизит Из ПолучитьРеквизиты() Цикл
	//		Если Лев(_Реквизит.Имя, 2) = "сж" Тогда
	//			ЭтаФорма[_Реквизит.Имя] = _СтрокаСЖ[Сред(_Реквизит.Имя, 3)];
	//		КонецЕсли;
	//	КонецЦикла;
	//	Прервать;
	//КонецЦикла;
	Для каждого _Строка Из Объект.СкладскойЖурнал Цикл
		Для каждого _Реквизит Из ПолучитьРеквизиты() Цикл
			Если Лев(_Реквизит.Имя, 2) = "сж" Тогда
				ЭтаФорма[_Реквизит.Имя] = _Строка[Сред(_Реквизит.Имя, 3)];
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого _Строка Из Объект.ВСД Цикл
		Для каждого _Реквизит Из ПолучитьРеквизиты() Цикл
			Если Лев(_Реквизит.Имя, 3) = "всд" Тогда
				ЭтаФорма[_Реквизит.Имя] = _Строка[Сред(_Реквизит.Имя, 4)];
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого _Строка Из Объект.ТТН Цикл
		Для каждого _Реквизит Из ПолучитьРеквизиты() Цикл
			Если Лев(_Реквизит.Имя, 3) = "ттн" Тогда
				ЭтаФорма[_Реквизит.Имя] = _Строка[Сред(_Реквизит.Имя, 4)];
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	//Для каждого _Элемент Из Элементы Цикл
	//	Если ТипЗнч(_Элемент) = Тип("ПолеФормы") И Лев(_Элемент.ПутьКДанным, 2) = "сж" Тогда
	//		_Элемент.УстановитьДействие("ПриИзменении", "СкладскойЖурналПриИзменении");
	//	КонецЕсли;
	//КонецЦикла;
	
	Для каждого _Элемент Из Элементы Цикл
		Если ТипЗнч(_Элемент) = Тип("ПолеФормы") Тогда
			Если Лев(_Элемент.ПутьКДанным, 2) = "сж" Тогда
				_Элемент.УстановитьДействие("ПриИзменении", "СкладскойЖурналПриИзменении");
			ИначеЕсли Лев(_Элемент.ПутьКДанным, 3) = "всд" Тогда
				_Элемент.УстановитьДействие("ПриИзменении", "ВСДПриИзменении");
			ИначеЕсли Лев(_Элемент.ПутьКДанным, 3) = "ттн" Тогда
				_Элемент.УстановитьДействие("ПриИзменении", "ТТНПриИзменении");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ГруппаДополнительно.Видимость = кпс.РазрешенаОтладка();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.СкладскойЖурнал.Очистить();
	ТекущийОбъект.ВСД.Очистить();
	ТекущийОбъект.ТТН.Очистить();
	
	//_СтрокаСЖ = ТекущийОбъект.СкладскойЖурнал.Добавить();
	//
	//Для каждого _Реквизит Из ПолучитьРеквизиты() Цикл
	//	Если Лев(_Реквизит.Имя, 2) = "сж" Тогда
	//		_СтрокаСЖ[Сред(_Реквизит.Имя, 3)] = ЭтаФорма[_Реквизит.Имя];
	//	КонецЕсли;
	//КонецЦикла;
	
	_Строка = ТекущийОбъект.СкладскойЖурнал.Добавить();
	
	Для каждого _Реквизит Из ПолучитьРеквизиты() Цикл
		Если Лев(_Реквизит.Имя, 2) = "сж" Тогда
			_Строка[Сред(_Реквизит.Имя, 3)] = ЭтаФорма[_Реквизит.Имя];
		КонецЕсли;
	КонецЦикла;
	
	_Строка = ТекущийОбъект.ВСД.Добавить();
	
	Для каждого _Реквизит Из ПолучитьРеквизиты() Цикл
		Если Лев(_Реквизит.Имя, 3) = "всд" Тогда
			_Строка[Сред(_Реквизит.Имя, 4)] = ЭтаФорма[_Реквизит.Имя];
		КонецЕсли;
	КонецЦикла;
	
	_Строка = ТекущийОбъект.ТТН.Добавить();
	
	Для каждого _Реквизит Из ПолучитьРеквизиты() Цикл
		Если Лев(_Реквизит.Имя, 3) = "ттн" Тогда
			_Строка[Сред(_Реквизит.Имя, 4)] = ЭтаФорма[_Реквизит.Имя];
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	
КонецПроцедуры


&НаКлиенте
Процедура СкладскойЖурналПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
	СкладскойЖурналПриИзмененииНаСервере(Элемент.Имя);
	
КонецПроцедуры

&НаСервере
Процедура СкладскойЖурналПриИзмененииНаСервере(ЭлементИмя)
	
	//Если Элементы[ЭлементИмя].ПутьКДанным = "сжНоменклатура" Тогда
	//	сжЕдиницаИзмерения = сжНоменклатура.БазоваяЕдиницаИзмерения;
	//	сжСтранаПроисхождения = сжНоменклатура.СтранаПроисхождения;
	//КонецЕсли;
	
	Если Элементы[ЭлементИмя].ПутьКДанным = "сжНоменклатура" Тогда
		сжЕдиницаИзмерения = сжНоменклатурнаяГруппа.БазоваяЕдиницаИзмерения;
		сжСтранаПроисхождения = сжНоменклатурнаяГруппа.СтранаПроисхождения;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВСДПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТТНПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура сжНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	оо = Новый ОписаниеОповещения("сжНоменклатураОбработкаОповещения", ЭтаФорма);
	
	ОткрытьФорму("Справочник.НоменклатурныеГруппы.Форма.ФормаВыбораУФ", Новый Структура("Ключ,Запрос", сжНоменклатурнаяГруппа, ПолучитьТекстЗапросаСправочникНоменклатурныеГруппыФормаВыбора()), ЭтаФорма,,,,оо);
	
КонецПроцедуры

&НаКлиенте
Процедура сжНоменклатураОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		сжНоменклатурнаяГруппа = Результат;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура сжПроизводительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	оо = Новый ОписаниеОповещения("сжПроизводительОбработкаОповещения", ЭтаФорма);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбораУФ", Новый Структура("Ключ,Запрос", сжПроизводитель, ПолучитьТекстЗапросаСправочникКонтрагентыФормаВыбора()), ЭтаФорма,,,,оо);
	
КонецПроцедуры

&НаКлиенте
Процедура сжПроизводительОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		сжПроизводитель = Результат;
		сжПроизводительПредприятие = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура сжПроизводительПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	оо = Новый ОписаниеОповещения("ПредприятиеОбработкаОповещения", ЭтаФорма, Элемент_ПутьКДанным(Элемент.Имя));
	
	ОткрытьФорму("Справочник.кпсПунктыНазначения.ФормаВыбора", Новый Структура("Владелец, Заголовок", ПолучитьСписок("сжПроизводитель"), "Предприятия"), ,,,, оо);
	
КонецПроцедуры


&НаКлиенте
Процедура сжСтранаПроисхожденияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	оо = Новый ОписаниеОповещения("сжСтранаПроисхожденияОповещения", ЭтаФорма);
	
	ОткрытьФорму("Справочник.КлассификаторСтранМира.Форма.ФормаВыбораУФ", Новый Структура("Ключ, Запрос", сжСтранаПроисхождения, ПолучитьТекстЗапросаСправочникКлассификаторСтранМираФормаВыбора()), ЭтаФорма,,,,оо);
	
КонецПроцедуры

&НаКлиенте
Процедура сжСтранаПроисхожденияОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		сжСтранаПроисхождения = Результат;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	оо = Новый ОписаниеОповещения("ПолучательОбработкаОповещения", ЭтаФорма);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбораУФ", Новый Структура("Ключ,Запрос", Объект.Получатель, ПолучитьТекстЗапросаСправочникКонтрагентыФормаВыбора()), ЭтаФорма,,,,оо);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.Получатель = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	оо = Новый ОписаниеОповещения("ПредприятиеОбработкаОповещения", ЭтаФорма, Элемент_ПутьКДанным(Элемент.Имя));
	
	ОткрытьФорму("Справочник.кпсПунктыНазначения.ФормаВыбора", Новый Структура("Владелец, Заголовок", ПолучитьСписок("Объект.Получатель"), "Предприятия"), ,,,, оо);
	
КонецПроцедуры


&НаКлиенте
Процедура ОтправительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	оо = Новый ОписаниеОповещения("ОтправительОбработкаОповещения", ЭтаФорма);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбораУФ", Новый Структура("Ключ,Запрос", Объект.Отправитель, ПолучитьТекстЗапросаСправочникКонтрагентыФормаВыбора()), ЭтаФорма,,,,оо);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		Объект.Отправитель = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительПредприятиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	оо = Новый ОписаниеОповещения("ПредприятиеОбработкаОповещения", ЭтаФорма, Элемент_ПутьКДанным(Элемент.Имя));
	
	ОткрытьФорму("Справочник.кпсПунктыНазначения.ФормаВыбора", Новый Структура("Владелец, Заголовок", ПолучитьСписок("Объект.Отправитель"), "Предприятия"), ,,,, оо);
	
КонецПроцедуры


&НаКлиенте
Процедура ттнПосредникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	оо = Новый ОписаниеОповещения("ттнПосредникОбработкаОповещения", ЭтаФорма);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбораУФ", Новый Структура("Ключ,Запрос", ттнПосредник, ПолучитьТекстЗапросаСправочникКонтрагентыФормаВыбора()), ЭтаФорма,,,,оо);
	
КонецПроцедуры

&НаКлиенте
Процедура ттнПосредникОбработкаОповещения(Результат, Параметр) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Модифицированность = Истина;
		ттнПосредник = Результат;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПредприятиеОбработкаОповещения(пЗначение, пПараметр) Экспорт
	
	Если НЕ пЗначение = Неопределено Тогда
		Модифицированность = Истина;
		Выполнить пПараметр + " = пЗначение;";
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПолучитьСписок(ИмяВладельца)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	_Таблица.Владелец КАК Ссылка
	|ИЗ
	|	Справочник.кпсПунктыНазначения КАК _Таблица
	|ГДЕ
	|	_Таблица.Владелец = &Владелец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	_Таблица.Владелец
	|ИЗ
	|	Справочник.кпсПунктыНазначения КАК _Таблица
	|ГДЕ
	|	_Таблица.Владелец ССЫЛКА Справочник.Склады
	|	И 1 В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				1
	|			ИЗ
	|				РегистрСведений.СобственныеКонтрагенты
	|			ГДЕ
	|				РегистрСведений.СобственныеКонтрагенты.Контрагент = &Владелец)";
	
	Запрос.УстановитьПараметр("Владелец", Вычислить(ИмяВладельца));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	_Список = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		_Список.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат _Список;
	
КонецФункции

&НаСервере
Функция Элемент_ПутьКДанным(пЭлементИмя)
	Возврат Элементы[пЭлементИмя].ПутьКДанным;
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаСправочникКонтрагентыФормаВыбора()
	
	Возврат
	"ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.ПометкаУдаления,
	|	_Таблица.ЭтоГруппа,
	|	_Таблица.Код,
	|	_Таблица.Наименование,
	|	_Таблица.ИНН,
	|	_Таблица.КПП,
	|	_Таблица.ОсновнойМенеджерПокупателя КАК Менеджер,
	|	ВЫБОР
	|		КОГДА _Ветис.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Подсветка
	|ИЗ
	|	Справочник.Контрагенты КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Ветис
	|		ПО _Таблица.Ссылка = _Ветис.Ссылка
	|ГДЕ
	|	ИСТИНА
	|	И НЕ _Таблица.ПометкаУдаления
	|	И НЕ _Таблица.ЭтоГруппа";
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаСправочникКлассификаторСтранМираФормаВыбора()
	
	Возврат
	"ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.ПометкаУдаления,
	|	_Таблица.Код,
	|	_Таблица.Наименование,
	|	ВЫБОР
	|		КОГДА _Ветис.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Подсветка
	|ИЗ
	|	Справочник.КлассификаторСтранМира КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Ветис
	|		ПО _Таблица.Ссылка = _Ветис.Ссылка
	|ГДЕ
	|	ИСТИНА
	|	И НЕ _Таблица.ПометкаУдаления";
		
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаСправочникНоменклатурныеГруппыФормаВыбора()
	
	Возврат
	"ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.ПометкаУдаления,
	|	_Таблица.Код,
	|	_Таблица.Наименование,
	|	ВЫБОР
	|		КОГДА _Ветис.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Подсветка
	|ИЗ
	|	Справочник.НоменклатурныеГруппы КАК _Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетисСоответствие КАК _Ветис
	|		ПО _Таблица.Ссылка = _Ветис.Ссылка
	|ГДЕ
	|	ИСТИНА
	|	И НЕ _Таблица.ПометкаУдаления";
		
КонецФункции

