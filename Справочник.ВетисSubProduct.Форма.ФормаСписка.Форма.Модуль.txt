
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если кпс.РазрешенаОтладка() Тогда
		Элементы.guid.Видимость = Истина;
		Элементы.ДатаИзменения.Видимость = Истина;
	КонецЕсли;
	
	ТипПродукции = ПредопределенноеЗначение("Перечисление.ВетисProductType.МясоИМясопродукты");
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(СписокПродукция.Отбор, "ТипПродукции", ТипПродукции);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПродукцияПриАктивизацииСтроки(Элемент)
	
	Если Элементы.СписокПродукция.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Список.Отбор, "Владелец", Элементы.СписокПродукция.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипПродукцииПриИзменении(Элемент)
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(СписокПродукция.Отбор, "ТипПродукции", ТипПродукции);
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(Список.Отбор, "Владелец", ПредопределенноеЗначение("Справочник.ВетисProduct.ПустаяСсылка"));
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьСервер();
	
	кпс.ВывестиНакопленныеСообщения();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСервер()
	
	_ТаблицаВетис = ВетисArgusProduction.SubProductListТаблица();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	_Таблица.guid
	|ИЗ
	|	Справочник.ВетисProduct КАК _Таблица
	|ГДЕ
	|	НЕ _Таблица.ПометкаУдаления");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		_Выборка = Неопределено;
		_параметры = Неопределено;
		Пока ВетисArgusProduction.GetSubProductByProductListСледующий(Выборка.guid, _Выборка, _параметры) Цикл
			ЗаполнитьЗначенияСвойств(_ТаблицаВетис.Добавить(), _Выборка);
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(_Таблица.name КАК СТРОКА(150)) КАК name,
	|	ВЫРАЗИТЬ(_Таблица.guid КАК СТРОКА(36)) КАК guid,
	|	ВЫРАЗИТЬ(_Таблица.code КАК СТРОКА(10)) КАК code,
	|	ВЫРАЗИТЬ(_Таблица.productGuid КАК СТРОКА(36)) КАК productGuid
	|ПОМЕСТИТЬ ВТаблицаВетис
	|ИЗ
	|	&ТаблицаВетис КАК _Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	_Таблица.Ссылка,
	|	_Таблица.Наименование,
	|	_Таблица.КодТНВЭД,
	|	_Таблица.Владелец КАК Владелец,
	|	_Ветис.name,
	|	_Ветис.guid,
	|	_Ветис.code,
	|	_Ветис.productGuid,
	|	_Продукция.Ссылка КАК Product
	|ИЗ
	|	ВТаблицаВетис КАК _Ветис
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.ВетисSubProduct КАК _Таблица
	|		ПО _Ветис.guid = _Таблица.guid
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВетисProduct КАК _Продукция
	|		ПО _Ветис.productGuid = _Продукция.guid
	|ГДЕ
	|	ИСТИНА
	//|	И _Таблица.Владелец = _Продукция.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	_Ветис.name";
	
	Запрос.УстановитьПараметр("ТаблицаВетис", _ТаблицаВетис);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		_Новый = Ложь;
		
		_ЕстьИзменения = Ложь;
		
		Если Выборка.guid = NULL Тогда
			Выборка.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
			ВетисОбщегоНазначения.ВывестиСообщение("- " + Выборка.Наименование, "Ветис.SubProduct");
			Продолжить;
			
		ИначеЕсли Выборка.Ссылка = NULL Тогда
			_Новый = Истина;
			
		Иначе
			_ЕстьИзменения = Ложь
			ИЛИ НЕ Выборка.Наименование = СокрЛП(Выборка.name)
			ИЛИ НЕ Выборка.КодТНВЭД = СокрЛП(Выборка.code)
			ИЛИ НЕ Выборка.Владелец = Выборка.Product;
			
		КонецЕсли;
		
		Если Выборка.Product = NULL Тогда
			ВетисОбщегоНазначения.ВывестиСообщение("err: Продукция не найдена: " + Выборка.productGuid + "; вид продукции: " + Выборка.guid, "Ветис.SubProduct");
			//Продолжить;
		КонецЕсли;
		
		Если _ЕстьИзменения ИЛИ _Новый Тогда
			
			Если _Новый Тогда
				_Элемент = Справочники.ВетисSubProduct.СоздатьЭлемент();
				ВетисОбщегоНазначения.ВывестиСообщение("+ " + СокрЛП(Выборка.name), "Ветис.SubProduct");
			Иначе
				_Элемент = Выборка.Ссылка.ПолучитьОбъект();
				ВетисОбщегоНазначения.ВывестиСообщение("~ " + СокрЛП(Выборка.name), "Ветис.SubProduct");
			КонецЕсли;
			
			_Элемент.guid          = СокрЛП(Выборка.guid);
			_Элемент.Наименование  = СокрЛП(Выборка.name);
			_Элемент.КодТНВЭД      = СокрЛП(Выборка.code);
			_Элемент.Владелец      = Выборка.Product;
			_Элемент.ДатаИзменения = ТекущаяДата();
			
			Попытка
				_Элемент.Записать();
			Исключение
				ВетисОбщегоНазначения.ВывестиСообщениеОбОшибке(ИнформацияОбОшибке(), "Ветис.SubProduct");
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
