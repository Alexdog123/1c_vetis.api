
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВетисКонтрагент = кпсПредопределенные.Получить("Справочник.Контрагенты","Ветис");
	
	СправочникСписок.Параметры.УстановитьЗначениеПараметра("Контрагент", ВетисКонтрагент);
	
	СправочникСписок.Параметры.УстановитьЗначениеПараметра("Новое", кпсПредопределенные.Получить("Справочник.Номенклатура", "НОВОЕ"));
	
	//Для каждого _эл Из ВетисArgusProduction.ProductTypeСписок() Цикл
	//	Элементы.ТипПродукции.СписокВыбора.Добавить(_эл.Значение, _эл.Представление);
	//КонецЦикла;
	
	ТипПродукции = ПредопределенноеЗначение("Перечисление.ВетисProductType.МясоИМясопродукты");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаКлиенте
Процедура ВетисНоменклатураЗаполнить(Команда)
	
	ВетисНоменклатураЗаполнитьСервер();
	
КонецПроцедуры

&НаСервере
Процедура ВетисНоменклатураЗаполнитьСервер()
	
	Перем _Product, _subProduct, _параметрыP;
	
	_ТипПродукции = ВетисArgusProductionСлой1с.ProductType(ТипПродукции);
	
	Объект.ВетисНоменклатура.Очистить();
	
	Пока Истина Цикл
		
		Если НЕ ВетисArgusProduction.GetProductByTypeListСледующий(_ТипПродукции, _Product, _параметрыP) Тогда
			Прервать;
		КонецЕсли;
		
		_параметрыS = Неопределено;
		Пока Истина Цикл
			
			Если НЕ ВетисArgusProduction.GetSubProductByProductListСледующий(_Product.guid, _subProduct, _параметрыS) Тогда
				Прервать;
			КонецЕсли;
			
			ТаблицаСтрока = Объект.ВетисНоменклатура.Добавить();
			ТаблицаСтрока.Наименование = _subProduct.name;
			ТаблицаСтрока.UUID         = _subProduct.uuid;
			ТаблицаСтрока.Код          = _subProduct.code;
			ТаблицаСтрока.Статус       = _subProduct.status;
			ТаблицаСтрока.GUID         = _subProduct.guid;
			ТаблицаСтрока.РодительGUID = _Product.guid;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Объект.ВетисНоменклатура.Сортировать("Наименование");
		
КонецПроцедуры


&НаКлиенте
Процедура СоздатьСвязь(Команда)
	
	СоздатьСвязьСервер();
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСвязьСервер() Экспорт
	
	ТекДанные = Объект.ВетисНоменклатура.НайтиПоИдентификатору(Элементы.ВетисНоменклатура.ТекущаяСтрока);
	
	_ТипПродукции = Перечисления.ВетисProductType.Индекс(ТипПродукции) + 1;
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого ТекДанные1с из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			
			_мз = РегистрыСведений.НоменклатураКонтрагентов.СоздатьМенеджерЗаписи();
			_мз.Контрагент                     = ВетисКонтрагент;
			_мз.Номенклатура                   = ТекДанные1с.Ссылка;
			_мз.НаименованиеНоменклатурыКонтрагента = ТекДанные.Наименование;
			_мз.Идентификатор                  = ТекДанные.GUID;
			_мз.КодНоменклатурыКонтрагента     = ТекДанные.РодительGUID;
			_мз.АртикулНоменклатурыКонтрагента = _ТипПродукции;
			
			_мз.Записать();
			
		КонецЦикла;
		
	Иначе
		ТекДанные1с = Элементы.СправочникСписок.ТекущиеДанные;
		
		_мз = РегистрыСведений.НоменклатураКонтрагентов.СоздатьМенеджерЗаписи();
		_мз.Контрагент                     = ВетисКонтрагент;
		_мз.Номенклатура                   = ТекДанные1с.Ссылка;
		_мз.НаименованиеНоменклатурыКонтрагента = ТекДанные.Наименование;
		_мз.Идентификатор                  = ТекДанные.GUID;
		_мз.КодНоменклатурыКонтрагента     = ТекДанные.РодительGUID;
		_мз.АртикулНоменклатурыКонтрагента = _ТипПродукции;
		
		_мз.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСвязь(Команда)
	
	УдалитьСвязьСервер();
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьСервер()
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого ТекДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			
			_мз = РегистрыСведений.НоменклатураКонтрагентов.СоздатьМенеджерЗаписи();
			_мз.Контрагент   = ВетисКонтрагент;
			_мз.Номенклатура = ТекДанные.Ссылка;
			
			_мз.Удалить();
			
		КонецЦикла;
	Иначе
		ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
		
		_мз = РегистрыСведений.НоменклатураКонтрагентов.СоздатьМенеджерЗаписи();
		_мз.Контрагент   = ВетисКонтрагент;
		_мз.Номенклатура = ТекДанные.Ссылка;
		
		_мз.Удалить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВетисНоменклатураВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элементы.ВетисНоменклатура.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	//кпсСКД.ОтборУстановитьЗначение(СправочникСписок.Отбор, "Наименование", ТекДанные.Наименование);
	КомпоновкаДанныхКлиентСервер.ДобавитьОтбор(СправочникСписок.Отбор, "Наименование", ТекДанные.Наименование);
	
КонецПроцедуры
