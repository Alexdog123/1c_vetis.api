
Функция Country(guid = Неопределено) Экспорт
	
	_Объект = Создать("Country");
	
	Если ТипЗнч(guid) = Тип("Структура") Тогда
		Для каждого _guid Из guid Цикл
			_Объект[_guid.Ключ] = _guid.Значение;
		КонецЦикла;
	ИначеЕсли НЕ guid = Неопределено Тогда
		_Объект.guid = guid;
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции

Функция District(guid = Неопределено) Экспорт
	
	_Объект = Создать("District");
	
	Если ТипЗнч(guid) = Тип("Структура") Тогда
		Для каждого _guid Из guid Цикл
			_Объект[_guid.Ключ] = _guid.Значение;
		КонецЦикла;
	ИначеЕсли НЕ guid = Неопределено Тогда
		_Объект.guid = guid;
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции

Функция Locality(guid = Неопределено) Экспорт
	
	_Объект = Создать("Locality");
	
	Если ТипЗнч(guid) = Тип("Структура") Тогда
		Для каждого _guid Из guid Цикл
			_Объект[_guid.Ключ] = _guid.Значение;
		КонецЦикла;
	ИначеЕсли НЕ guid = Неопределено Тогда
		_Объект.guid = guid;
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции

Функция Region(guid = Неопределено) Экспорт
	
	_Объект = Создать("Region");
	
	Если ТипЗнч(guid) = Тип("Структура") Тогда
		Для каждого _guid Из guid Цикл
			_Объект[_guid.Ключ] = _guid.Значение;
		КонецЦикла;
	ИначеЕсли НЕ guid = Неопределено Тогда
		_Объект.guid = guid;
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции

Функция Street(guid = Неопределено) Экспорт
	
	_Объект = Создать("Street");
	
	Если ТипЗнч(guid) = Тип("Структура") Тогда
		Для каждого _guid Из guid Цикл
			_Объект[_guid.Ключ] = _guid.Значение;
		КонецЦикла;
	ИначеЕсли НЕ guid = Неопределено Тогда
		_Объект.guid = guid;
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции


Функция FederalDistrict(guid = Неопределено) Экспорт
	
	_Объект = Создать("FederalDistrict");
	
	Если ТипЗнч(guid) = Тип("Структура") Тогда
		Для каждого _guid Из guid Цикл
			_Объект[_guid.Ключ] = _guid.Значение;
		КонецЦикла;
	ИначеЕсли НЕ guid = Неопределено Тогда
		_Объект.guid = guid;
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции


Функция Address(countryGuid, regionGuid, districtGuid, localityGuid, streetGuid, house, building) Экспорт
	
	_Объект = Создать("Address");
	
	_Объект.country      = Country(countryGuid);
	_Объект.region       = District(regionGuid);
	_Объект.localityGuid = Locality(localityGuid);
	_Объект.streetGuid   = Street(streetGuid);
	_Объект.house        = house;
	_Объект.building     = building;
	
	Возврат _Объект;
	
КонецФункции

Функция AddressView(addressView, пПараметры = Неопределено) Экспорт
	
	_Объект = Создать("Address");
	
	_Объект.addressView = addressView;
	
	Если НЕ пПараметры = Неопределено Тогда
		ЗаполнитьЗначенияСвойств(_Объект, пПараметры);
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции


Функция CountryList(guid = Неопределено) Экспорт
	
	_Объект = Создать("CountryList");
	
	Если НЕ guid = Неопределено Тогда
		_Объект.country.Добавить(ФормаXML.Элемент, URI(), "country", Country(guid));
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции

Функция DistrictList(guid = Неопределено) Экспорт
	
	_Объект = Создать("DistrictList");
	
	Если НЕ guid = Неопределено Тогда
		_Объект.district.Добавить(ФормаXML.Элемент, URI(), "district", Country(guid));
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции

Функция LocalityList(guid = Неопределено) Экспорт
	
	_Объект = Создать("LocalityList");
	
	Если НЕ guid = Неопределено Тогда
		_Объект.locality.Добавить(ФормаXML.Элемент, URI(), "locality", Country(guid));
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции

Функция RegionList(guid = Неопределено) Экспорт
	
	_Объект = Создать("RegionList");
	
	Если НЕ guid = Неопределено Тогда
		_Объект.region.Добавить(ФормаXML.Элемент, URI(), "region", Country(guid));
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции

Функция StreetList(guid = Неопределено) Экспорт
	
	_Объект = Создать("StreetList");
	
	Если НЕ guid = Неопределено Тогда
		_Объект.street.Добавить(ФормаXML.Элемент, URI(), "street", Country(guid));
	КонецЕсли;
	
	Возврат _Объект;
	
КонецФункции


Функция CountryListИтератор(List) Экспорт
	
	Возврат ВетисОбщегоНазначения.ПолучитьИтератор(List, "country");
	
КонецФункции

Функция DistrictListИтератор(List) Экспорт
	
	Возврат ВетисОбщегоНазначения.ПолучитьИтератор(List, "district");
	
КонецФункции

Функция LocalityListИтератор(List) Экспорт
	
	Возврат ВетисОбщегоНазначения.ПолучитьИтератор(List, "locality");
	
КонецФункции

Функция RegionListИтератор(List) Экспорт
	
	Возврат ВетисОбщегоНазначения.ПолучитьИтератор(List, "region");
	
КонецФункции

Функция StreetListИтератор(List) Экспорт
	
	Возврат ВетисОбщегоНазначения.ПолучитьИтератор(List, "street");
	
КонецФункции


#Область Service

Функция GetCountryByGuid(guid, пИмяСвойства = Неопределено, ПоУмолчанию = Неопределено) Экспорт
	
	_объект = Прокси().GetCountryByGuid(guid);
	
	Если пИмяСвойства = Неопределено Тогда
		Возврат _объект;
	Иначе
		Возврат ?(_объект.Свойства().Получить(пИмяСвойства) = Неопределено, ПоУмолчанию, _объект[пИмяСвойства]);
	КонецЕсли;
	
КонецФункции

Функция GetAllCountryList(ListOptions = Неопределено) Экспорт
	
	Если ListOptions = Неопределено Тогда
		ListOptions = ВетисBase.ListOptions();
	Иначе
		ListOptions.offset = ListOptions.offset + ListOptions.count;
	КонецЕсли;
	
	Возврат Прокси().GetAllCountryList(ListOptions);
	
КонецФункции


Функция GetRegionByGuid(guid, пИмяСвойства = Неопределено, ПоУмолчанию = Неопределено) Экспорт
	
	_объект = Прокси().GetRegionByGuid(guid);
	
	Если пИмяСвойства = Неопределено Тогда
		Возврат _объект;
	Иначе
		Возврат ?(_объект.Свойства().Получить(пИмяСвойства) = Неопределено, ПоУмолчанию, _объект[пИмяСвойства]);
	КонецЕсли;
	
КонецФункции

Функция GetRegionListByCountry(countryGuid, ListOptions = Неопределено) Экспорт
	
	Если ListOptions = Неопределено Тогда
		ListOptions = ВетисBase.ListOptions();
	Иначе
		ListOptions.offset = ListOptions.offset + ListOptions.count;
	КонецЕсли;
	
	Возврат Прокси().GetRegionListByCountry(ListOptions, countryGuid);
	
КонецФункции


Функция GetDistrictByGuid(guid, пИмяСвойства = Неопределено, ПоУмолчанию = Неопределено) Экспорт
	
	_объект = Прокси().GetDistrictByGuid(guid);
	
	Если пИмяСвойства = Неопределено Тогда
		Возврат _объект;
	Иначе
		Возврат ?(_объект.Свойства().Получить(пИмяСвойства) = Неопределено, ПоУмолчанию, _объект[пИмяСвойства]);
	КонецЕсли;
	
КонецФункции

Функция GetDistrictListByRegion(regionGuid, ListOptions = Неопределено) Экспорт
	
	Если ListOptions = Неопределено Тогда
		ListOptions = ВетисBase.ListOptions();
	Иначе
		ListOptions.offset = ListOptions.offset + ListOptions.count;
	КонецЕсли;
	
	Возврат Прокси().GetDistrictListByRegion(ListOptions, regionGuid);
	
КонецФункции


Функция GetLocalityListByRegion(regionGuid, ListOptions = Неопределено) Экспорт
	
	Если ListOptions = Неопределено Тогда
		ListOptions = ВетисBase.ListOptions();
	Иначе
		ListOptions.offset = ListOptions.offset + ListOptions.count;
	КонецЕсли;
	
	Возврат Прокси().GetLocalityListByRegion(ListOptions, regionGuid);
	
КонецФункции

Функция GetLocalityListByDistrict(districtGuid, ListOptions = Неопределено) Экспорт
	
	Если ListOptions = Неопределено Тогда
		ListOptions = ВетисBase.ListOptions();
	Иначе
		ListOptions.offset = ListOptions.offset + ListOptions.count;
	КонецЕсли;
	
	Возврат Прокси().GetLocalityListByDistrict(ListOptions, districtGuid);
	
КонецФункции

Функция GetLocalityListByLocality(localityGuid, ListOptions = Неопределено) Экспорт
	
	Если ListOptions = Неопределено Тогда
		ListOptions = ВетисBase.ListOptions();
	Иначе
		ListOptions.offset = ListOptions.offset + ListOptions.count;
	КонецЕсли;
	
	Возврат Прокси().GetLocalityListByLocality(ListOptions, localityGuid);
	
КонецФункции

Функция FindLocalityListByName(regionGuid, pattern, ListOptions = Неопределено) Экспорт
	
	Если ListOptions = Неопределено Тогда
		ListOptions = ВетисBase.ListOptions();
	Иначе
		ListOptions.offset = ListOptions.offset + ListOptions.count;
	КонецЕсли;
	
	Возврат Прокси().FindLocalityListByName(ListOptions, regionGuid, pattern);
	
КонецФункции


Функция GetStreetListByLocality(localityGuid, ListOptions = Неопределено) Экспорт
	
	Если ListOptions = Неопределено Тогда
		ListOptions = ВетисBase.ListOptions();
	Иначе
		ListOptions.offset = ListOptions.offset + ListOptions.count;
	КонецЕсли;
	
	Возврат Прокси().GetStreetListByLocality(ListOptions, localityGuid);
	
КонецФункции

Функция FindStreetListByName(localityGuid, pattern, ListOptions = Неопределено) Экспорт
	
	Если ListOptions = Неопределено Тогда
		ListOptions = ВетисBase.ListOptions();
	Иначе
		ListOptions.offset = ListOptions.offset + ListOptions.count;
	КонецЕсли;
	
	Возврат Прокси().FindStreetListByName(ListOptions, localityGuid, pattern);
	
КонецФункции

#КонецОбласти


Функция Создать(пИмя, пФабрика = Неопределено) Экспорт
	
	Возврат ВетисОбщегоНазначения.Создать(пИмя, URI(), ?(пФабрика = Неопределено, Фабрика(), пФабрика));
	
КонецФункции

Функция Прокси()
	
	_Прокси = WSСсылки.IkarServiceTest.СоздатьWSПрокси("http://api.vetrf.ru/schema/cdm/registry/service", "IkarServiceBindingQSService", "IkarServiceBindingQSPort");
	_Прокси.Пароль       = ВетисПараметрыСоединения.Пароль();
	_Прокси.Пользователь = ВетисПараметрыСоединения.Логин();
	
	Возврат _Прокси;
	
КонецФункции

Функция URI()
	
	Возврат "http://api.vetrf.ru/schema/cdm/ikar";
	
КонецФункции

Функция Фабрика()
	
	Пакеты = Новый Массив;  
	Пакеты.Добавить(ФабрикаXDTO.Пакеты.Получить(URI()));
	
	Возврат Новый ФабрикаXDTO(, Пакеты);
	
КонецФункции
