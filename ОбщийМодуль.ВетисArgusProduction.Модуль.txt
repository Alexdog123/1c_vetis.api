
// Тип, описывающий тип продукции.
Функция ProductType(name) Экспорт
	
	Если name = "Мясо и мясопродукты" Тогда
		Возврат 1;
	ИначеЕсли name = "Корма и кормовые добавки" Тогда
		Возврат 2;
	ИначеЕсли name = "Живые животные" Тогда
		Возврат 3;
	ИначеЕсли name = "Лекарственные средства" Тогда
		Возврат 4;
	ИначеЕсли name = "Пищевые продукты" Тогда
		Возврат 5;
	ИначеЕсли name = "Непищевые продукты и другое" Тогда
		Возврат 6;
	ИначеЕсли name = "Рыба и морепродукты" Тогда
		Возврат 7;
	ИначеЕсли name = "Продукция, не требующая разрешения" Тогда
		Возврат 8;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьСписокТиповПродуктов() Экспорт
	
	Список = Новый СписокЗначений();
	
	Список.Добавить(1, "Мясо и мясопродукты");
	Список.Добавить(2, "Корма и кормовые добавки");
	Список.Добавить(3, "Живые животные");
	Список.Добавить(4, "Лекарственные средства");
	Список.Добавить(5, "Пищевые продукты");
	Список.Добавить(6, "Непищевые продукты и другое");
	Список.Добавить(7, "Рыба и морепродукты");
	Список.Добавить(8, "Продукция, не требующая разрешения");
	
	Возврат Список;
	
КонецФункции

// Тип, описывающий продукцию.
Функция Product(name, code, productType = 1) Экспорт
	
	_Объект = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URI(), "Product"));
	
	_Объект.name = name;// Название продукции.
	_Объект.code = code;// Код ТНВЭД.
	_Объект.englishName = "";
	_Объект.productType = productType;
	
	Возврат _Объект;
	
КонецФункции

Функция Product_guid(guid) Экспорт
	
	_Объект = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URI(), "Product"));
	
	_Объект.guid = guid;
	
	Возврат _Объект;
	
КонецФункции

Функция ProductItem(name, articul = "", productType = 1) Экспорт
	
	_Объект = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URI(), "Product"));
	
	_Объект.name = name;// Название продукции.
	_Объект.code = articul;// Артикул (код) продукции.
	_Объект.productType = productType;
	//_Объект.product = "";
	//_Объект.subProduct = "";
	//_Объект.correspondToGost = Ложь;
	//_Объект.gost = "";
	
	Возврат _Объект;
	
КонецФункции

// Тип, описывающий вид продукции.
Функция SubProduct(name, code, guid) Экспорт
	
	_Объект = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URI(), "SubProduct"));
	
	_Объект.name = name;// Название продукции.
	_Объект.code = code;// Код ТНВЭД.
	_Объект.englishName = "";// Английское название.
	_Объект.productGuid = guid;// Глобальный идентификатор продукции, которому относится данный вид продукции
	
	Возврат _Объект;
	
КонецФункции

Функция SubProduct_guid(name, code, guid) Экспорт
	
	_Объект = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(URI(), "SubProduct"));
	
	_Объект.guid = guid;
	
	Возврат _Объект;
	
КонецФункции


#Область Service

// предназначена для получения списка продукции по указанному типу.
// Тип продукции указан номером.
// Выполнение операции заканчивается либо возвратом списка продукции(active = true, last = true), либо ошибкой,
// в случае если параметры запроса не корректны, если запись по запросу не найдена или произошла иная ошибка выполнения запроса.
Функция GetProductByTypeList(productType, ListOptions = Неопределено) Экспорт
	
	Если ListOptions = Неопределено Тогда
		ListOptions = ВетисBase.ListOptions();
	Иначе
		ListOptions.offset = ListOptions.offset + ListOptions.count;
	КонецЕсли;
	
	Возврат Прокси().GetProductByTypeList(ListOptions, productType);
	
КонецФункции

// предназначена для получения списка видов продукции, отфильтрованного по указанному продукту.
// В список попадают только актуальные последние записи (active=true, last=true).
// Метод поддерживает возможность постраничного вывода.
// Выполнение операции заканчивается либо возвратом списка видов продукции, либо ошибкой,
// в случае если параметры запроса не корректны, если запись по запросу не найдена или произошла иная ошибка выполнения запроса.
Функция GetSubProductByProductList(productGuid, ListOptions = Неопределено) Экспорт
	
	Если ListOptions = Неопределено Тогда
		ListOptions = ВетисBase.ListOptions();
	Иначе
		ListOptions.offset = ListOptions.offset + ListOptions.count;
	КонецЕсли;
	
	Возврат Прокси().GetSubProductByProductList(ListOptions, productGuid);
	
КонецФункции

#КонецОбласти


Функция Прокси()
	
	_Прокси = WSСсылки.ProductServiceTest.СоздатьWSПрокси("http://api.vetrf.ru/schema/cdm/registry/service", "ProductServiceBindingQSService", "ProductServiceBindingQSPort");
	_Прокси.Пароль       = ВетисПараметрыСоединения.Пароль();
	_Прокси.Пользователь = ВетисПараметрыСоединения.Логин();
	
	Возврат _Прокси;
	
КонецФункции

Функция URI()
	
	Возврат "http://api.vetrf.ru/schema/cdm/argus/production";
	
КонецФункции
