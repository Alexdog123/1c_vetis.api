
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СправочникСписок.Отбор, "Владелец", Справочники.Контрагенты.ПустаяСсылка());
		
КонецПроцедуры

&НаКлиенте
Процедура СписокВетисЗаполнить(Команда = Неопределено)
	
	//СписокВетисЗаполнитьСервер();
	//
	//Сообщить(ВетисОбщегоНазначения.ПолучитьНакопленныеСообщения());
	//
КонецПроцедуры

&НаСервере
Процедура СписокВетисЗаполнитьСервер(пКонтрагент)
	
	Перем _Enterprise, _Параметры;
	
	СписокВетис.Очистить();
	
	_businessEntityGuid = ВетисCerberusEnterpriseСлой1с.BusinessEntity(пКонтрагент);
	
	Пока ВетисCerberusEnterprise.GetBusinessEntityEnterpriseListСледующий(_businessEntityGuid, _Enterprise, _Параметры) Цикл
		
		_СписокВетисСтрока = СписокВетис.Добавить();
		
		ЗаполнитьЗначенияСвойств(_СписокВетисСтрока, _Enterprise);
		
		_СписокВетисСтрока.address = _Enterprise.address.addressView;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСвязь(Команда)
	
	ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	СоздатьСвязьСервер(ТекущиеДанные.Ссылка, ТекущиеДанные.name);
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСвязьСервер(п1сСсылка, п1сname) Экспорт
	
	//Если ЭтаФорма.ТекущийЭлемент = Элементы.СписокВетис Тогда
		_ТекДанные = СписокВетис.НайтиПоИдентификатору(Элементы.СписокВетис.ТекущаяСтрока);
	//Иначе
	//	_СписокВетисСтроки = СписокВетис.НайтиСтроки(Новый Структура("name", п1сname));
	//	
	//	Если _СписокВетисСтроки.Количество() = 0 Тогда Возврат; КонецЕсли;
	//	
	//	_ТекДанные = _СписокВетисСтроки[0];
	//	
	//КонецЕсли;
	
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекДанные1с из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			
			ВетисСоответствие.Добавить(_ТекДанные1с.Ссылка, _ТекДанные.guid, _ТекДанные.name, _ТекДанные.address);
			
		КонецЦикла;
		
	Иначе
		ВетисСоответствие.Добавить(п1сСсылка, _ТекДанные.guid, _ТекДанные.name, _ТекДанные.address);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСвязь(Команда)
	
	УдалитьСвязьСервер();
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьСервер()
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			
			ВетисСоответствие.Удалить(_ТекДанные.Ссылка);
			
		КонецЦикла;
	Иначе
		_ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
		
		ВетисСоответствие.Удалить(_ТекДанные.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
КонецПроцедуры


&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//_ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
	//
	//_СписокВетисСтроки = СписокВетис.НайтиСтроки(Новый Структура("name", _ТекДанные.name));
	//
	//Если _СписокВетисСтроки.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Элементы.СписокВетис.ТекущаяСтрока = _СписокВетисСтроки[0].ПолучитьИдентификатор();
	
КонецПроцедуры


&НаКлиенте
Процедура СписокКонтрагентыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.СписокКонтрагенты.ТекущиеДанные;
	
	ВетисОбщегоНазначенияКлиентСервер.ДобавитьОтбор(СправочникСписок.Отбор, "Владелец", ТекущиеДанные.Ссылка);
	
	СписокВетисЗаполнитьСервер(ТекущиеДанные.Ссылка);
	
КонецПроцедуры

