
&НаКлиенте
Процедура СписокВетисЗаполнить(Команда)
	
	СписокВетисЗаполнитьСервер(ВетисСтрокаПоиска);
	
КонецПроцедуры

&НаСервере
Процедура СписокВетисЗаполнитьСервер(пИмя = "", пИНН = "")
	
	СписокВетис.Очистить();
	
	_Item = Неопределено;
	
	_параметры = Неопределено;
	
	_Отбор = Новый Структура;
	
	Если НЕ пИмя = "" И НЕ пИНН = "" Тогда
		_Отбор.Вставить("fullName", пИмя);
		_Отбор.Вставить("inn", пИНН);
	ИначеЕсли НЕ пИНН = "" Тогда
		_Отбор.Вставить("inn", пИНН);
	ИначеЕсли НЕ пИмя = "" Тогда
		_Отбор.Вставить("fullName", пИмя);
	Иначе
		_Отбор.Вставить("fullName", ВетисСтрокаПоиска);
	КонецЕсли;
	
	Пока Истина Цикл
		
		Если НЕ ВетисCerberusEnterprise.GetBusinessEntityListСледующий(_Отбор, _Item, _параметры) Тогда
			Прервать;
		КонецЕсли;
		
		_СписокВетисСтрока = СписокВетис.Добавить();
		
		ЗаполнитьЗначенияСвойств(_СписокВетисСтрока, _Item);
		
		_СписокВетисСтрока.type = ВетисCerberusEnterpriseСлой1с.BusinessEntityType(_Item.type);
		
		Если _СписокВетисСтрока.type = Перечисления.ВетисBusinessEntityType.ЮрЛицо Тогда
			Если ЗначениеЗаполнено(_Item.fullName) Тогда
				_СписокВетисСтрока.name = _Item.fullName;
			КонецЕсли;
		Иначе
			_СписокВетисСтрока.name = _Item.fio;
		КонецЕсли;
		
		_СписокВетисСтрока.address = _Item.juridicalAddress.addressView;
		
	КонецЦикла;
	
	СписокВетис.Сортировать("name");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСвязь(Команда)
	
	ТекущиеДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	СоздатьСвязьСервер(ТекущиеДанные.Ссылка);
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСвязьСервер(п1сСсылка) Экспорт
	
	_ТекДанные = СписокВетис.НайтиПоИдентификатору(Элементы.СписокВетис.ТекущаяСтрока);
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекДанные1с из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			
			ВетисСоответствие.Добавить(_ТекДанные1с.Ссылка, _ТекДанные.guid, _ТекДанные.name, _ТекДанные.inn);
			
		КонецЦикла;
		
	Иначе
		ВетисСоответствие.Добавить(п1сСсылка, _ТекДанные.guid, _ТекДанные.name, _ТекДанные.inn);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСвязь(Команда)
	
	УдалитьСвязьСервер();
	
	Элементы.СправочникСписок.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязьСервер()
	
	Если Элементы.СправочникСписок.ВыделенныеСтроки.Количество() > 0 Тогда
		Для Каждого _ТекДанные из Элементы.СправочникСписок.ВыделенныеСтроки Цикл
			
			ВетисСоответствие.Удалить(_ТекДанные.Ссылка);
			
		КонецЦикла;
	Иначе
		_ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
		
		ВетисСоответствие.Удалить(_ТекДанные.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВетисВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	_ТекДанные = Элементы.СписокВетис.ТекущиеДанные;
	
	Элементы.СправочникСписок.ТекущаяСтрока = СправочникСписокНайти(_ТекДанные.name)
	
КонецПроцедуры

Функция СправочникСписокНайти(пНаименование)
	
	Возврат Справочники.Склады.НайтиПоНаименованию(пНаименование);
	
КонецФункции


&НаКлиенте
Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	_ТекДанные = Элементы.СправочникСписок.ТекущиеДанные;
	
	ВетисСтрокаПоиска = _ТекДанные.name;
	
	ВетисСтрокаПоискаИНН = _ТекДанные.inn;
	
	Если ЗначениеЗаполнено(ВетисСтрокаПоискаИНН) Тогда
		
		СписокВетисЗаполнитьСервер(,ВетисСтрокаПоискаИНН);
		
		Если СписокВетис.Количество() > 0 Тогда
			
			ВетисСоответствие.Добавить(_ТекДанные.Ссылка, СписокВетис[0].guid, СписокВетис[0].name, СписокВетис[0].inn);
			
			Элементы.СправочникСписок.Обновить();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВетисСтрокаПоискаПриИзменении(Элемент)
	
	СписокВетисЗаполнитьСервер(ВетисСтрокаПоиска);
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВетисНайтиПоИНН(Команда)
	
	СписокВетисЗаполнитьСервер(,ВетисСтрокаПоискаИНН);
	
КонецПроцедуры

